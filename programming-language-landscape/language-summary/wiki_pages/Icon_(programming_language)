<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Icon (programming language) - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Icon_(programming_language)","wgTitle":"Icon (programming language)","wgCurRevisionId":761942873,"wgRevisionId":761942873,"wgArticleId":14801,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles lacking in-text citations from June 2013","All articles lacking in-text citations","Pages using ISBN magic links","SNOBOL programming language family","Pattern matching programming languages","Text-oriented programming languages","Dynamically typed programming languages","Icon programming language family","Public-domain software","Programming languages created in 1977"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Icon_(programming_language)","wgRelevantArticleId":14801,"wgRequestId":"WIj4MgpAIDUAACIC7KMAAAAS","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q1156474","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.8"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Icon_(programming_language)"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Icon_(programming_language)&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Icon_(programming_language)&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Icon_(programming_language)"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Icon_programming_language rootpage-Icon_programming_language skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Icon (programming language)</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><table class="plainlinks metadata ambox ambox-style ambox-No_footnotes" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x" data-file-width="48" data-file-height="48" /></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a>, related reading or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, <b>but its sources remain unclear because it lacks <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a></b>. <span class="hide-when-compact">Please help to <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">introducing</a> more precise citations.</span> <small><i>(June 2013)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<table class="infobox vevent" style="width:22em">
<caption class="summary">Icon</caption>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/File:Icon_logo.png" class="image"><img alt="Icon logo.png" src="//upload.wikimedia.org/wikipedia/en/c/cf/Icon_logo.png" width="128" height="144" data-file-width="128" data-file-height="144" /></a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td><a href="/wiki/Multi-paradigm_programming_language" class="mw-redirect" title="Multi-paradigm programming language">multi-paradigm</a>: <a href="/wiki/Structured_programming" title="Structured programming">structured</a>, text-oriented</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_design" title="Software design">Designed&#160;by</a></th>
<td><a href="/wiki/Ralph_Griswold" title="Ralph Griswold">Ralph Griswold</a></td>
</tr>
<tr>
<th scope="row">First&#160;appeared</th>
<td>1977<span class="noprint">; 40&#160;years ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">1977</span>)</span></td>
</tr>
<tr>
<td colspan="2" style="text-align:center"></td>
</tr>
<tr>
<th scope="row" style="white-space: nowrap;"><a href="/wiki/Software_release_life_cycle" title="Software release life cycle">Stable release</a></th>
<td>
<div style="margin:0px;">9.5.1 / June&#160;6, 2013<span class="noprint">; 3 years ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">2013-06-06</span>)</span></div>
</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td><a href="/wiki/Dynamic_typing" class="mw-redirect" title="Dynamic typing">dynamic</a></td>
</tr>
<tr>
<th scope="row">Website</th>
<td><span class="url"><a rel="nofollow" class="external text" href="http://www.cs.arizona.edu/icon">www<wbr />.cs<wbr />.arizona<wbr />.edu<wbr />/icon</a></span></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Major <a href="/wiki/Programming_language_implementation" title="Programming language implementation">implementations</a></th>
</tr>
<tr>
<td colspan="2" style="text-align:center">Icon, Jcon</td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;"><a href="/wiki/Dialect_(computing)" title="Dialect (computing)">Dialects</a></th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/Unicon_programming_language" class="mw-redirect" title="Unicon programming language">Unicon</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced by</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a>, SL5, <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/Unicon_programming_language" class="mw-redirect" title="Unicon programming language">Unicon</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a rel="nofollow" class="external text" href="https://github.com/proebsting/goaldi">Goaldi</a></td>
</tr>
</table>
<p><b>Icon</b> is a <a href="/wiki/Very_high-level_programming_language" title="Very high-level programming language">very high-level programming language</a> featuring <a href="/w/index.php?title=Goal_directed_execution&amp;action=edit&amp;redlink=1" class="new" title="Goal directed execution (page does not exist)">goal directed execution</a> and many facilities for managing <a href="/wiki/String_(computer_science)" title="String (computer science)">strings</a> and textual patterns. It is related to <a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a> and SL5, string processing languages. Icon is not <a href="/wiki/Object-oriented" class="mw-redirect" title="Object-oriented">object-oriented</a>, but an object-oriented extension called Idol was developed in 1996 which eventually became <a href="/wiki/Unicon_programming_language" class="mw-redirect" title="Unicon programming language">Unicon</a>.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Basic_syntax"><span class="tocnumber">1</span> <span class="toctext">Basic syntax</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Goal-directed_execution"><span class="tocnumber">2</span> <span class="toctext">Goal-directed execution</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Generators"><span class="tocnumber">3</span> <span class="toctext">Generators</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Strings"><span class="tocnumber">4</span> <span class="toctext">Strings</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Other_structures"><span class="tocnumber">5</span> <span class="toctext">Other structures</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#String_scanning"><span class="tocnumber">6</span> <span class="toctext">String scanning</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Basic_syntax">Basic syntax</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: Basic syntax">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The Icon language is derived from the <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>-class of <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> languages, and thus has syntax similar to <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> or <a href="/wiki/Pascal_programming_language" class="mw-redirect" title="Pascal programming language">Pascal</a>. Icon is most similar to Pascal, using <code>:=</code> syntax for assignments, the <code>procedure</code> keyword and similar syntax. On the other hand, Icon uses C-style brackets for structuring execution groups, and programs start by running a procedure called "main".</p>
<p>In many ways Icon also shares features with most <a href="/wiki/Scripting_programming_language" class="mw-redirect" title="Scripting programming language">scripting programming languages</a> (as well as <a href="/wiki/SNOBOL" title="SNOBOL">SNOBOL</a> and SL5, from which they were taken): variables do not have to be declared, types are cast automatically, and numbers can be converted to strings and back automatically. Another feature common to many scripting languages, but not all, is the lack of a line-ending character; in Icon, lines not ended by a semicolon get ended by an implied semicolon if it makes sense.</p>
<p>Procedures are the basic building blocks of Icon programs, and although they use Pascal naming they work more like C functions and can return values; there is no <code>function</code> keyword in Icon.</p>
<pre>
 procedure doSomething(aString)
   write(aString)
 end
</pre>
<h2><span class="mw-headline" id="Goal-directed_execution">Goal-directed execution</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Goal-directed execution">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>One of Icon's key concepts is that control structures are based on the "success" or "failure" of expressions, rather than on boolean logic, as in most other programming languages. Under this model, simple comparisons like <code>if&#160;a&#160;&lt;&#160;b</code> do not mean "if the operations to the right evaluate to true" as they would under most languages; instead it means something more like "if the operations to the right <i>succeed"</i>. In this case the &lt; operator succeeds if the comparison is true, so the end result is the same. In addition, the &lt; operator returns its second argument if it succeeds, allowing things like <code>if&#160;a&#160;&lt;&#160;b&#160;&lt;&#160;c</code>, a common type of comparison that in most languages must be written as a conjunction of two inequalities like <code>if&#160;a&#160;&lt;&#160;b&#160;&amp;&amp;&#160;b&#160;&lt;&#160;c</code>.</p>
<p>The utility of this concept becomes much clearer when you consider real-world examples. Since Icon uses success or failure for all flow control, this simple code:</p>
<pre>
if a := read() then write(a)
</pre>
<p>will copy one line of the standard input to standard output. What's interesting about this example is that the code will work even if the read() causes an error, for instance, if the file does not exist. In that case the statement <code>a&#160;:= read()</code> will fail, and write will simply not be called.</p>
<p>Success and failure are passed "up" through functions, meaning that a failure inside a <a href="/wiki/Nested_function" title="Nested function">nested function</a> will cause the functions calling it to fail as well. For instance, we can write a program to copy an entire input file to output in a single line:</p>
<pre>
while write(read())
</pre>
<p>When the read() command fails, at the end of file for instance, the failure will be passed up the chain and write() will fail as well. The while, being a control structure, stops on failure, meaning it stops when the file is empty. For comparison, consider a similar example written in <a href="/wiki/Pseudocode" title="Pseudocode">pseudocode</a> (using syntax close to <a href="/wiki/C%2B%2B" title="C++">C++</a> and derived languages as <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>):</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
 <span class="k">try</span> <span class="o">{</span>
   <span class="k">while</span> <span class="o">((</span><span class="n">a</span> <span class="o">=</span> <span class="n">read</span><span class="o">())</span> <span class="o">!=</span> <span class="n">EOF</span><span class="o">)</span> <span class="o">{</span>
     <span class="n">write</span><span class="o">(</span><span class="n">a</span><span class="o">);</span>
   <span class="o">}</span>
 <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
   <span class="c1">// do nothing, exit the loop</span>
 <span class="o">}</span>
</pre></div>
<p>In this case there are two comparisons needed, one for end of file (EOF) and another for all other errors. Since Java does not allow errors to be compared as logic elements, as under Icon, the lengthy <code class="mw-highlight" dir="ltr"><span class="k">try</span><span class="o">/</span><span class="k">catch</span></code> syntax must be used instead. Try blocks also impose a performance penalty for simply using them, even if no error occurs, a <a href="/w/index.php?title=Distributed_cost&amp;action=edit&amp;redlink=1" class="new" title="Distributed cost (page does not exist)">distributed cost</a> that Icon avoids.</p>
<p>Icon refers to this concept as <i>goal-directed execution</i>, referring to the way that execution continues until some goal is reached. In the example above the goal is to read the entire file; the read command continues to succeed while there is more information to be read, and fails when there isn't. The goal is thus coded directly in the language, instead of using statements checking return codes or similar constructs.</p>
<h2><span class="mw-headline" id="Generators">Generators</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Generators">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Expressions in Icon often return a single value, for instance, <tt>x &lt; 5</tt> will evaluate and succeed if the value of x is less than 5 or fail. However several of the examples below rely on the fact that many expressions do not <i>immediately</i> return success or failure, returning values in the meantime. This drives the examples with <tt>every</tt> and <tt>to</tt>; <tt>every</tt> causes <tt>to</tt> to continue to return values until it fails.</p>
<p>This is a key concept in Icon, known as <a href="/wiki/Generator_(computer_science)" class="mw-redirect" title="Generator (computer science)"><i>generators</i></a>. Generators drive much of the loop functionality in the language, but do so more directly; the programmer does not write a loop and then pull out and compare values, Icon will do all of this for you.</p>
<p>Within the parlance of Icon, the evaluation of an expression or function results in a result sequence. A result sequence contains all the possible values that can be generated by the expression or function. When the result sequence is exhausted (e.g. there are no more values within the result sequence), the expression or function fails. Iteration over the result sequence is achieved either implicitly via Icon's goal directed evaluation or explicitly via the <tt>every</tt> clause.</p>
<p>Icon includes several generator-builders. The <i>alternator</i> syntax allows a series of items to be generated in sequence until one fails:</p>
<pre>
 1 | "hello" | x &lt; 5
</pre>
<p>can generate "1", "hello", and "5" if x is less than 5. Alternators can be read as "or" in many cases, for instance:</p>
<pre>
 if y &lt; (x | 5) then write("y=", y)
</pre>
<p>will write out the value of y if it is smaller than x <i>or</i> 5. Internally Icon checks every value from left to right until one succeeds or the list empties and it returns a failure. Remember that functions will not be called unless the calls within do not fail, so this example can be shortened to:</p>
<pre>
 write("y=", (x | 5) &gt; y)
</pre>
<p>Another simple generator is the <code>to</code>, which generates lists of integers; <code>every write(1 to 10)</code> will do exactly what it seems to. The <i>bang syntax</i> generates every item of a list; <code>every write(!aString)</code> will output each character of aString on a new line.</p>
<p>To demonstrate the power of this concept, consider string operations. Most languages include a function known as <code>find</code> or <code>indexOf</code> that returns the location of a string within another. Consider:</p>
<pre>
 s = "All the world's a stage. And all the men and women merely players";
 i = indexOf("the", s)
</pre>
<p>This code will return 4, the position of the first occurrence of the word "the". To get the next instance of "the" an alternate form must be used,</p>
<pre>
 i = indexOf("the", s, 5)
</pre>
<p>the 5 at the end saying it should look from position 5 on. In order to extract all the occurrences of "the", a loop must be used...</p>
<pre>
 s = "All the world's a stage. And all the men and women merely players";
 i = indexOf("the", s)
 while i != -1 {
   write(i);
   i =  indexOf("the", s, i+1);
 }
</pre>
<p>Under Icon the <tt>find</tt> function is a generator, and will return the next instance of the string each time it is resumed before finally failing after it passes the end of the string. The same code under Icon can be written:</p>
<pre>
 s := "All the world's a stage. And all the men and women merely players"
 every write(find("the",s))
</pre>
<p><tt>find</tt> will return the index of the next instance of "the" each time it is resumed by <tt>every</tt>, eventually passing the end of the string and failing. As in the prior example, this will cause write to fail, and the (one-line) <tt>every</tt> loop to exit.</p>
<p>Of course there are times where you deliberately want to find a string after some point in input, for instance, you might be scanning a text file containing data in multiple columns. Goal-directed execution works here as well, and can be used this way:</p>
<pre>
 write(5 &lt; find("the", s))
</pre>
<p>The position will only be returned if "the" appears after position 5, the comparison will fail otherwise, passing that failure to write() as before. There is one small "trick" to this code that needs to be considered: comparisons return the right hand result, so it is important to put the find on the right hand side of the comparison. If the 5 were placed on the right, 5 would be written.</p>
<p>Icon adds several control structures for looping through generators. The <tt>every</tt> operator is similar to <tt>while</tt>, looping through every item returned by a generator and exiting on failure:</p>
<pre>
  every k := i to j do
   write(someFunction(k))
</pre>
<p>Why use <tt>every</tt> instead of a while loop in this case? Because <tt>while</tt> re-evaluates the first result, but <tt>every</tt> produces all results. The <tt>every</tt> syntax actually injects values into the function in a fashion similar to blocks under <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>. For instance, the above loop can be re-written this way:</p>
<pre>
 every write(someFunction(i to j))
</pre>
<p>Users can build new generators easily using the <tt>suspend</tt> keyword:</p>
<pre>
 procedure findOnlyOdd(pattern, theString)
   every i := find(pattern, theString) do
     if i % 2 = 1 then suspend i
 end
</pre>
<p>This example loops over <i>theString</i> using find to look for <i>pattern</i>. When one is found, and the position is odd, the location is returned from the function with <tt>suspend</tt>. Unlike <tt>return</tt>, <tt>suspend</tt> writes down where it is in the internal generators as well, allowing it to pick up where it left off on the next iteration.</p>
<h2><span class="mw-headline" id="Strings">Strings</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Strings">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In keeping with its script-like functionality, Icon adds a number of features to make working with strings easier. Most notable among these is the <i>scanning</i> system, which repeatedly calls functions on a string:</p>
<pre>
s ? write(find("the"))
</pre>
<p>is a short form of the examples shown earlier. In this case the <i>subject</i> of the <code>find</code> function is placed outside the parameters in front of the question-mark. Icon functions are deliberately (as opposed to automatically) written to identify the subject in parameter lists and allow them to be pulled out in this fashion.</p>
<p>Substrings can be extracted from a string by using a range specification within brackets. A range specification can return a point to a single character, or a slice of the string. Strings can be indexed from either the right or the left. It is important to note that positions within a string are <b>between</b> the characters <sub>1</sub>A<sub>2</sub>B<sub>3</sub>C<sub>4</sub> and can be specified from the right <sub>-3</sub>A<sub>-2</sub>B<sub>-1</sub>C<sub>0</sub></p>
<p>For example</p>
<pre>
 "Wikipedia"[1]     ==&gt; "W"
 "Wikipedia"[3]     ==&gt; "k"
 "Wikipedia"[0]     ==&gt; "a"
 "Wikipedia"[1:3]   ==&gt; "Wi"
 "Wikipedia"[-2:0]  ==&gt; "ia"
 "Wikipedia"[2+:3]  ==&gt; "iki"
</pre>
<p>Where the last example shows using a length instead of an ending position</p>
<p>The subscripting specification can be used as a <a href="/wiki/Value_(computer_science)#lrvalue" title="Value (computer science)">lvalue</a> within an expression. This can be used to insert strings into another string or delete parts of a string. For example,</p>
<pre>
    s := "abc"
    s[2] := "123"   
    s now has a value of "a123c"
    s := "abcdefg"
    s[3:5] := "ABCD"  
    s now has a value of "abABCDefg"
    s := "abcdefg"
    s[3:5] := ""
    s now has a value of "abefg"
</pre>
<p>As noted above, Icon's subscript indices are between the elements. Given the string s&#160;:= "ABCDEFG", the indexes are: <sub>1</sub>A<sub>2</sub>B<sub>3</sub>C<sub>4</sub>D<sub>5</sub>E<sub>6</sub>F<sub>7</sub>G<sub>8</sub>. The slice s[3:5] is the string between the indices 3 and 5, which is the string "CD".</p>
<h2><span class="mw-headline" id="Other_structures">Other structures</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Other structures">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Icon also allows the user to easily construct their own lists (or <i>arrays</i>):</p>
<pre>
aCat := ["muffins", "tabby",  2002, 8]
</pre>
<p>The items within a list can be of any sort, including other structures. To quickly build larger lists, Icon includes the <code>list</code> generator; <code>i&#160;:= list(10, "word")</code> generates a list containing 10 copies of "word".</p>
<p>Like arrays in other languages, Icon allows items to be looked up by position, e.g., <code>weight&#160;:= aCat[4]</code>. As with strings, the indices are between the elements, and a slice of a list can be obtained by specifying the range, e.g., <code>aCat[2:4]</code> produces the list <code>["tabby",2002]</code>. Unlike strings, a slice using a range cannot be a <a href="/wiki/Value_(computer_science)#lrvalue" title="Value (computer science)">lvalue</a>.</p>
<p>The <i>bang-syntax</i>, e.g., <code>every write(!aCat)</code>, will print out four lines, each with one element.</p>
<p>Icon includes stack-like functions, <code>push</code> and <code>pop</code> to allow them to form the basis of stacks and queues.</p>
<p>Icon also includes functionality for sets and tables (known as <i>hashes</i>, <i>associative arrays</i>, <i>dictionaries</i>, etc.):</p>
<pre>
 symbols := table(0)
 symbols["there"] := 1
 symbols["here"] := 2
</pre>
<p>This code creates a table that will use zero as the default value of any unknown key. It then adds two items into it, with the keys "there" and "here", and values 1 and 2.</p>
<h2><span class="mw-headline" id="String_scanning">String scanning</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: String scanning">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>One of the powerful features of Icon is string scanning. The scan string operator, <code>?</code> saves the current string scanning environment and creates a new string scanning environment. The string scanning environment consists of two keyword variables, <code>&amp;subject</code> and <code>&amp;pos</code>. Where &amp;subject is the string being scanned, and &amp;pos is the <i>cursor</i> or current position within the subject string.</p>
<p>For example</p>
<pre>
  s := "this is a string"
  s ? write("subject=[",&amp;subject,"] pos=[",&amp;pos,"]")
</pre>
<p>would produce</p>
<pre>
subject=[this is a string] pos=[1]
</pre>
<p>Built-in and user defined functions can be used to move around within the string being scanned. Many of the built in functions will default to &amp;subject and &amp;pos (for example the <i>find</i> function). The following, for example, will write all blank delimited "words" in a string.</p>
<pre>
  s := "this is a string"
  s ? {                               # Establish string scanning environment 
      while not pos(0) do  {          # Test for end of string 
          tab(many(' '))              # Skip past any blanks
          word := tab(upto(' ') | 0)  # the next word is up to the next blank -or- the end of the line
          write(word)                 # write the word
      }
   }
</pre>
<p>A more complicated example demonstrates the integration of generators and string scanning within the language.</p>
<pre>
 procedure main()
     s := "Mon Dec 8"
     s ? write(Mdate() | "not a valid date")
 end
 # Define a matching function that returns
 # a string that matches a day month dayofmonth
 procedure Mdate()
 # Define some initial values
 static dates
 static days
 initial {
        days := ["Mon","Tue","Wed","Thr","Fri","Sat","Sun"]
        dates := ["Jan","Feb","Mar","Apr","May","Jun",
                  "Jul","Aug","Sep","Oct","Nov","Dec"]
 }
 every suspend   (retval &lt;-  tab(match(!days)) ||     # Match a day
                             =" " ||                  # Followed by a blank
                             tab(match(!dates)) ||    # Followed by the month
                             =" " ||                  # Followed by a blank
                             matchdigits(2)           # Followed by at least 2 digits 
                 ) &amp;
                 (=" " | pos(0) ) &amp;                   # Either a blank or the end of the string
                 retval                               # And finally return the string
 end
 # Matching function that returns a string of n digits
 procedure matchdigits(n)
     suspend (v := tab(many(&amp;digits)) &amp; *v &lt;= n) &amp; v
 end
</pre>
<p>The idiom of <code>expr<sub>1</sub> &amp; expr<sub>2</sub> &amp; expr<sub>3</sub></code> returns the value of the last expression</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Unicon_programming_language" class="mw-redirect" title="Unicon programming language">Unicon programming language</a> (a descendant/enhancement of Icon)</li>
<li><a href="/wiki/CLU_(programming_language)" title="CLU (programming language)">CLU</a> by Barbara Liskov</li>
<li><a href="/wiki/Co-routines" class="mw-redirect" title="Co-routines">Coroutines</a></li>
<li><a href="/wiki/Generator_(computer_programming)" title="Generator (computer programming)">Generator</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The definitive work is <i>The Icon Programming Language</i> (third edition) by Griswold and Griswold, <a href="/wiki/Special:BookSources/1573980013" class="internal mw-magiclink-isbn">ISBN 1-57398-001-3</a>. It is out of print but can be <a rel="nofollow" class="external text" href="http://www.cs.arizona.edu/icon/books.htm">downloaded</a> in PDF form.</p>
<p>Icon also has co-expressions, providing non-local exits for program execution. Please see <i>The Icon Programming language</i> and also Shamim Mohamed's <a rel="nofollow" class="external text" href="http://www.drones.com/coexp/">article</a> <i>Co-expressions in Icon</i>. (This topic should probably be expanded).</p>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table role="presentation" class="mbox-small plainlinks sistersitebox" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wikibooks-logo-en-noslogan.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" data-file-width="400" data-file-height="400" /></a></td>
<td class="mbox-text plainlist">Wikibooks has a book on the topic of: <i><b><a href="https://en.wikibooks.org/wiki/Icon_Programming" class="extiw" title="wikibooks:Icon Programming">Icon Programming</a></b></i></td>
</tr>
</table>
<ul>
<li><a rel="nofollow" class="external text" href="http://www.cs.arizona.edu/icon/index.htm">Icon homepage</a></li>
<li><a rel="nofollow" class="external text" href="http://purl.umn.edu/107698">Oral history interview with Stephen Wampler</a>, <a href="/wiki/Charles_Babbage_Institute" title="Charles Babbage Institute">Charles Babbage Institute</a>, University of Minnesota. Wampler discusses his work on the development of the <a href="/wiki/Icon_programming_language" class="mw-redirect" title="Icon programming language">Icon programming language</a> in the late 1970s at the University of Arizona under <a href="/wiki/Ralph_Griswold" title="Ralph Griswold">Ralph Griswold</a>.</li>
<li><a rel="nofollow" class="external text" href="http://purl.umn.edu/107329">Oral history interview with Robert Goldberg</a>, <a href="/wiki/Charles_Babbage_Institute" title="Charles Babbage Institute">Charles Babbage Institute</a>, University of Minnesota. Goldberg discusses his interaction with <a href="/wiki/Ralph_Griswold" title="Ralph Griswold">Ralph Griswold</a> when working on the <a href="/wiki/Icon_programming_language" class="mw-redirect" title="Icon programming language">Icon programming language</a> in the classroom at <a href="/wiki/Illinois_Institute_of_Technology" title="Illinois Institute of Technology">Illinois Institute of Technology</a>.</li>
<li><a rel="nofollow" class="external text" href="http://purl.umn.edu/107697">Oral history interview with Kenneth Walker</a>, <a href="/wiki/Charles_Babbage_Institute" title="Charles Babbage Institute">Charles Babbage Institute</a>, University of Minnesota. Walker describes the work environment of the Icon project, his interactions with <a href="/wiki/Ralph_Griswold" title="Ralph Griswold">Ralph Griswold</a>, and his own work on an Icon compiler.</li>
<li><a rel="nofollow" class="external text" href="http://rosettacode.org/wiki/Category:Icon">The Icon Programming Language page on</a> <a href="/wiki/Rosetta_Code" title="Rosetta Code">The Rosetta Code comparative programming tasks project site</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1288
Cached time: 20170125190949
Cache expiry: 86400
Dynamic content: true
CPU time usage: 0.112 seconds
Real time usage: 0.156 seconds
Preprocessor visited node count: 1059/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 16277/2097152 bytes
Template argument size: 2146/2097152 bytes
Highest expansion depth: 25/40
Expensive parser function count: 3/500
Lua time usage: 0.037/10.000 seconds
Lua memory usage: 1.56 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  115.059      1 -total
 66.34%   76.326      2 Template:Infobox
 52.42%   60.312      1 Template:Infobox_programming_language
 33.96%   39.072      1 Template:Inline_citations
 20.29%   23.340      1 Template:Ambox
 19.40%   22.323      1 Template:Infobox_software/simple
 14.02%   16.137      2 Template:Start_date_and_age
 10.24%   11.781      1 Template:Wikibooks
  8.36%    9.623      1 Template:Sister_project
  6.39%    7.353      1 Template:Side_box
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:14801-0!*!0!!en!4!* and timestamp 20170125191020 and revision id 761942873
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Icon_(programming_language)&amp;oldid=761942873">https://en.wikipedia.org/w/index.php?title=Icon_(programming_language)&amp;oldid=761942873</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:SNOBOL_programming_language_family" title="Category:SNOBOL programming language family">SNOBOL programming language family</a></li><li><a href="/wiki/Category:Pattern_matching_programming_languages" title="Category:Pattern matching programming languages">Pattern matching programming languages</a></li><li><a href="/wiki/Category:Text-oriented_programming_languages" title="Category:Text-oriented programming languages">Text-oriented programming languages</a></li><li><a href="/wiki/Category:Dynamically_typed_programming_languages" title="Category:Dynamically typed programming languages">Dynamically typed programming languages</a></li><li><a href="/wiki/Category:Icon_programming_language_family" title="Category:Icon programming language family">Icon programming language family</a></li><li><a href="/wiki/Category:Public-domain_software" title="Category:Public-domain software">Public-domain software</a></li><li><a href="/wiki/Category:Programming_languages_created_in_1977" title="Category:Programming languages created in 1977">Programming languages created in 1977</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_lacking_in-text_citations_from_June_2013" title="Category:Articles lacking in-text citations from June 2013">Articles lacking in-text citations from June 2013</a></li><li><a href="/wiki/Category:All_articles_lacking_in-text_citations" title="Category:All articles lacking in-text citations">All articles lacking in-text citations</a></li><li><a href="/wiki/Category:Pages_using_ISBN_magic_links" title="Category:Pages using ISBN magic links">Pages using ISBN magic links</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Icon+%28programming+language%29" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Icon+%28programming+language%29" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Icon_(programming_language)"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:Icon_(programming_language)"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/Icon_(programming_language)" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Icon_(programming_language)&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Icon_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Icon_(programming_language)" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Icon_(programming_language)&amp;oldid=761942873" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Icon_(programming_language)&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q1156474" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Icon_%28programming_language%29&amp;id=761942873" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Icon+%28programming+language%29">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Icon+%28programming+language%29&amp;returnto=Icon+%28programming+language%29&amp;oldid=761942873&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Icon_(programming_language)&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
						<li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D8%A2%D9%8A%D9%83%D9%88%D9%86_(%D9%84%D8%BA%D8%A9_%D8%A8%D8%B1%D9%85%D8%AC%D8%A9)" title="آيكون (لغة برمجة) – Arabic" lang="ar" hreflang="ar" class="interlanguage-link-target">العربية</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Icon" title="Icon – Spanish" lang="es" hreflang="es" class="interlanguage-link-target">Español</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D8%A2%DB%8C%DA%A9%D9%88%D9%86_(%D8%B2%D8%A8%D8%A7%D9%86_%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C)" title="آیکون (زبان برنامه‌نویسی) – Persian" lang="fa" hreflang="fa" class="interlanguage-link-target">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/ICON" title="ICON – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%EC%95%84%EC%9D%B4%EC%BD%98_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4)" title="아이콘 (프로그래밍 언어) – Korean" lang="ko" hreflang="ko" class="interlanguage-link-target">한국어</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Icon_(linguaggio)" title="Icon (linguaggio) – Italian" lang="it" hreflang="it" class="interlanguage-link-target">Italiano</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Icon_(programmeertaal)" title="Icon (programmeertaal) – Dutch" lang="nl" hreflang="nl" class="interlanguage-link-target">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Icon" title="Icon – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Icon" title="Icon – Polish" lang="pl" hreflang="pl" class="interlanguage-link-target">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Icon_(linguagem_de_programa%C3%A7%C3%A3o)" title="Icon (linguagem de programação) – Portuguese" lang="pt" hreflang="pt" class="interlanguage-link-target">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/Icon_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" title="Icon (язык программирования) – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/Icon_(programspr%C3%A5k)" title="Icon (programspråk) – Swedish" lang="sv" hreflang="sv" class="interlanguage-link-target">Svenska</a></li><li class="interlanguage-link interwiki-tg"><a href="https://tg.wikipedia.org/wiki/Icon" title="Icon – Tajik" lang="tg" hreflang="tg" class="interlanguage-link-target">Тоҷикӣ</a></li>					</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q1156474#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 25 January 2017, at 19:10.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Icon_(programming_language)&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.112","walltime":"0.156","ppvisitednodes":{"value":1059,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":16277,"limit":2097152},"templateargumentsize":{"value":2146,"limit":2097152},"expansiondepth":{"value":25,"limit":40},"expensivefunctioncount":{"value":3,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  115.059      1 -total"," 66.34%   76.326      2 Template:Infobox"," 52.42%   60.312      1 Template:Infobox_programming_language"," 33.96%   39.072      1 Template:Inline_citations"," 20.29%   23.340      1 Template:Ambox"," 19.40%   22.323      1 Template:Infobox_software/simple"," 14.02%   16.137      2 Template:Start_date_and_age"," 10.24%   11.781      1 Template:Wikibooks","  8.36%    9.623      1 Template:Sister_project","  6.39%    7.353      1 Template:Side_box"]},"scribunto":{"limitreport-timeusage":{"value":"0.037","limit":"10.000"},"limitreport-memusage":{"value":1639766,"limit":52428800}},"cachereport":{"origin":"mw1288","timestamp":"20170125190949","ttl":86400,"transientcontent":true}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":61,"wgHostname":"mw1183"});});</script>
	</body>
</html>
