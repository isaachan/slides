<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>PL/I - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"PL/I","wgTitle":"PL/I","wgCurRevisionId":751693119,"wgRevisionId":751693119,"wgArticleId":23708,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using ISBN magic links","Wikipedia articles needing clarification from April 2014","Articles needing additional references from March 2012","All articles needing additional references","Articles that may contain original research from March 2012","All articles that may contain original research","Procedural programming languages","PL/I programming language family","Structured programming languages","Concurrent programming languages","IBM software","Programming languages created in 1964","Programming languages with an ISO standard"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"PL/I","wgRelevantArticleId":23708,"wgRequestId":"WJEwQgpAAEQAACYMvgsAAAAN","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q223433","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.math.styles":"ready","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.math.scripts%2Cstyles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.9"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/PL/I"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=PL/I&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=PL/I&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/PL/I"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-PL_I rootpage-PL_I skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">PL/I</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><div role="note" class="hatnote">"New programming language" redirects here. For the process of implementing new programming languages, see <a href="/wiki/Programming_language_design#Design_and_implementation" class="mw-redirect" title="Programming language design">Programming language design §&#160;Design and implementation</a>.</div>
<table class="infobox vevent" style="width:22em">
<caption class="summary">PL/I</caption>
<tr>
<th scope="row"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td><a href="/wiki/Procedural_programming" title="Procedural programming">procedural</a>, <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a>, <a href="/wiki/Structured_programming" title="Structured programming">structured</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_design" title="Software design">Designed&#160;by</a></th>
<td><a href="/wiki/IBM" title="IBM">IBM</a> and the <a href="/wiki/SHARE_(computing)" title="SHARE (computing)">SHARE</a> Language Development Committee</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="organiser"><a href="/wiki/International_Business_Machines" class="mw-redirect" title="International Business Machines">IBM</a></td>
</tr>
<tr>
<th scope="row">First&#160;appeared</th>
<td>1964</td>
</tr>
<tr>
<td colspan="2" style="text-align:center"></td>
</tr>
<tr>
<th scope="row" style="white-space: nowrap;"><a href="/wiki/Software_release_life_cycle" title="Software release life cycle">Stable release</a></th>
<td>
<div style="margin:0px;">IBM Enterprise PL/I for z/OS 5.1<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup> / June 2016</div>
</td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;"><a href="/wiki/Dialect_(computing)" title="Dialect (computing)">Dialects</a></th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/PL/M" title="PL/M">PL/M</a>, <a href="/wiki/XPL" title="XPL">XPL</a>, <a href="/wiki/PL/P" title="PL/P">PL/P</a>, <a href="/wiki/PL/C" title="PL/C">PL/C</a>, <a href="/wiki/IBM_PL/S" title="IBM PL/S">PL/S</a>, <a href="/wiki/PL/AS" class="mw-redirect" title="PL/AS">PL/AS</a>, <a href="/wiki/PL/X" class="mw-redirect" title="PL/X">PL/X</a>, <a href="/wiki/PL-6" title="PL-6">PL-6</a>, PL/8, <a href="/w/index.php?title=Early_PL/I&amp;action=edit&amp;redlink=1" class="new" title="Early PL/I (page does not exist)">EPL</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced by</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/COBOL" title="COBOL">COBOL</a>, <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/CMS-2_(programming_language)" title="CMS-2 (programming language)">CMS-2</a>, <a href="/wiki/SP/k" title="SP/k">SP/k</a>, <a href="/wiki/B_(programming_language)" title="B (programming language)">B</a>, <a href="/wiki/REXX" class="mw-redirect" title="REXX">REXX</a>, <a href="/wiki/AS/400_Control_Language" class="mw-redirect" title="AS/400 Control Language">AS/400 Control Language</a></td>
</tr>
<tr>
<td colspan="2" class="hlist" style="text-align:center;border-top: 1px solid #aaa; padding-top: 3px;">
<ul>
<li><a href="/wiki/File:Wikibooks-logo-en-noslogan.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/16px-Wikibooks-logo-en-noslogan.svg.png" width="16" height="16" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/24px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/32px-Wikibooks-logo-en-noslogan.svg.png 2x" data-file-width="400" data-file-height="400" /></a> <a href="https://en.wikibooks.org/wiki/PL/I" class="extiw" title="wikibooks:PL/I">PL/I</a> at Wikibooks</li>
</ul>
</td>
</tr>
</table>
<p><b>PL/I</b> (<b>Programming Language One</b>, pronounced <span class="nowrap"><span class="IPA nopopups"><a href="/wiki/Help:IPA_for_English" title="Help:IPA for English">/<span style="border-bottom:1px dotted"><span title="'p' in 'pie'">p</span><span title="/iː/ long 'e' in 'seed'">iː</span></span> <span style="border-bottom:1px dotted"><span title="/ɛ/ short 'e' in 'bed'">ɛ</span><span title="'l' in 'lie'">l</span></span> <span style="border-bottom:1px dotted"><span title="'w' in 'wind'">w</span><span title="/ʌ/ short 'u' in 'bud'">ʌ</span><span title="'n' in 'no'">n</span></span>/</a></span></span>) is a <a href="/wiki/Procedural_programming" title="Procedural programming">procedural</a>, <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a> computer <a href="/wiki/Programming_language" title="Programming language">programming language</a> designed for scientific, engineering, business and <a href="/wiki/System_programming" title="System programming">system programming</a> uses. It has been used by various academic, commercial and industrial organizations since it was introduced in the 1960s, and continues to be actively used.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup></p>
<p>PL/I's main domains are <a href="/wiki/Data_processing" title="Data processing">data processing</a>, <a href="/wiki/Numerical_computation" class="mw-redirect" title="Numerical computation">numerical computation</a>, <a href="/wiki/Scientific_computing" class="mw-redirect" title="Scientific computing">scientific computing</a>, and <a href="/wiki/System_programming" title="System programming">system programming</a>; it supports <a href="/wiki/Recursion" title="Recursion">recursion</a>, <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a>, <a href="/wiki/Linked_data_structure" title="Linked data structure">linked data structure</a> handling, <a href="/wiki/Fixed-point_arithmetic" title="Fixed-point arithmetic">fixed-point</a>, <a href="/wiki/Floating-point" class="mw-redirect" title="Floating-point">floating-point</a>, <a href="/wiki/Complex_arithmetic" class="mw-redirect" title="Complex arithmetic">complex</a>, <a href="/wiki/String_(computer_science)" title="String (computer science)">character string</a> handling, and <a href="/wiki/Bit_string" class="mw-redirect" title="Bit string">bit string</a> handling. The language syntax is English-like and suited for describing complex data formats, with a wide set of functions available to verify and manipulate them.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Early_history"><span class="tocnumber">1</span> <span class="toctext">Early history</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Goals_and_principles"><span class="tocnumber">2</span> <span class="toctext">Goals and principles</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Language_summary"><span class="tocnumber">3</span> <span class="toctext">Language summary</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Standardization"><span class="tocnumber">4</span> <span class="toctext">Standardization</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Implementations"><span class="tocnumber">5</span> <span class="toctext">Implementations</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="#IBM_PL.2FI_F_and_D_compilers"><span class="tocnumber">5.1</span> <span class="toctext">IBM PL/I F and D compilers</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Multics_PL.2FI_and_derivatives"><span class="tocnumber">5.2</span> <span class="toctext">Multics PL/I and derivatives</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#IBM_PL.2FI_optimizing_and_checkout_compilers"><span class="tocnumber">5.3</span> <span class="toctext">IBM PL/I optimizing and checkout compilers</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Digital_PL.2FI"><span class="tocnumber">5.4</span> <span class="toctext">Digital PL/I</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Teaching_subset_compilers"><span class="tocnumber">5.5</span> <span class="toctext">Teaching subset compilers</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#IBM_PL.2FI_for_OS.2F2.2C_AIX.2C_Linux.2C_z.2FOS"><span class="tocnumber">5.6</span> <span class="toctext">IBM PL/I for OS/2, AIX, Linux, z/OS</span></a>
<ul>
<li class="toclevel-3 tocsection-12"><a href="#Object_orientation"><span class="tocnumber">5.6.1</span> <span class="toctext">Object orientation</span></a></li>
<li class="toclevel-3 tocsection-13"><a href="#Competitiveness_on_PC_and_with_C"><span class="tocnumber">5.6.2</span> <span class="toctext">Competitiveness on PC and with C</span></a></li>
<li class="toclevel-3 tocsection-14"><a href="#Program_readability_.E2.80.93_making_intentions_explicit"><span class="tocnumber">5.6.3</span> <span class="toctext">Program readability – making intentions explicit</span></a></li>
<li class="toclevel-3 tocsection-15"><a href="#Structured_programming_additions"><span class="tocnumber">5.6.4</span> <span class="toctext">Structured programming additions</span></a></li>
<li class="toclevel-3 tocsection-16"><a href="#Interrupt_handling"><span class="tocnumber">5.6.5</span> <span class="toctext">Interrupt handling</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-17"><a href="#Other_mainframe_and_minicomputer_compilers"><span class="tocnumber">5.7</span> <span class="toctext">Other mainframe and minicomputer compilers</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#PL.2FI_compilers_for_Microsoft_.NET"><span class="tocnumber">5.8</span> <span class="toctext">PL/I compilers for Microsoft .NET</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#PL.2FI_compilers_for_personal_computers_and_Unix"><span class="tocnumber">5.9</span> <span class="toctext">PL/I compilers for personal computers and Unix</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="#Special_purpose_and_system_PL.2FI_compilers"><span class="tocnumber">5.10</span> <span class="toctext">Special purpose and system PL/I compilers</span></a></li>
<li class="toclevel-2 tocsection-21"><a href="#PL.2FI_dialect_compilers"><span class="tocnumber">5.11</span> <span class="toctext">PL/I dialect compilers</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-22"><a href="#Usage"><span class="tocnumber">6</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#Evolution_of_the_PL.2FI_language"><span class="tocnumber">7</span> <span class="toctext">Evolution of the PL/I language</span></a>
<ul>
<li class="toclevel-2 tocsection-24"><a href="#Significant_features_omitted_from_the_standard"><span class="tocnumber">7.1</span> <span class="toctext">Significant features omitted from the standard</span></a>
<ul>
<li class="toclevel-3 tocsection-25"><a href="#Multi_tasking"><span class="tocnumber">7.1.1</span> <span class="toctext">Multi tasking</span></a></li>
<li class="toclevel-3 tocsection-26"><a href="#Preprocessor"><span class="tocnumber">7.1.2</span> <span class="toctext">Preprocessor</span></a></li>
<li class="toclevel-3 tocsection-27"><a href="#Structured_programming_additions_2"><span class="tocnumber">7.1.3</span> <span class="toctext">Structured programming additions</span></a></li>
<li class="toclevel-3 tocsection-28"><a href="#Debug_facilities"><span class="tocnumber">7.1.4</span> <span class="toctext">Debug facilities</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-29"><a href="#Significant_features_developed_since_the_standard"><span class="tocnumber">7.2</span> <span class="toctext">Significant features developed since the standard</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-30"><a href="#Criticisms"><span class="tocnumber">8</span> <span class="toctext">Criticisms</span></a>
<ul>
<li class="toclevel-2 tocsection-31"><a href="#Implementation_issues"><span class="tocnumber">8.1</span> <span class="toctext">Implementation issues</span></a></li>
<li class="toclevel-2 tocsection-32"><a href="#Programmer_issues"><span class="tocnumber">8.2</span> <span class="toctext">Programmer issues</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-33"><a href="#Special_topics_in_PL.2FI"><span class="tocnumber">9</span> <span class="toctext">Special topics in PL/I</span></a>
<ul>
<li class="toclevel-2 tocsection-34"><a href="#Storage_classes"><span class="tocnumber">9.1</span> <span class="toctext">Storage classes</span></a></li>
<li class="toclevel-2 tocsection-35"><a href="#Storage_type_sharing"><span class="tocnumber">9.2</span> <span class="toctext">Storage type sharing</span></a></li>
<li class="toclevel-2 tocsection-36"><a href="#ON-units_and_exception_handling"><span class="tocnumber">9.3</span> <span class="toctext">ON-units and exception handling</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-37"><a href="#Sample_programs"><span class="tocnumber">10</span> <span class="toctext">Sample programs</span></a>
<ul>
<li class="toclevel-2 tocsection-38"><a href="#Hello_world_program"><span class="tocnumber">10.1</span> <span class="toctext">Hello world program</span></a></li>
<li class="toclevel-2 tocsection-39"><a href="#Search_for_a_string"><span class="tocnumber">10.2</span> <span class="toctext">Search for a string</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-40"><a href="#See_also"><span class="tocnumber">11</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-41"><a href="#Notes"><span class="tocnumber">12</span> <span class="toctext">Notes</span></a></li>
<li class="toclevel-1 tocsection-42"><a href="#References"><span class="tocnumber">13</span> <span class="toctext">References</span></a>
<ul>
<li class="toclevel-2 tocsection-43"><a href="#Textbooks"><span class="tocnumber">13.1</span> <span class="toctext">Textbooks</span></a></li>
<li class="toclevel-2 tocsection-44"><a href="#Standards"><span class="tocnumber">13.2</span> <span class="toctext">Standards</span></a></li>
<li class="toclevel-2 tocsection-45"><a href="#Reference_manuals"><span class="tocnumber">13.3</span> <span class="toctext">Reference manuals</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-46"><a href="#External_links"><span class="tocnumber">14</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Early_history">Early history</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=1" title="Edit section: Early history">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In the 1950s and early 1960s, business and scientific users programmed for different computer hardware using different programming languages. Business users were moving from <a href="/wiki/Autocoder" title="Autocoder">Autocoders</a> via <a href="/wiki/COMTRAN" title="COMTRAN">COMTRAN</a> to <a href="/wiki/COBOL" title="COBOL">COBOL</a>, while scientific users programmed in General Interpretive Programme (GIP), <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>, <a href="/wiki/GEORGE_(programming_language)" title="GEORGE (programming language)">GEORGE</a>, and others. The <a href="/wiki/IBM_System/360" title="IBM System/360">IBM System/360</a><sup id="cite_ref-AndEarly_3-0" class="reference"><a href="#cite_note-AndEarly-3">[3]</a></sup> (announced in 1964 but not delivered until 1966) was designed as a common machine architecture for both groups of users, superseding all existing IBM architectures. Similarly, IBM wanted a single programming language for all users. It hoped that Fortran could be extended to include the features needed by commercial programmers. In October 1963 a committee was formed<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup> composed originally of three IBMers from New York and three members of <a href="/wiki/SHARE_(computing)" title="SHARE (computing)">SHARE</a>, the IBM scientific users group, to propose these extensions to Fortran. Given the constraints of Fortran, they were unable to do this and embarked on the design of a "new programming language" based loosely on <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> labeled "NPL". This acronym conflicted with that of the UK's National Physical Laboratory and was replaced briefly by MPPL (MultiPurpose Programming Language) and, in 1965, with PL/I (with a <a href="/wiki/Roman_numeral" class="mw-redirect" title="Roman numeral">Roman numeral</a> "I" ). The first definition appeared in April 1964.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[5]</a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6">[6]</a></sup></p>
<p>IBM took NPL as a starting point and completed the design to a level that the first compiler could be written: the NPL definition was incomplete in scope and in detail.<sup id="cite_ref-characteristics1978_7-0" class="reference"><a href="#cite_note-characteristics1978-7">[7]</a></sup> Control of the PL/I language<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup> was vested initially in the New York Programming Center and later at the IBM UK Laboratory at <a href="/wiki/IBM_Hursley" title="IBM Hursley">Hursley</a>. The SHARE and <a href="/wiki/GUIDE_International" title="GUIDE International">GUIDE</a> user groups were involved in extending the language and had a role in IBM's process for controlling the language through their PL/I Projects. The experience of defining such a large language showed the need for a formal definition of PL/I. A project was set up in 1967 in <a href="/w/index.php?title=IBM_Laboratory_Vienna&amp;action=edit&amp;redlink=1" class="new" title="IBM Laboratory Vienna (page does not exist)">IBM Laboratory Vienna</a> to make an unambiguous and complete specification.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup> This led in turn to one of the first large scale <a href="/wiki/Formal_Methods" class="mw-redirect" title="Formal Methods">Formal Methods</a> for development, <a href="/wiki/Vienna_Development_Method" title="Vienna Development Method">VDM</a>.</p>
<p><a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> is credited with ensuring PL/I had the CHARACTER data type.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup></p>
<p>The language was first specified in detail in the manual "PL/I Language Specifications. C28-6571" written in New York from 1965 and superseded by "PL/I Language Specifications. GY33-6003" written in Hursley from 1967. IBM continued to develop PL/I in the late sixties and early seventies, publishing it in the GY33-6003 manual. These manuals were used by the <a href="/wiki/Multics" title="Multics">Multics</a> group and other early implementers.</p>
<p>The first compiler was delivered in 1966. The Standard for PL/I was approved in 1976.</p>
<h2><span class="mw-headline" id="Goals_and_principles">Goals and principles</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=2" title="Edit section: Goals and principles">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The goals for PL/I evolved during the early development of the language. Competitiveness with COBOL's record handling and report writing capabilities was needed. The "scope of usefulness" of the language grew to include <a href="/wiki/System_programming" title="System programming">system programming</a> and <a href="/wiki/Event-driven_programming" title="Event-driven programming">event-driven programming</a>. The additional goals for PL/I were:<sup id="cite_ref-AndEarly_3-1" class="reference"><a href="#cite_note-AndEarly-3">[3]</a></sup></p>
<ul>
<li>Performance of compiled code competitive with that of Fortran (but this was not achieved).</li>
<li>Be extensible, for new hardware and new application areas</li>
<li>Improve the productivity and time scales of the programming process, transferring effort from the programmer to the compiler</li>
<li>Be machine-independent and operate effectively across the main hardware and operating system ranges</li>
</ul>
<p>To meet these goals PL/I borrowed ideas from contemporary languages while adding substantial new capabilities and casting it with a distinctive concise and readable syntax. A number of principles and capabilities combined to give the language its character and were key in meeting the goals:</p>
<ul>
<li><a href="/wiki/Block_(programming)" title="Block (programming)">Block structure</a>, with underlying semantics (including <a href="/wiki/Recursion" title="Recursion">recursion</a>), à la <a href="/wiki/Algol_60" class="mw-redirect" title="Algol 60">Algol 60</a>. Arguments are passed using <a href="/wiki/Call_by_reference" class="mw-redirect" title="Call by reference">call by reference</a>, using dummy variables for values where needed (<a href="/wiki/Call_by_value" class="mw-redirect" title="Call by value">call by value</a>).</li>
<li>A wide range of computational data types, program control data types, and forms of data structure (<a href="/wiki/Strong_typing" class="mw-redirect" title="Strong typing">strong typing</a>).</li>
<li>Dynamic extents for arrays and strings with inheritance of extents by procedure parameters.</li>
<li>Concise syntax for expressions, declarations, and statements with permitted abbreviations. Suitable for a character set of 60 glyphs and sub-settable to 48.</li>
<li>An extensive structure of defaults in statements, options, and declarations to hide some complexities and facilitate extending the language while minimizing keystrokes.</li>
<li>Powerful iterative processing with good support for <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a>.</li>
<li>There were to be no <a href="/wiki/Reserved_words" class="mw-redirect" title="Reserved words">reserved words</a> (although the function names <code>DATE</code> and <code>TIME</code>, proved to be impossible to meet this goal). New attributes, statements and statement options could be added to PL/I without invalidating existing programs. Not even <code>IF, THEN, ELSE</code>, and <code>DO</code> were reserved.<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup></li>
<li><a href="/wiki/Orthogonality" title="Orthogonality">Orthogonality</a>: each capability to be independent of other capabilities and freely combined with other capabilities wherever meaningful. Each capability to be available in all contexts where meaningful, to exploit it as widely as possible and to avoid "arbitrary restrictions". Orthogonality helps makes the language "large".<sup class="noprint Inline-Template" style="margin-left:0.1em; white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify"><span title="The text near this tag may need clarification or removal of jargon. (April 2014)">clarification needed</span></a></i>]</sup></li>
<li><a href="/wiki/Exception_handling" title="Exception handling">Exception handling</a> capabilities for controlling and intercepting exceptional conditions at run time.</li>
<li>Programs divided into separately compilable sections, with extensive compile-time facilities (a.k.a. <a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">macros</a>), not part of the standard, for tailoring and combining sections of source code into complete programs. External names to bind separately compiled procedures into a single program.</li>
<li>Debugging facilities integrated into the language.</li>
</ul>
<h2><span class="mw-headline" id="Language_summary">Language summary</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=3" title="Edit section: Language summary">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The language is designed to be all things to all programmers.<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup> The summary is extracted from the ANSI PL/I Standard<sup id="cite_ref-ReferenceA_13-0" class="reference"><a href="#cite_note-ReferenceA-13">[13]</a></sup> and the ANSI PL/I General-Purpose Subset Standard.<sup id="cite_ref-SubsetG_14-0" class="reference"><a href="#cite_note-SubsetG-14">[14]</a></sup></p>
<p>A PL/I program consists of a set of procedures, each of which is written as a sequence of statements. The <code>%INCLUDE</code> construct is used to include text from other sources during program translation. All of the statement types are summarized here in groupings which give an overview of the language (the Standard uses this organization).</p>
<table class="wikitable" style="width:60%;">
<tr>
<th style="width:40%;">Category</th>
<th>Statement</th>
</tr>
<tr>
<td>Structural</td>
<td><code>PROCEDURE</code> (or <code>PROC</code>)<br />
<code>ENTRY</code><br />
<code>BEGIN</code><br />
<code>DO</code><br />
<code>END</code></td>
</tr>
<tr>
<td>Declarative</td>
<td><code>DECLARE</code> (or <code>DCL</code>)<br />
<code>DEFAULT</code> (or <code>DFT</code>)<br />
<code>FORMAT</code></td>
</tr>
<tr>
<td>Flow of control</td>
<td><code>CALL</code><br />
<code>IF</code><br />
<code>SELECT</code><br />
<code>GO TO</code><br />
<code>RETURN</code><br />
<code>STOP</code><br />
Null statement</td>
</tr>
<tr>
<td>Interrupt handling</td>
<td><code>ON</code><br />
<code>SIGNAL</code><br />
<code>REVERT</code></td>
</tr>
<tr>
<td>Storage</td>
<td><code>ALLOCATE</code> (or <code>ALLOC</code>)<br />
<code>FREE</code><br />
Assignment statement</td>
</tr>
<tr>
<td>Input/Output</td>
<td><code>OPEN</code><br />
<code>CLOSE</code></td>
</tr>
<tr>
<td>Stream input/output</td>
<td><code>GET</code><br />
<code>PUT</code></td>
</tr>
<tr>
<td>Record input/output</td>
<td><code>READ</code><br />
<code>WRITE</code><br />
<code>REWRITE</code><br />
<code>LOCATE</code><br />
<code>DELETE</code></td>
</tr>
</table>
<p>(Features such as <a href="/wiki/Computer_multitasking" title="Computer multitasking">multi-tasking</a> and the <a href="/wiki/PL/I_preprocessor" title="PL/I preprocessor">PL/I preprocessor</a> are not in the Standard but are supported in the PL/I F compiler and some other implementations are discussed in the Language evolution section.)</p>
<p>Names may be declared to represent data of the following types, either as single values, or as aggregates in the form of arrays, with a lower-bound and upper-bound per dimension, or structures (comprising nested structure, array and scalar variables):</p>
<table>
<tr>
<td>
<ul>
<li><code>Arithmetic</code> (expanded below)</li>
<li><code>CHARACTER</code></li>
<li><code>PICTURE for Arithmetic data</code></li>
<li><code>PICTURE for Character data</code></li>
</ul>
</td>
<td>
<ul>
<li><code>AREA</code></li>
<li><code>BIT</code></li>
<li><code>ENTRY</code></li>
<li><code>FILE</code></li>
</ul>
</td>
<td>
<ul>
<li><code>FORMAT</code></li>
<li><code>LABEL</code></li>
<li><code>OFFSET</code></li>
<li><code>POINTER</code></li>
</ul>
</td>
</tr>
</table>
<p>The <code>arithmetic</code> type comprises these attributes:</p>
<table>
<tr>
<td>
<ul>
<li>a base (<code>BINARY</code> or <code>DECIMAL</code>), and</li>
<li>a scale (<code>FIXED</code> or <code>FLOAT</code>), and</li>
<li>a mode (<code>REAL</code> or <code>COMPLEX</code>), and</li>
<li>a <code>PRECISION</code> (<code>number of digits</code>, and for fixed point numbers, a <code>scale factor</code>)</li>
</ul>
</td>
</tr>
</table>
<p>The base, scale, precision and <a href="/wiki/Scale_factor" title="Scale factor">scale factor</a> of the <code>Picture-for-arithmetic</code> type is encoded within the <code>picture-specification</code>. The mode is specified separately, with the <code>picture specification</code> applied to both the real and the imaginary parts.</p>
<p>Values are computed by expressions written using a specific set of operations and builtin functions, most of which may be applied to aggregates as well as to single values, together with user-defined procedures which, likewise, may operate on and return aggregate as well as single values. The assignment statement assigns values to one or more variables.</p>
<p>There are no reserved words in PL/I. A statement is terminated by a semi-colon. The maximum length of a statement is implementation defined. A comment may appear anywhere in a program where a space is permitted and is preceded by the characters forward slash, asterisk and is terminated by the characters asterisk, forward slash (i.e. <code class="mw-highlight" id="" style="" dir="ltr">/* This is a comment. */</code>). Statements may have a label-prefix introducing an entry name (<code>ENTRY</code> and <code>PROCEDURE</code> statements) or label name, and a condition prefix enabling or disabling a computational condition&#160;–  e.g. <code>(NOSIZE)</code>). Entry and label names may be single identifiers or identifiers followed by a subscript list of constants (as in <code>L(12,2):A=0;</code>).</p>
<p>A sequence of statements becomes a <i>group</i> when preceded by a <code>DO</code> statement and followed by an <code>END</code> statement. Groups may include nested groups and begin blocks. The <code>IF</code> statement specifies a group or a single statement as the <code>THEN</code> part and the <code>ELSE</code> part (see the sample program). The group is the unit of iteration. The begin <i>block</i> (<code>BEGIN; stmt-list END;</code>) may contain declarations for names and internal procedures local to the block. A <i>procedure</i> starts with a <code>PROCEDURE</code> statement and is terminated syntactically by an <code>END</code> statement. The body of a procedure is a sequence of blocks, groups, and statements and contains declarations for names and procedures local to the procedure or <code>EXTERNAL</code> to the procedure.</p>
<p>An <i>ON-unit</i> is a single statement or block of statements written to be executed when one or more of these <i>conditions</i> occur:</p>
<p>a <i>computational condition</i>,</p>
<table>
<tr>
<td>
<ul>
<li><code>CONVERSION (CONV)</code></li>
<li><code>FIXEDOVERFLOW (FOFL)</code></li>
<li><code>OVERFLOW (OFL)</code></li>
<li><code>SIZE</code></li>
</ul>
</td>
<td>
<ul>
<li><code>STRINGRANGE (STRG)</code></li>
<li><code>STRINGSIZE (STRZ)</code></li>
<li><code>SUBSCRIPTRANGE (SUBRG)</code></li>
<li><code>UNDERFLOW (UFL)</code></li>
</ul>
</td>
<td>
<ul>
<li><code>ZERODIVIDE (ZDIV)</code></li>
<li class="mw-empty-elt"></li>
<li class="mw-empty-elt"></li>
<li class="mw-empty-elt"></li>
</ul>
</td>
</tr>
</table>
<p>or an <i>Input/Output</i> condition,</p>
<table>
<tr>
<td>
<ul>
<li><code>ENDFILE(file)</code></li>
<li><code>ENDPAGE(file)</code></li>
<li><code>KEY(file)</code></li>
<li><code>NAME(file)</code></li>
</ul>
</td>
<td>
<ul>
<li><code>RECORD(file)</code></li>
<li><code>TRANSMIT(file)</code></li>
<li><code>UNDEFINEDFILE(file) (UNDF)</code></li>
<li class="mw-empty-elt"></li>
</ul>
</td>
</tr>
</table>
<p>or one of the conditions:</p>
<ul>
<li><code>AREA</code>, <code>CONDITION (identifier)</code>, <code>ERROR</code>, <code>FINISH</code></li>
</ul>
<p>A declaration of an identifier may contain one or more of the following attributes (but they need to be mutually consistent):</p>
<table class="wikitable">
<tr>
<th>Data Attributes</th>
<th>Input/Output Attributes</th>
<th>Other Attributes</th>
</tr>
<tr>
<td><code>ALIGNED</code></td>
<td><code>DIRECT</code></td>
<td><code>AUTOMATIC or AUTO</code></td>
</tr>
<tr>
<td><code>AREA[( area-size)]</code></td>
<td><code>ENVIRONMENT(options) or ENV...</code></td>
<td><code>BASED[(reference)]</code></td>
</tr>
<tr>
<td><code>BINARY [(precision)] or BIN...</code></td>
<td><code>INPUT</code></td>
<td><code>BUILTIN</code></td>
</tr>
<tr>
<td><code>BIT [(maximum-length)]</code></td>
<td><code>KEYED</code></td>
<td><code>CONDITION or COND</code></td>
</tr>
<tr>
<td><code>CHARACTER[(maximum-length)] or CHAR...</code></td>
<td><code>OUTPUT</code></td>
<td><code>CONSTANT</code></td>
</tr>
<tr>
<td><code>COMPLEX [(precision)] or CPLX...</code></td>
<td><code>PRINT</code></td>
<td><code>CONTROLLED or CTL</code></td>
</tr>
<tr>
<td><code>DECIMAL [(precision)] or DEC...</code></td>
<td><code>SEQUENTIAL or SEQL</code></td>
<td><code>DEFINED[( reference)] or DEF...</code></td>
</tr>
<tr>
<td><code>(dimension-attribute)</code></td>
<td><code>STREAM</code></td>
<td><code>EXTERNAL or EXT</code></td>
</tr>
<tr>
<td><code>ENTRY[(parameter descriptor list]</code></td>
<td><code>UPDATE</code></td>
<td><code>GENERIC(criteria list)</code></td>
</tr>
<tr>
<td><code>FILE</code></td>
<td><code>RECORD</code></td>
<td><code>INITIAL(value-list) or INIT...</code></td>
</tr>
<tr>
<td><code>FIXED [(precision)]</code></td>
<td></td>
<td><code>INTERNAL or INT</code></td>
</tr>
<tr>
<td><code>FLOAT [(number of digits)]</code></td>
<td></td>
<td><code>LIKE unsubscripted reference</code></td>
</tr>
<tr>
<td><code>FORMAT</code></td>
<td></td>
<td><code>LOCAL</code></td>
</tr>
<tr>
<td><code>LABEL</code></td>
<td></td>
<td><code>OPTIONS(options)</code></td>
</tr>
<tr>
<td><code>MEMBER</code></td>
<td></td>
<td><code>PARAMETER or PARM</code></td>
</tr>
<tr>
<td><code>NONVARYING or NONVAR</code></td>
<td></td>
<td><code>POSITION [(expression)] or POS...</code></td>
</tr>
<tr>
<td><code>OFFSET[(reference)]</code></td>
<td></td>
<td><code>STATIC</code></td>
</tr>
<tr>
<td><code>PICTURE picture-specification or PIC...</code></td>
<td></td>
<td><code>VARIABLE</code></td>
</tr>
<tr>
<td><code>POINTER or PTR</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>STRUCTURE</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>UNALIGNED or UNAL</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td><code>VARYING or VAR</code></td>
<td></td>
<td></td>
</tr>
</table>
<p>Current compilers from Kednos, <a href="/wiki/Micro_Focus" class="mw-redirect" title="Micro Focus">Micro Focus</a>, and particularly that from IBM implement many extensions over the standardized version of the language. The IBM extensions are summarised in the Implementation sub-section for the compiler later. Although there are some extensions common to these compilers the lack of a current standard means that compatibility is not guaranteed.</p>
<h2><span class="mw-headline" id="Standardization">Standardization</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=4" title="Edit section: Standardization">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Language standardization began in April 1966 in Europe with <a href="/wiki/European_Computer_Manufacturers_Association" class="mw-redirect" title="European Computer Manufacturers Association">ECMA</a> TC10. In 1969 <a href="/wiki/American_National_Standards_Institute" title="American National Standards Institute">ANSI</a> established a "Composite Language Development Committee", nicknamed "Kludge", which fortunately was renamed X3J1 PL/I.<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup> Standardization became a joint effort of ECMA TC/10 and ANSI X3J1. A subset of the GY33-6003<sup id="cite_ref-16" class="reference"><a href="#cite_note-16">[16]</a></sup> document was offered to the joint effort by IBM and became the base document for standardization. The major features omitted from the base document were <a href="/wiki/Computer_multitasking" title="Computer multitasking">multitasking</a> and the attributes for <a href="/wiki/Program_optimization" title="Program optimization">program optimization</a> (e.g. <code>NORMAL</code> and <code>ABNORMAL</code>).</p>
<p>Proposals to change the base document were voted upon by both committees. In the event that the committees disagreed, the chairs, initially Michael Marcotty of <a href="/wiki/General_Motors" title="General Motors">General Motors</a> and <a href="/wiki/C.A.R._Hoare" class="mw-redirect" title="C.A.R. Hoare">C.A.R. Hoare</a> representing <a href="/wiki/International_Computers_Limited" title="International Computers Limited">ICL</a> had to resolve the disagreement. In addition to IBM, <a href="/wiki/Honeywell" title="Honeywell">Honeywell</a>, <a href="/wiki/Control_Data_Corporation" title="Control Data Corporation">CDC</a>, <a href="/wiki/Data_General" title="Data General">Data General</a>, <a href="/wiki/Digital_Equipment" class="mw-redirect" title="Digital Equipment">Digital Equipment</a>, <a href="/wiki/Prime_Computer" title="Prime Computer">Prime Computer</a>, <a href="/wiki/Burroughs_Corporation" title="Burroughs Corporation">Burroughs</a>, <a href="/wiki/RCA" title="RCA">RCA</a>, and <a href="/wiki/Univac" class="mw-redirect" title="Univac">Univac</a> served on X3J1 along with major users <a href="/wiki/Eastman_Kodak" class="mw-redirect" title="Eastman Kodak">Eastman Kodak</a>, <a href="/wiki/MITRE" class="mw-redirect" title="MITRE">MITRE</a>, <a href="/wiki/Union_Carbide" title="Union Carbide">Union Carbide</a>, <a href="/wiki/Bell_Laboratories" class="mw-redirect" title="Bell Laboratories">Bell Laboratories</a>, and various government and university representatives. Further development of the language occurred in the standards bodies, with continuing improvements in structured programming and internal consistency, and with the omission of the more obscure or contentious features.</p>
<p>As language development neared an end, X3J1/TC10 realized that there were a number of problems with a document written in English text. Discussion of a single item might appear in multiple places which might or might not agree. It was difficult to determine if there were omissions as well as inconsistencies. Consequently, David Beech (IBM), Robert Freiburghouse (Honeywell), Milton Barber (CDC), M. Donald MacLaren (<a href="/wiki/Argonne_National_Laboratory" title="Argonne National Laboratory">Argonne National Laboratory</a>), Craig Franklin (Data General), Lois Frampton (Digital Equipment), and editor, D.J. Andrews of IBM undertook to rewrite the entire document, each producing one or more complete chapters. The standard is couched as a formal definition<sup id="cite_ref-ReferenceA_13-1" class="reference"><a href="#cite_note-ReferenceA-13">[13]</a></sup> using a "PL/I Machine"<sup id="cite_ref-17" class="reference"><a href="#cite_note-17">[17]</a></sup> to specify the semantics. It was the first, and possibly the only, programming language standard to be written as a semi-formal definition.</p>
<p>A "PL/I General-Purpose Subset" ("Subset-G") standard was issued by ANSI in 1981<sup id="cite_ref-SubsetG_14-1" class="reference"><a href="#cite_note-SubsetG-14">[14]</a></sup> and a revision published in 1987.<sup id="cite_ref-18" class="reference"><a href="#cite_note-18">[18]</a></sup> The General Purpose subset was widely adopted as the kernel for PL/I implementations.</p>
<h2><span class="mw-headline" id="Implementations">Implementations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=5" title="Edit section: Implementations">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="IBM_PL.2FI_F_and_D_compilers">IBM PL/I F and D compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=6" title="Edit section: IBM PL/I F and D compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>PL/I was first implemented by IBM, at its <a href="/wiki/Hursley_Laboratories" class="mw-redirect" title="Hursley Laboratories">Hursley Laboratories</a> in the United Kingdom, as part of the development of <a href="/wiki/System/360" class="mw-redirect" title="System/360">System/360</a>. The first production PL/I <a href="/wiki/Compiler" title="Compiler">compiler</a> was the PL/I F compiler for the <a href="/wiki/OS/360" class="mw-redirect" title="OS/360">OS/360</a> Operating System, built by John Nash's team at Hursley in the UK: the runtime library team was managed by I.M. (Nobby) Clarke. The PL/I F compiler was written entirely in System/360 assembly language.<sup id="cite_ref-Krasun_19-0" class="reference"><a href="#cite_note-Krasun-19">[19]</a></sup> Release 1 shipped in 1966. OS/360 was a real-memory environment and the compiler was designed for systems with as little as 64 kilobytes of real storage – F being 64 kB in S/360 parlance. To fit a large compiler into the 44 kilobytes of memory available on a 64-kilobyte machine, the compiler consisted of a control phase and a large number of compiler phases (approaching 100). The phases were brought into memory from disk, and released, one at a time to handle particular language features and aspects of compilation.</p>
<p>Aspects of the language were still being designed as PL/I F was implemented, so some were omitted until later releases. PL/I RECORD I/O was shipped with PL/I F Release 2. The <a href="/wiki/List_processing" class="mw-redirect" title="List processing">list processing</a> functions<sup id="cite_ref-20" class="reference"><a href="#cite_note-20">[20]</a></sup>&#160;–  Based Variables, Pointers, Areas and Offsets and LOCATE-mode I/O&#160;–  were first shipped in Release 4. In a major attempt to speed up PL/I code to compete with Fortran object code, PL/I F Release 5 did substantial <a href="/wiki/Program_optimization" title="Program optimization">program optimization</a> of DO-loops facilitated by the REORDER option on procedures.</p>
<p>A version of PL/I F was released on the <a href="/wiki/TSS/360" class="mw-redirect" title="TSS/360">TSS/360</a> timesharing operating system for the <a href="/wiki/System/360_Model_67" class="mw-redirect" title="System/360 Model 67">System/360 Model 67</a>, adapted at the IBM Mohansic Lab. The IBM La Gaude Lab in France developed "Language Conversion Programs"<sup id="cite_ref-21" class="reference"><a href="#cite_note-21">[21]</a></sup> to convert Fortran, Cobol, and Algol programs to the PL/I F level of PL/I.</p>
<p>The PL/I D compiler, using 16 kilobytes of memory, was developed by IBM Germany for the <a href="/wiki/DOS/360" class="mw-redirect" title="DOS/360">DOS/360</a> low end operating system. It implemented a subset of the PL/I language requiring all strings and arrays to have fixed extents, thus simplifying the run-time environment. Reflecting the underlying operating system it lacked dynamic storage allocation and the <i>controlled</i> storage class.<sup id="cite_ref-22" class="reference"><a href="#cite_note-22">[22]</a></sup> It was shipped within a year of PL/I F.</p>
<h3><span class="mw-headline" id="Multics_PL.2FI_and_derivatives">Multics PL/I and derivatives</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=7" title="Edit section: Multics PL/I and derivatives">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Compilers were implemented by several groups in the early 1960s. The <a href="/wiki/Multics" title="Multics">Multics</a> project at <a href="/wiki/MIT" class="mw-redirect" title="MIT">MIT</a>, one of the first to develop an operating system in a high-level language, used Early PL/I (EPL), a subset dialect of PL/I, as their implementation language in 1964. EPL was developed at <a href="/wiki/Bell_Labs" title="Bell Labs">Bell Labs</a> and MIT by <a href="/wiki/Douglas_McIlroy" title="Douglas McIlroy">Douglas McIlroy</a>, <a href="/wiki/Robert_Morris_(cryptographer)" title="Robert Morris (cryptographer)">Robert Morris</a>, and others. The influential Multics PL/I compiler, described on the "Multicians" website,<sup id="cite_ref-23" class="reference"><a href="#cite_note-23">[23]</a></sup> was the source of compiler technology used by a number of manufacturers and software groups.</p>
<p>The Honeywell PL/I compiler (for Series 60) was an implementation of the full ANSI X3J1 standard.<sup id="cite_ref-24" class="reference"><a href="#cite_note-24">[24]</a></sup></p>
<h3><span class="mw-headline" id="IBM_PL.2FI_optimizing_and_checkout_compilers">IBM PL/I optimizing and checkout compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=8" title="Edit section: IBM PL/I optimizing and checkout compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The PL/I Optimizer and Checkout compilers produced in Hursley supported a common level of PL/I language<sup id="cite_ref-25" class="reference"><a href="#cite_note-25">[25]</a></sup> and aimed to replace the PL/I F compiler. The checkout compiler was a rewrite of PL/I F in BSL, IBM's PL/I-like proprietary implementation language (later <a href="/wiki/PL/S" class="mw-redirect" title="PL/S">PL/S</a>).<sup id="cite_ref-Krasun_19-1" class="reference"><a href="#cite_note-Krasun-19">[19]</a></sup> The performance objectives set for the compilers are shown in an IBM presentation to the BCS.<sup id="cite_ref-26" class="reference"><a href="#cite_note-26">[26]</a></sup> The compilers had to produce identical results&#160;–  the Checkout Compiler was used to debug programs that would then be submitted to the Optimizer. Given that the compilers had entirely different designs and were handling the full PL/I language this goal was challenging: it was achieved.</p>
<p>The PL/I optimizing compiler took over from the PL/I F compiler and was IBM's workhorse compiler from the 1970s to the 1990s. Like PL/I F, it was a multiple pass compiler with a 44 kilobyte design point, but it was an entirely new design. Unlike the F compiler, it had to perform compile time evaluation of constant expressions using the run-time library, reducing the maximum memory for a compiler phase to 28 kilobytes. A second-time around design, it succeeded in eliminating the annoyances of PL/I F such as cascading diagnostics. It was written in S/360 Macro Assembler by a team, led by Tony Burbridge, most of whom had worked on PL/I F. Macros were defined to automate common compiler services and to shield the compiler writers from the task of managing real-mode storage, allowing the compiler to be moved easily to other memory models. The gamut of program optimization techniques developed for the contemporary IBM Fortran H compiler were deployed: the Optimizer equaled Fortran execution speeds in the hands of good programmers. Announced with the IBM S/370 in 1970, it shipped first for the <a href="/wiki/DOS/360" class="mw-redirect" title="DOS/360">DOS/360</a> operating system in August 1971, and shortly afterward for OS/360, and the first virtual memory IBM operating systems <a href="/wiki/OS/VS1" title="OS/VS1">OS/VS1</a>, <a href="/wiki/MVS" title="MVS">MVS</a>, and <a href="/wiki/VM/CMS" class="mw-redirect" title="VM/CMS">VM/CMS</a>. (The developers were unaware that while they were shoehorning the code into 28 kb sections, IBM Poughkeepsie was finally ready to ship virtual memory support in OS/360). It supported the batch programming environments and, under TSO and CMS, it could be run interactively. This compiler went through many versions covering all mainframe operating systems including the operating systems of the Japanese PCMs.</p>
<p>The compiler has been superseded by "IBM PL/I for OS/2, AIX, Linux, z/OS" below.</p>
<p>The PL/I checkout compiler,<sup id="cite_ref-27" class="reference"><a href="#cite_note-27">[27]</a></sup><sup id="cite_ref-28" class="reference"><a href="#cite_note-28">[28]</a></sup> (colloquially "The Checker") announced in August 1970 was designed to speed and improve the debugging of PL/I programs. The team was led by Brian Marks. The three-pass design cut the time to compile a program to 25% of that taken by the F Compiler. It was run from an interactive terminal, converting PL/I programs into an internal format, "H-text". This format was interpreted by the Checkout compiler at run-time, detecting virtually all types of errors. Pointers were represented in 16 bytes, containing the target address and a description of the referenced item, thus permitting "bad" pointer use to be diagnosed. In a conversational environment when an error was detected, control was passed to the user who could inspect any variables, introduce debugging statements and edit the source program. Over time the debugging capability of mainframe programming environments developed most of the functions offered by this compiler and it was withdrawn (in the 1990s?)</p>
<h3><span class="mw-headline" id="Digital_PL.2FI">Digital PL/I</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=9" title="Edit section: Digital PL/I">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Perhaps the most commercially successful implementation aside from IBM's was Digital Equipment's 1988 release of the ANSI PL/I 1987 subset. The implementation is "a strict superset of the ANSI X3.4-1981 PL/I General Purpose Subset and provides most of the features of the new ANSI X3.74-1987 PL/I General Purpose Subset".<sup id="cite_ref-29" class="reference"><a href="#cite_note-29">[29]</a></sup> The front end was designed by Robert Freiburghouse, and the code generator was implemented by <a href="/wiki/Dave_Cutler" title="Dave Cutler">Dave Cutler</a>, who managed the design and implementation of <a href="/wiki/VAX/VMS" class="mw-redirect" title="VAX/VMS">VAX/VMS</a>. It runs on VMS on VAX and <a href="/wiki/ALPHA" class="mw-redirect" title="ALPHA">ALPHA</a> and on <a href="/wiki/Tru64" class="mw-redirect" title="Tru64">Tru64</a>. <a href="/wiki/UniPrise_Systems" title="UniPrise Systems">UniPrise Systems</a>, Inc., was responsible for the compiler;<sup id="cite_ref-30" class="reference"><a href="#cite_note-30">[30]</a></sup> it is currently supported by Kednos Corporation.<sup id="cite_ref-kednos.com_31-0" class="reference"><a href="#cite_note-kednos.com-31">[31]</a></sup></p>
<h3><span class="mw-headline" id="Teaching_subset_compilers">Teaching subset compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=10" title="Edit section: Teaching subset compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In the late 1960s and early 1970s, many US and Canadian Universities were establishing time-sharing services on campus and needed conversational compiler/interpreters for use in teaching science, mathematics, engineering, and computer science. <a href="/wiki/Dartmouth_College" title="Dartmouth College">Dartmouth</a> were developing <a href="/wiki/BASIC" title="BASIC">BASIC</a>, but PL/I was a popular choice, as it was concise and easy to teach. As the IBM offerings were unsuitable,<sup id="cite_ref-32" class="reference"><a href="#cite_note-32">[32]</a></sup> a number of schools built their own subsets of PL/I and their own interactive support. Examples are:</p>
<p>A compiler developed at <a href="/wiki/Cornell_University" title="Cornell University">Cornell University</a> for teaching a dialect called <a href="/wiki/PL/C" title="PL/C">PL/C</a>, which had the unusual capability of never failing to compile any program through the use of extensive automatic correction of many syntax errors and by converting any remaining syntax errors to output statements. The language was almost all of PL/I as implemented by IBM.<sup id="cite_ref-33" class="reference"><a href="#cite_note-33">[33]</a></sup> PL/C was a very fast compiler.</p>
<p>PLAGO, created at the <a href="/wiki/Polytechnic_Institute_of_Brooklyn" class="mw-redirect" title="Polytechnic Institute of Brooklyn">Polytechnic Institute of Brooklyn</a>, used a simplified subset of the PL/I language<sup id="cite_ref-34" class="reference"><a href="#cite_note-34">[34]</a></sup> and focused on good diagnostic error messages and fast compilation times.</p>
<p>The Computer Systems Research Group of the University of Toronto produced the <a href="/wiki/SP/k" title="SP/k">SP/k</a> compilers which supported a sequence of subsets of PL/I called SP/1, SP/2, SP/3, ..., SP/8 for teaching programming. Programs that ran without errors under the SP/k compilers produced the same results under other contemporary PL/I compilers such as IBM's PL/I F compiler, IBM's checkout compiler or Cornell University's PL/C compiler.<sup id="cite_ref-35" class="reference"><a href="#cite_note-35">[35]</a></sup></p>
<p>Other examples are PL0 by P. Grouse at the University of New South Wales, PLUM by Marvin Zelkowitz at the University of Maryland.,<sup id="cite_ref-36" class="reference"><a href="#cite_note-36">[36]</a></sup> and PLUTO from the University of Toronto.</p>
<h3><span class="mw-headline" id="IBM_PL.2FI_for_OS.2F2.2C_AIX.2C_Linux.2C_z.2FOS">IBM PL/I for OS/2, AIX, Linux, z/OS</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=11" title="Edit section: IBM PL/I for OS/2, AIX, Linux, z/OS">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In a major revamp of PL/I, IBM Santa Teresa in California launched an entirely new compiler in 1992. The initial shipment was for OS/2 and included most ANSI-G features and many new PL/I features.<sup id="cite_ref-37" class="reference"><a href="#cite_note-37">[37]</a></sup> Subsequent releases covered additional platforms (MVS, VM, OS/390, AIX and Windows)<sup id="cite_ref-38" class="reference"><a href="#cite_note-38">[38]</a></sup> and continued to add functions to make PL/I fully competitive with other languages offered on the PC (particularly C and C++) in areas where it had been overtaken. The corresponding "IBM Language Environment" supports inter-operation of PL/I programs with Database and Transaction systems, and with programs written in C, C++, and COBOL, the compiler supports all the data types needed for intercommunication with these languages.</p>
<p>The PL/I design principles were retained and withstood this major extension comprising several new data types, new statements and statement options, new exception conditions, and new organisations of program source. The resulting language is a compatible super-set of the PL/I Standard and of the earlier IBM compilers. Major topics added to PL/I were:</p>
<ul>
<li>New attributes for better support of object-oriented programming – the <code>DEFINE ALIAS</code>, <code>ORDINAL</code>, and <code>DEFINE STRUCTURE</code> statement to introduce user-defined types, the <code>HANDLE</code> locator data type, the <code>TYPE</code> data type itself, the <code>UNION</code> data type, and built-in functions for manipulating the new types.</li>
<li>Additional data types and attributes corresponding to common PC data types (e.g. <code>UNSIGNED</code>, <code>VARYINGZ</code>).</li>
<li>Improvements in readability of programs – often rendering implied usages explicit (e.g. <code>BYVALUE</code> attribute for parameters)</li>
<li>Additional structured programming constructs.</li>
<li>Interrupt handling additions.</li>
<li>Compile time preprocessor extended to offer almost all PL/I string handling features and to interface with the Application Development Environment</li>
</ul>
<p>The latest series of PL/I compilers for z/OS, called Enterprise PL/I for z/OS, leverage code generation for the latest z/Architecture processors (z990, zEC12, Z13) via the use of ARCHLVL parm control passed during compilation, and was the second High level language supported by z/OS Language Environment to do so (XL C/C++ being the first, and Enterprise COBOL v5 the last.)</p>
<h4><span class="mw-headline" id="Object_orientation">Object orientation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=12" title="Edit section: Object orientation">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p><code>ORDINAL</code> is a new computational data type. The ordinal facilities are like those in <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, e.g. <code>DEFINE ORDINAL Colour (red, yellow, green, blue, violet);</code> but in addition the name and internal values are accessible via built-in functions. Built-in functions provide access to an ordinal value's predecessor and successor.</p>
<p>The <code>DEFINE-statement</code> (see below) allows additional <code>TYPE</code>s to be declared composed from PL/I's built-in attributes.</p>
<p>The <code>HANDLE(data structure)</code> locator data type is similar to the <code>POINTER</code> data type, but strongly typed to bind only to a particular data structure. The <code>=&gt;</code> operator is used to select a data structure using a handle.</p>
<p>The <code>UNION</code> attribute (equivalent to <code>CELL</code> in early PL/I specifications) permits several scalar variables, arrays, or structures to share the same storage in a unit that occupies the amount of storage needed for the largest alternative.</p>
<h4><span class="mw-headline" id="Competitiveness_on_PC_and_with_C">Competitiveness on PC and with C</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=13" title="Edit section: Competitiveness on PC and with C">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>These attributes were added:</p>
<ul>
<li>The string attributes <code>VARYINGZ</code> (for zero-terminated character strings), <code>HEXADEC</code>, <code>WIDECHAR</code>, and <code>GRAPHIC</code>.</li>
<li>The optional arithmetic attributes <code>UNSIGNED</code> and <code>SIGNED</code>, <code>BIGENDIAN</code> and <code>LITTLEENDIAN</code>. <code>UNSIGNED</code> necessitated the <code>UPTHRU</code> and <code>DOWNTHRU</code> option on iterative groups enabling a counter-controlled loop to be executed without exceeding the limit value (also essential for <code>ORDINAL</code>s and good for documenting loops.</li>
<li>The <code>DATE(pattern)</code> attribute for controlling date representations and additions to bring time and date to best current practice. New functions for manipulating dates include&#160;–  <code>DAYS</code> and <code>DAYSTODATE</code> for converting between dates and number of days, and a general <code>DATETIME</code> function for changing date formats.</li>
</ul>
<p>New string-handling functions were added&#160;–  to centre text, to edit using a picture format, and to trim blanks or selected characters from the head or tail of text, <code>VERIFYR</code> to <code>VERIFY</code> from the right. and <code>SEARCH</code> and <code>TALLY</code> functions.</p>
<p>Compound assignment operators a la C e.g. <code>+=</code>, <code>&amp;=</code>, <code>-=</code>, <code>||=</code> were added. <code>A+=1</code> is equivalent to <code>A=A+1</code>.</p>
<p>Additional parameter <a href="/wiki/Data_descriptor" title="Data descriptor">descriptors</a> and attributes were added for omitted arguments and variable length argument lists.</p>
<h4><span class="mw-headline" id="Program_readability_.E2.80.93_making_intentions_explicit">Program readability – making intentions explicit</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=14" title="Edit section: Program readability – making intentions explicit">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>The <code>VALUE</code> attribute declares an identifier as a constant (derived from a specific literal value or restricted expression).</p>
<p>Parameters can have the <code>BYADDR</code> (pass by address) or <code>BYVALUE</code> (pass by value) attributes.</p>
<p>The <code>ASSIGNABLE</code> and <code>NONASSIGNABLE</code> attributes prevent unintended assignments.</p>
<p><code>DO FOREVER;</code> obviates the need for the contrived construct <code>DO WHILE ( '1'B );</code>.</p>
<p>The <code>DEFINE-statement</code> introduces user-specified names (e.g. <code>INTEGER</code>) for combinations of built-in attributes (e.g. <code>FIXED BINARY(31,0)</code>). Thus <code>DEFINE ALIAS INTEGER FIXED BINARY(31.0)</code> creates the <code>TYPE</code> name <code>INTEGER</code> as an alias for the set of built-in attributes FIXED BINARY(31.0). <code>DEFINE STRUCTURE</code> applies to structures and their members; it provides a <code>TYPE</code> name for a set of structure attributes and corresponding substructure member declarations for use in a structure declaration (a generalisation of the <code>LIKE</code> attribute).</p>
<h4><span class="mw-headline" id="Structured_programming_additions">Structured programming additions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=15" title="Edit section: Structured programming additions">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>A <code>LEAVE</code> statement to exit a loop, and an <code>ITERATE</code> to continue with the next iteration of a loop.</p>
<p><code>UPTHRU</code> and <code>DOWNTHRU</code> options on iterative groups.</p>
<p>The package construct consisting of a set of procedures and declarations for use as a unit. Variables declared outside of the procedures are local to the package, and can use <code>STATIC</code>, <code>BASED</code> or <code>CONTROLLED</code> storage. Procedure names used in the package also are local, but can be made external by means of the <code>EXPORTS</code> option of the <code>PACKAGE-statement</code>.</p>
<h4><span class="mw-headline" id="Interrupt_handling">Interrupt handling</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=16" title="Edit section: Interrupt handling">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>The <code>RESIGNAL-statement</code> executed in an ON-unit terminates execution of the ON-unit, and raises the condition again in the procedure that called the current one (thus passing control to the corresponding ON-unit for that procedure).</p>
<p>The <code>INVALIDOP</code> condition handles invalid operation codes detected by the PC processor, as well as illegal arithmetic operations such as subtraction of two infinite values.</p>
<p>The <code>ANYCONDITION</code> condition is provided to intercept conditions for which no specific ON-unit has been provided in the current procedure.</p>
<p>The <code>STORAGE</code> condition is raised when an <code>ALLOCATE</code> statement is unable to obtain sufficient storage.</p>
<h3><span class="mw-headline" id="Other_mainframe_and_minicomputer_compilers">Other mainframe and minicomputer compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=17" title="Edit section: Other mainframe and minicomputer compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A number of vendors produced compilers to compete with IBM PL/I F or Optimizing compiler on mainframes and minicomputers in the 1970s. In the 1980s the target was usually the emerging ANSI-G subset.</p>
<ul>
<li>In 1974 <a href="/wiki/Burroughs_Corporation" title="Burroughs Corporation">Burroughs Corporation</a> announced PL/I for the B6700 and B7700.<sup id="cite_ref-39" class="reference"><a href="#cite_note-39">[39]</a></sup></li>
<li><a href="/wiki/UNIVAC" title="UNIVAC">UNIVAC</a> released a UNIVAC PL/I,<sup id="cite_ref-40" class="reference"><a href="#cite_note-40">[40]</a></sup> and in the 1970s also used a variant of PL/I, PL/I PLUS, for system programming.</li>
<li>From 1978 <a href="/wiki/Data_General" title="Data General">Data General</a> provided PL/I on its <a href="/wiki/Data_General_Eclipse" title="Data General Eclipse">Eclipse</a> and <a href="/wiki/Data_General_Eclipse" title="Data General Eclipse">Eclipse MV</a> platforms running the <a href="/wiki/Data_General_AOS" title="Data General AOS">AOS</a>, <a href="/wiki/AOS/VS" class="mw-redirect" title="AOS/VS">AOS/VS</a> &amp; <a href="/wiki/AOS/VS_II" title="AOS/VS II">AOS/VS II</a> operating systems.<sup id="cite_ref-41" class="reference"><a href="#cite_note-41">[41]</a></sup> A number of operating system utility programs were written in the language.</li>
<li><a href="/wiki/Control_Data_Corporation" title="Control Data Corporation">CDC</a> delivered an optimizing subset PL/I compiler for Cyber 70, 170 and 6000 series.<sup id="cite_ref-42" class="reference"><a href="#cite_note-42">[42]</a></sup></li>
<li>Fujitsu delivered a PL/I compiler equivalent to the PL/I Optimizer.</li>
<li><a href="/wiki/Prime_Computer" title="Prime Computer">Prime Computer</a> utilized <a href="/wiki/PL/P" title="PL/P">PL/P</a> in the later years of the 50 series to implement the portions of <a href="/wiki/PRIMOS" title="PRIMOS">PRIMOS</a> that were not still written in <a href="/wiki/Fortran_IV" class="mw-redirect" title="Fortran IV">Fortran IV</a>.</li>
<li>Stratus Technologies PL/I is an ANSI G implementation.<sup id="cite_ref-43" class="reference"><a href="#cite_note-43">[43]</a></sup></li>
<li>PL/G Subset for IBM Series/1 Mini Computer with Real Time extensions PL/I Language Reference GC34-0085-0</li>
</ul>
<h3><span class="mw-headline" id="PL.2FI_compilers_for_Microsoft_.NET">PL/I compilers for Microsoft .NET</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=18" title="Edit section: PL/I compilers for Microsoft .NET">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li>In 2011, Raincode designed a full legacy compiler for the <a href="/wiki/Microsoft_.NET" class="mw-redirect" title="Microsoft .NET">Microsoft .NET</a> platform, named Raincode PL/I.</li>
</ul>
<h3><span class="mw-headline" id="PL.2FI_compilers_for_personal_computers_and_Unix">PL/I compilers for personal computers and Unix</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=19" title="Edit section: PL/I compilers for personal computers and Unix">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li>In 1972 <a href="/wiki/Gary_Kildall" title="Gary Kildall">Gary Kildall</a> implemented a subset "PL/M" for Intel. <a href="/wiki/PL/M" title="PL/M">PL/M</a> was used to write the <a href="/wiki/CP/M" title="CP/M">CP/M</a> operating system proper&#160;–  and much application software running on CP/M and <a href="/wiki/MP/M" title="MP/M">MP/M</a>. <a href="/wiki/Digital_Research" title="Digital Research">Digital Research</a> sold a PL/I compiler<sup id="cite_ref-44" class="reference"><a href="#cite_note-44">[44]</a></sup> for the Personal Computer written in PL/M. PL/M was used to write much other software at Intel for the 8080, 8085, and <a href="/wiki/Z-80" class="mw-redirect" title="Z-80">Z-80</a> processors during the 1970s.</li>
<li>PL/M-86 was a version of the PL/M language for the 8086 and 8088 microprocessor. It was heavily used by <a href="/wiki/Daisy_Systems" title="Daisy Systems">Daisy Systems</a> for electronic design automation software on the "Logician" family of special-purpose workstations.</li>
<li><a href="/wiki/Micro_Focus" class="mw-redirect" title="Micro Focus">Micro Focus</a> implemented Open PL/I<sup id="cite_ref-45" class="reference"><a href="#cite_note-45">[45]</a></sup> for Windows and UNIX/Linux systems, which they acquired from Liant.</li>
<li>IBM delivered PL/I for <a href="/wiki/OS/2" title="OS/2">OS/2</a><sup id="cite_ref-46" class="reference"><a href="#cite_note-46">[46]</a></sup> (1994).</li>
<li>Iron Spring PL/I for <a href="/wiki/OS/2" title="OS/2">OS/2</a> and later <a href="/wiki/Linux" title="Linux">Linux</a> was introduced in 2007.</li>
</ul>
<h3><span class="mw-headline" id="Special_purpose_and_system_PL.2FI_compilers">Special purpose and system PL/I compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=20" title="Edit section: Special purpose and system PL/I compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li>A subset of <a href="/wiki/PL/P" title="PL/P">PL/P</a> was used to write new portions of <a href="/wiki/Prime_Computer" title="Prime Computer">Prime Computer</a> <a href="/wiki/PRIMOS" title="PRIMOS">PRIMOS</a> at all rings of protection in its later revisions.</li>
<li>IBM delivered PL/I for the Series/1 computer family in the 1970s.<sup id="cite_ref-47" class="reference"><a href="#cite_note-47">[47]</a></sup></li>
<li>Paul Abrahams of NYU's Courant Institute of Mathematical Sciences wrote CIMS PL/I in 1972 in PL/I, bootstrapping via PL/I F. It supported "about 70%" of PL/I compiling to the CDC 6600<sup id="cite_ref-48" class="reference"><a href="#cite_note-48">[48]</a></sup></li>
<li><a href="/wiki/PL/8" title="PL/8">PL/8</a> (or PL.8), so-called because it was about 80% of PL/I, was developed by IBM Research in the 1970s, and is used for several IBM internal systems development tasks (e.g. <a href="/wiki/Millicode" title="Millicode">millicode</a> for <a href="/wiki/Z/Architecture" title="Z/Architecture">z/Architecture</a>)</li>
<li><a href="/wiki/Honeywell,_Inc." class="mw-redirect" title="Honeywell, Inc.">Honeywell, Inc.</a> developed <a href="/wiki/PL-6" title="PL-6">PL-6</a> for use in creating the <a href="/wiki/Honeywell_CP-6" title="Honeywell CP-6">CP-6</a> operating system.</li>
</ul>
<h3><span class="mw-headline" id="PL.2FI_dialect_compilers">PL/I dialect compilers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=21" title="Edit section: PL/I dialect compilers">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="/wiki/IBM_PL/S" title="IBM PL/S">PL/S</a>, a dialect of PL/I, initially called BSL was developed in the late 1960s and became the <a href="/wiki/IBM" title="IBM">IBM</a> <a href="/wiki/System_programming" title="System programming">system programming</a> language. Almost all IBM mainframe system software in the 1970s and 1980s was written in PL/S. It differed from PL/I in that there were no data type conversions, no run-time environment, structures were mapped differently, and assignment was a byte by byte copy. All strings and arrays had fixed extents, or used the <code>REFER</code> option. IBM uses an improved and renamed PL/S for internal work on current operating systems, <a href="/wiki/OS/390" title="OS/390">OS/390</a> and now <a href="/wiki/Z/OS" title="Z/OS">z/OS</a>.</li>
<li><a href="/wiki/XPL" title="XPL">XPL</a> is a dialect of XPL used to write other compilers using the XPL compiler techniques. XPL added a heap string datatype to its small subset of PL/I.</li>
<li><a href="/wiki/HAL/S" title="HAL/S">HAL/S</a> is a real-time aerospace programming language, best known for its use in the Space Shuttle program. It was designed by Intermetrics in the 1970s for NASA. HAL/S was implemented in XPL.</li>
<li>IBM and various subcontractors also developed another PL/I variant in the early 1970s to support signal processing for the Navy called SPL/I.</li>
<li><a href="/wiki/SabreTalk" title="SabreTalk">SabreTalk</a>, a real-time dialect of PL/I used to program the <a href="/wiki/Sabre_(computer_system)" title="Sabre (computer system)">Sabre</a> airline reservation system.</li>
</ul>
<h2><span class="mw-headline" id="Usage">Usage</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=22" title="Edit section: Usage">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>PL/I implementations were developed for mainframes from the late 1960s, mini computers in the 1970s, and personal computers<sup id="cite_ref-49" class="reference"><a href="#cite_note-49">[49]</a></sup> in the 1980s and 1990s. Although its main use has been on <a href="/wiki/Mainframe_computer" title="Mainframe computer">mainframes</a>, there are PL/I versions for <a href="/wiki/DOS" title="DOS">DOS</a>, <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>, <a href="/wiki/OS/2" title="OS/2">OS/2</a>, <a href="/wiki/AIX_operating_system" class="mw-redirect" title="AIX operating system">AIX</a>, <a href="/wiki/OpenVMS" title="OpenVMS">OpenVMS</a>, and <a href="/wiki/Unix" title="Unix">Unix</a>.</p>
<p>It has been widely used in business data processing<sup id="cite_ref-50" class="reference"><a href="#cite_note-50">[50]</a></sup> and for system use for writing operating systems on certain platforms. Very complex and powerful systems have been built with PL/I:</p>
<p>The <a href="/wiki/SAS_System" class="mw-redirect" title="SAS System">SAS System</a> was initially written in PL/I; the SAS data step is still modeled on PL/I syntax.</p>
<p>The pioneering online airline reservation system <a href="/wiki/Sabre_(computer_system)" title="Sabre (computer system)">Sabre</a> was originally written for the IBM 7090 in assembler. The S/360 version was largely written using <a href="/wiki/SabreTalk" title="SabreTalk">SabreTalk</a>, a purpose built subset PL/I compiler for a dedicated control program.</p>
<p>PL/I was used to write an executable formal definition<sup id="cite_ref-51" class="reference"><a href="#cite_note-51">[51]</a></sup> to interpret IBM's <a href="/wiki/System_Network_Architecture" class="mw-redirect" title="System Network Architecture">System Network Architecture</a></p>
<p>PL/I did not fulfill its supporters' hopes that it would displace Fortran and COBOL and become the major player on mainframes. It remained a minority but significant player. There cannot be a definitive explanation for this, but some trends in the 1970s and 1980s militated against its success by progressively reducing the territory on which PL/I enjoyed a competitive advantage.</p>
<p>First, the nature of the mainframe software environment changed. Application subsystems for <a href="/wiki/Database" title="Database">database</a> and <a href="/wiki/Transaction_processing" title="Transaction processing">transaction processing</a> (<a href="/wiki/CICS" title="CICS">CICS</a> and <a href="/wiki/Information_Management_System" class="mw-redirect" title="Information Management System">IMS</a> and <a href="/wiki/Oracle_Database" title="Oracle Database">Oracle</a> on System 370) and application generators became the focus of mainframe users' application development. Significant parts of the language became irrelevant because of the need to use the corresponding native features of the subsystems (such as tasking and much of input/output). Fortran was not used in these application areas, confining PL/I to COBOL's territory; most users stayed with COBOL. But as the PC became the dominant environment for program development, Fortran, COBOL and PL/I all became minority languages overtaken by <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> and the like.</p>
<p>Second, PL/I was overtaken in the system programming field. The IBM system programming community was not ready to use PL/I; instead, IBM developed and adopted a proprietary dialect of PL/I for system programming. – <a href="/wiki/PL/S" class="mw-redirect" title="PL/S">PL/S</a>.<sup id="cite_ref-52" class="reference"><a href="#cite_note-52">[52]</a></sup> With the success of PL/S inside IBM, and of C outside IBM, the unique PL/I strengths for system programming became less valuable.</p>
<p>Third, the development environments grew capabilities for interactive software development that, again, made the unique PL/I interactive and debugging strengths less valuable.</p>
<p>Fourth, COBOL and Fortran added features such as structured programming, character string operations, and object orientation, that further reduced PL/I's relative advantages.</p>
<p>On mainframes there were substantial business issues at stake too. IBM's hardware competitors had little to gain and much to lose from success of PL/I. Compiler development was expensive, and the IBM compiler groups had an in-built competitive advantage. Many IBM users wished to avoid being locked into proprietary solutions. With no early support for PL/I by other vendors it was best to avoid PL/I.</p>
<h2><span class="mw-headline" id="Evolution_of_the_PL.2FI_language">Evolution of the PL/I language</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=23" title="Edit section: Evolution of the PL/I language">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This article uses the PL/I standard as the reference point for language features. But a number of features of significance in the early implementations were not in the Standard; and some were offered by non-IBM compilers. And the de facto language continued to grow after the standard, ultimately driven by developments on the Personal Computer.</p>
<h3><span class="mw-headline" id="Significant_features_omitted_from_the_standard">Significant features omitted from the standard</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=24" title="Edit section: Significant features omitted from the standard">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span class="mw-headline" id="Multi_tasking">Multi tasking</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=25" title="Edit section: Multi tasking">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p><i>Multi tasking</i> was implemented by PL/I F, the Optimizer and the newer AIX and Z/OS compilers. It comprised the data types <code>EVENT</code> and <code>TASK</code>, the <code>TASK-option</code> on the <code>CALL-statement</code> (<a href="/wiki/Fork%E2%80%93join_model" title="Fork–join model">Fork</a>), the <code>WAIT-statement</code> (<a href="/wiki/Fork%E2%80%93join_model" title="Fork–join model">Join</a>), the <code>DELAY(delay-time)</code>, <code>EVENT-option</code>s on the record I/O statements and the <code>UNLOCK</code> statement to unlock locked records on <code>EXCLUSIVE</code> files. Event data identify a particular event and indicate whether it is complete ('1'B) or incomplete ('0'B): task data items identify a particular task (or <a href="/wiki/Process_(computing)" title="Process (computing)">process</a>) and indicate its priority relative to other tasks.</p>
<h4><span class="mw-headline" id="Preprocessor">Preprocessor</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=26" title="Edit section: Preprocessor">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div role="note" class="hatnote">For more details on this topic, see <a href="/wiki/PL/I_preprocessor" title="PL/I preprocessor">PL/I preprocessor</a>.</div>
<p>The first IBM <i>Compile time <a href="/wiki/Preprocessor" title="Preprocessor">preprocessor</a></i> was built by the IBM Boston Advanced Programming Center located in Cambridge, Mass, and shipped with the PL/I F compiler. The <code>%INCLUDE</code> statement was in the Standard, but the rest of the features were not. The DEC and Kednos<sup id="cite_ref-kednos.com_31-1" class="reference"><a href="#cite_note-kednos.com-31">[31]</a></sup> PL/I compilers implemented much the same set of features as IBM, with some additions of their own. IBM has continued to add preprocessor features to its compilers. The preprocessor treats the written source program as a sequence of tokens, copying them to an output source file or acting on them. When a&#160;% token is encountered the following compile time statement is executed: when an identifier token is encountered and the identifier has been <code>DECLARE</code>d, <code>ACTIVATE</code>d, and assigned a compile time value, the identifier is replaced by this value. Tokens are added to the output stream if they do not require action (e.g. <code>+</code>), as are the values of ACTIVATEd compile time expressions. Thus a compile time variable <code>PI</code> could be declared, activated, and assigned using <code>%PI='3.14159265'</code>. Subsequent occurrences of <code>PI</code> would be replaced by <code>3.14159265</code>.</p>
<p>The data type supported are <code>FIXED DECIMAL</code> integers and <code>CHARACTER</code> strings of varying length with no maximum length. The structure statements are:</p>
<ul>
<li><code>%[label-list:]DO iteration: statements;&#160;%[label-list:]END;</code></li>
<li><code>%procedure-name: PROCEDURE (parameter list) RETURNS (type); statements...;</code></li>
<li><code>%[label-list:]END;</code></li>
<li><code>%[label-list:]IF...%THEN...%ELSE..</code></li>
</ul>
<p>and the simple statements, which also may have a [label-list:]</p>
<ul>
<li><code>%ACTIVATE(identifier-list) and&#160;%DEACTIVATE</code></li>
<li><code>assignment</code> statement</li>
<li><code>%DECLARE identifier-attribute-list</code></li>
<li><code>%GO TO label</code></li>
<li><code>%INCLUDE</code></li>
<li><code>null</code> statement</li>
</ul>
<p>The feature allowed programmers to use identifiers for constants&#160;–  e.g. product part numbers or mathematical constants&#160;–  and was superseded in the standard by named constants for computational data. Conditional compiling and iterative generation of source code, possible with compile-time facilities, was not supported by the standard. Several manufacturers implemented these facilities.</p>
<h4><span class="mw-headline" id="Structured_programming_additions_2">Structured programming additions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=27" title="Edit section: Structured programming additions">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>Structured programming additions were made to PL/I during standardization but were not accepted into the standard. These features were the <code>LEAVE-statement</code> to exit from an iterative <code>DO</code>, the <code>UNTIL-option</code> and <code>REPEAT-option</code> added to <code>DO</code>, and a <a href="/wiki/Case_statement" class="mw-redirect" title="Case statement">case statement</a> of the general form: <code>SELECT (expression) {WHEN (expression) group}... OTHERWISE group</code><br />
These features were all included in DEC PL/I.<sup id="cite_ref-53" class="reference"><a href="#cite_note-53">[53]</a></sup></p>
<h4><span class="mw-headline" id="Debug_facilities">Debug facilities</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=28" title="Edit section: Debug facilities">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>PL/I F had offered some debug facilities that were not put forward for the standard but were implemented by others&#160;–  notably the CHECK(variable-list) condition prefix, <code>CHECK</code> on-condition and the <code>SNAP</code> option. The IBM Optimizing and Checkout compilers added additional features appropriate to the conversational mainframe programming environment (e.g. an <code>ATTENTION</code> condition).</p>
<h3><span class="mw-headline" id="Significant_features_developed_since_the_standard">Significant features developed since the standard</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=29" title="Edit section: Significant features developed since the standard">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Several attempts had been made to design a structure member type that could have one of several datatypes (<code>CELL</code> in early IBM). With the growth of <a href="/wiki/Class_(computer_programming)" title="Class (computer programming)">classes</a> in programming theory, approaches to this became possible on a PL/I base&#160;–  <code>UNION</code>, <code>TYPE</code> etc. have been added by several compilers.</p>
<p>PL/I had been conceived in a single-byte character world. With support for Japanese and Chinese language becoming essential, and the developments on International Code Pages, the character string concept was expanded to accommodate wide non-ASCII/EBCDIC strings.</p>
<p>Time and date handling were overhauled to deal with the <a href="/wiki/Y2K_problem" class="mw-redirect" title="Y2K problem">millennium problem</a>, with the introduction of the DATETIME function that returned the date and time in one of about 35 different formats. Several other date functions deal with conversions to and from days and seconds.</p>
<h2><span class="mw-headline" id="Criticisms">Criticisms</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=30" title="Edit section: Criticisms">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="plainlinks metadata ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><a href="/wiki/File:Question_book-new.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" data-file-width="512" data-file-height="399" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This section <b>needs additional citations for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=PL/I&amp;action=edit">improve this article</a> by <a href="/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1" title="Help:Introduction to referencing with Wiki Markup/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(March 2012)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<h3><span class="mw-headline" id="Implementation_issues">Implementation issues</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=31" title="Edit section: Implementation issues">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Though the language is easy to learn and use, implementing a PL/I compiler was difficult and time-consuming. A language as large as PL/I needed subsets that most vendors could produce and most users master. This was not resolved until "ANSI G" was published. The compile time facilities, unique to PL/I, took added implementation effort and additional compiler passes. A PL/I compiler was two to four times as large as comparable Fortran or COBOL compilers, and also that much slower—fortunately offset by gains in programmer productivity. This was anticipated in IBM before the first compilers were written.<sup id="cite_ref-characteristics1978_7-1" class="reference"><a href="#cite_note-characteristics1978-7">[7]</a></sup></p>
<p>Some argued that PL/I was unusually hard to parse.<sup id="cite_ref-54" class="reference"><a href="#cite_note-54">[54]</a></sup> The PL/I <i>keywords</i> were not reserved so programmers could use them as variable or procedure names in programs. Because the original PL/I F compiler attempted <i>auto-correction</i> when it encountered a keyword used in an incorrect context, it often assumed it was a variable name. This led to "cascading diagnostics", a problem solved by later compilers.</p>
<p>The effort needed to produce good object code was perhaps underestimated during the initial design of the language. <a href="/wiki/Program_optimization" title="Program optimization">Program optimization</a> (needed to compete with the excellent program optimization carried out by available Fortran compilers) was unusually complex owing to <a href="/wiki/Side_effects" class="mw-redirect" title="Side effects">side effects</a> and pervasive problems with <a href="/wiki/Aliasing_(computing)" title="Aliasing (computing)">aliasing</a> of variables. Unpredictable modification can occur asynchronously in <a href="/wiki/Exception_handling" title="Exception handling">exception handlers</a>, which may be provided by "ON statements" in (unseen) callers. Together, these make it difficult to reliably predict when a program's variables might be modified at runtime. In typical use, however, user-written error handlers (the <code>ON-unit</code>) do not make assignments to variables. In spite of the aforementioned difficulties, IBM produced its PL/I optimising compiler in 1971.</p>
<p>PL/I contained many rarely used features, such as <a href="/wiki/Computer_multitasking" title="Computer multitasking">multitasking</a> support, which added cost and complexity to the compiler, and its co-processing facilities required a multi-programming environment with support for non-blocking multiple threads for processes by the <a href="/wiki/Operating_system" title="Operating system">operating system</a>. Compiler writers were free to select whether to implement these features.</p>
<p>An undeclared variable was by default being declared by first occurrence—thus misspelling might lead to unpredictable results. This was no different from FORTRAN programs. For PL/I F, however, an attribute listing enabled the programmer to detect any misspelled or undeclared variable.</p>
<h3><span class="mw-headline" id="Programmer_issues">Programmer issues</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=32" title="Edit section: Programmer issues">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Many programmers were slow to move from <a href="/wiki/COBOL" title="COBOL">COBOL</a> or <a href="/wiki/Fortran" title="Fortran">Fortran</a> due to a perceived complexity of the language and immaturity of the PL/I F compiler. Programmers were sharply divided into scientific programmers (who used Fortran) and business programmers (who used COBOL), with significant tension and even dislike between the groups. PL/I syntax borrowed from both COBOL and Fortran syntax. So instead of noticing features that would make their job easier, Fortran programmers of the time noticed COBOL syntax and had the opinion that it was a business language, while COBOL programmers noticed Fortran syntax and looked upon it as a scientific language.</p>
<p>Both COBOL and Fortran programmers viewed it as a "bigger" version of their own language, and both were somewhat intimidated by the language and disinclined to adopt it. Another factor was <i>pseudo</i>-similarities to COBOL, Fortran, and ALGOL. These were PL/I elements that looked similar to one of those languages, but worked differently in PL/I. Such frustrations left many experienced programmers with a jaundiced view of PL/I, and often an active dislike for the language. An early UNIX fortune file contained the following tongue-in-cheek description of the language:</p>
<blockquote>
<p>Speaking as someone who has delved into the intricacies of PL/I, I am sure that only Real Men could have written such a machine-hogging, cycle-grabbing, all-encompassing monster. Allocate an array and free the middle third? Sure! Why not? Multiply a character string times a bit string and assign the result to a float decimal? Go ahead! Free a controlled variable procedure parameter and reallocate it before passing it back? Overlay three different types of variable on the same memory location? Anything you say! Write a recursive macro? Well, no, but Real Men use rescan. How could a language so obviously designed and written by Real Men not be intended for Real Man use?</p>
</blockquote>
<p>On the positive side, full support for <a href="/wiki/Pointer_(computer_programming)" title="Pointer (computer programming)">pointers</a> to all data types (including pointers to structures), <a href="/wiki/Recursion" title="Recursion">recursion</a>, <a href="/wiki/Computer_multitasking" title="Computer multitasking">multitasking</a>, string handling, and extensive built-in <a href="/wiki/Function_(computer_science)" class="mw-redirect" title="Function (computer science)">functions</a> PL/I was indeed quite a leap forward compared to the programming languages of its time. However, these were not enough to convince a majority of programmers or shops to switch to PL/I.</p>
<p>The PL/I F compiler's compile time <a href="/wiki/Preprocessor" title="Preprocessor">preprocessor</a> was unusual (outside the <a href="/wiki/Lisp_programming_language" class="mw-redirect" title="Lisp programming language">Lisp</a> world<sup id="cite_ref-55" class="reference"><a href="#cite_note-55">[55]</a></sup>) in using its target language's syntax and semantics (<i>e.g.</i> as compared to the <a href="/wiki/C_preprocessor" title="C preprocessor">C preprocessor</a>'s "#" directives).</p>
<h2><span class="mw-headline" id="Special_topics_in_PL.2FI">Special topics in PL/I</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=33" title="Edit section: Special topics in PL/I">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="plainlinks metadata ambox ambox-content ambox-Original_research" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/40px-Ambox_important.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/60px-Ambox_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Ambox_important.svg/80px-Ambox_important.svg.png 2x" data-file-width="40" data-file-height="40" /></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This section <b>possibly contains <a href="/wiki/Wikipedia:No_original_research" title="Wikipedia:No original research">original research</a></b>. <span class="hide-when-compact">Please <a class="external text" href="//en.wikipedia.org/w/index.php?title=PL/I&amp;action=edit">improve it</a> by <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verifying</a> the claims made and adding <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a>. Statements consisting only of original research should be removed.</span> <small><i>(March 2012)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<h3><span class="mw-headline" id="Storage_classes">Storage classes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=34" title="Edit section: Storage classes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>PL/I provides several 'storage classes' to indicate how the lifetime of variables' storage is to be managed&#160;–  <code>STATIC, AUTOMATIC, CONTROLLED</code> and <code>BASED</code>. The simplest to implement is <code>STATIC</code>, which indicates that memory is allocated and initialized at load-time, as is done in <a href="/wiki/COBOL" title="COBOL">COBOL</a> "working-storage" and early <a href="/wiki/Fortran" title="Fortran">Fortran</a>. This is the default for <code>EXTERNAL</code> variables. PL/I's default storage class for <code>INTERNAL</code> variables is <code>AUTOMATIC</code>, similar to that of other block-structured languages influenced by <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>, like the "auto" storage class in the <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> language, and default storage allocation in <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a> and "local-storage" in IBM COBOL. Storage for <code>AUTOMATIC</code> variables is allocated upon entry into the <code>BEGIN-block</code>, procedure, or ON-unit in which they are declared. The compiler and runtime system allocate memory for a stack frame to contain them and other housekeeping information. If a variable is declared with an <code>INITIAL-attribute</code>, code to set it to an initial value is executed at this time. Care is required to manage the use of initialization properly. Large amounts of code can be executed to initialize variables every time a scope is entered, especially if the variable is an array or structure. Storage for <code>AUTOMATIC</code> variables is freed at block exit: <code>STATIC, CONTROLLED</code> or <code>BASED</code> variables are used to retain variables' contents between invocations of a procedure or block. <code>CONTROLLED</code> storage is also managed using a stack, but the pushing and popping of allocations on the stack is managed by the programmer, using <code>ALLOCATE</code> and <code>FREE</code> statements. Storage for <code>BASED</code> variables is managed using <code>ALLOCATE/FREE</code>, but instead of a stack these allocations have independent lifetimes and are addressed through <code>OFFSET</code> or <code>POINTER</code> variables.</p>
<h3><span class="mw-headline" id="Storage_type_sharing">Storage type sharing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=35" title="Edit section: Storage type sharing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>There are several ways of accessing allocated storage through different data declarations. Some of these are well defined and safe, some can be used safely with careful programming, and some are inherently unsafe and/or machine dependent.</p>
<p>Passing a variable as an argument to a parameter by reference allows the argument's allocated storage to be referenced using the parameter. The <code>DEFINED</code> attribute (e.g. <code>DCL A(10,10), B(2:9,2:9) DEFINED A</code>) allows part or all of a variable's storage to be used with a different, but consistent, declaration. These two usages are safe and machine independent.</p>
<p>Record I/O and list processing produce situations where the programmer needs to fit a declaration to the storage of the next record or item, before knowing what type of data structure it has. Based variables and pointers are key to such programs. The data structures must be designed appropriately, typically using fields in a data structure to encode information about its type and size. The fields can be held in the preceding structure or, with some constraints, in the current one. Where the encoding is in the preceding structure, the program needs to allocate a based variable with a declaration that matches the current item (using expressions for extents where needed). Where the type and size information are to be kept in the current structure ("self defining structures") the type-defining fields must be ahead of the type dependent items and in the same place in every version of the data structure. The <code>REFER</code>-option is used for self-defining extents (e.g. string lengths as in <code>DCL 1 A BASED, 2 N BINARY, 2 B CHAR(LENGTH REFER A.N), etc</code> &#160;–  where <code>LENGTH</code> is used to allocate instances of the data structure. For self-defining structures, any typing and <code>REFERed</code> fields are placed ahead of the "real" data. If the records in a data set, or the items in a list of data structures, are organised this way they can be handled safely in a machine independent way.</p>
<p>PL/I implementations do not (except for the PL/I Checkout compiler) keep track of the data structure used when storage is first allocated. Any <code>BASED</code> declaration can be used with a pointer into the storage to access the storage&#160;–  inherently unsafe and machine dependent. However this usage has become important for "pointer arithmetic" (typically adding a certain amount to a known address). This has been a contentious subject in computer science. In addition to the problem of wild references and buffer overruns, issues arise due to the alignment and length for data types used with particular machines and compilers. Many cases where pointer arithmetic might be needed involve finding a pointer to an element inside a larger data structure. The <code>ADDR</code> function computes such pointers, safely and machine independently.</p>
<p>Pointer arithmetic may be accomplished by aliasing a binary variable with a pointer as in<br />
<code>DCL P POINTER, N FIXED BINARY(31) BASED(ADDR(P)); N=N+255;</code><br />
It relies on pointers being the same length as <code>FIXED BINARY(31)</code> integers and aligned on the same boundaries.</p>
<p>With the prevalence of C and its free and easy attitude to pointer arithmetic, recent IBM PL/I compilers allow pointers to be used with the addition and subtraction operators to giving the simplest syntax (but compiler options can disallow these practices where safety and machine independence are paramount).</p>
<h3><span class="mw-headline" id="ON-units_and_exception_handling">ON-units and exception handling</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=36" title="Edit section: ON-units and exception handling">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>When PL/I was designed, programs only ran in batch mode, with no possible intervention from the programmer at a terminal. An exceptional condition such as division by zero would abort the program yielding only a hexadecimal core dump. PL/I exception handling, via ON-units, allowed the program to stay in control in the face of hardware or operating system exceptions and to recover debugging information before closing down more gracefully. As a program became properly debugged, most of the exception handling could be removed or disabled: this level of control became less important when conversational execution became commonplace.</p>
<p>Computational exception handling is enabled and disabled by condition prefixes on statements, blocks(including ON-units) and procedures. – e.g. <code>(SIZE, NOSUBSCRIPTRANGE): A(I)=B(I)*C;</code> . Operating system exceptions for Input/Output and storage management are always enabled.</p>
<p>The ON-unit is a single statement or <code>BEGIN</code>-block introduced by an <code>ON-statement</code>. Executing the ON statement enables the condition specified, e.g., <code>ON ZERODIVIDE ON-unit</code>. When the exception for this condition occurs and the condition is enabled, the ON-unit for the condition is executed. ON-units are inherited down the call chain. When a block, procedure or ON-unit is activated, the ON-units established by the invoking activation are inherited by the new activation. They may be over-ridden by another <code>ON-statement</code> and can be reestablished by the <code>REVERT-statement</code>. The exception can be simulated using the <code>SIGNAL-statement</code> – e.g. to help debug the exception handlers. The dynamic inheritance principle for ON-units allows a routine to handle the exceptions occurring within the subroutines it uses.</p>
<p>If no ON-unit is in effect when a condition is raised a standard system action is taken (often this is to raise the <code>ERROR</code> condition). The system action can be reestablished using the <code>SYSTEM</code> option of the <code>ON-statement</code>. With some conditions it is possible to complete executing an ON-unit and return to the point of interrupt (e.g., the <code>STRINGRANGE, UNDERFLOW, CONVERSION, OVERFLOW, AREA and FILE</code> conditions) and resume normal execution. With other conditions such as <code>(SUBSCRIPTRANGE)</code>, the <code>ERROR</code> condition is raised when this is attempted. An ON-unit may be terminated with a <code>GO TO</code> preventing a return to the point of interrupt, but permitting the program to continue execution elsewhere as determined by the programmer.</p>
<p>An ON-unit needs to be designed to deal with exceptions that occur in the ON-unit itself. The <code>ON ERROR SYSTEM;</code> statement allows a nested error trap; if an error occurs within an ON-unit, control might pass to the operating system where a system dump might be produced, or, for some computational conditions, continue execution (as mentioned above).</p>
<p>The PL/I <code>RECORD</code> I/O statements have relatively simple syntax as they do not offer options for the many situations from end-of-file to record transmission errors that can occur when a record is read or written. Instead, these complexities are handled in the ON-units for the various file conditions. The same approach was adopted for <code>AREA</code> sub-allocation and the <code>AREA</code> condition.</p>
<p>The existence of exception handling ON-units can have an effect on optimization, because variables can be inspected or altered in ON-units. Values of variables that might otherwise be kept in registers between statements, may need to be returned to storage between statements. This is discussed in the section on Implementation Issues above.</p>
<h2><span class="mw-headline" id="Sample_programs">Sample programs</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=37" title="Edit section: Sample programs">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Hello_world_program">Hello world program</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=38" title="Edit section: Hello world program">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre>
Hello2: proc options(main);
     put list ('Hello, world!');
end Hello2;
</pre>
<h3><span class="mw-headline" id="Search_for_a_string">Search for a string</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=39" title="Edit section: Search for a string">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<pre>
/* Read in a line, which contains a string,
/* and then print every subsequent line that contains that string. */

find_strings: procedure options (main);
   declare pattern character (100) varying;
   declare line    character (100) varying;
   declare line_no fixed binary;

   on endfile (sysin) stop;

   get edit (pattern) (L);
   line_no = 1;
   do forever;
      get edit (line) (L);
      if index(line, pattern) &gt; 0 then
         put skip list (line_no, line);
      line_no = line_no + 1;
   end;

end find_strings;
</pre>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=40" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/List_of_programming_languages" title="List of programming languages">List of programming languages</a></li>
<li><a href="/wiki/Timeline_of_programming_languages" title="Timeline of programming languages">Timeline of programming languages</a></li>
</ul>
<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=41" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation web">IBM Corporation. <a rel="nofollow" class="external text" href="http://www-01.ibm.com/common/ssi/cgi-bin/ssialias?subtype=ca&amp;infotype=an&amp;supplier=897&amp;letternum=ENUS216-185">"IBM Enterprise PL/I for z/OS, V5.1"</a>. <i>IBM</i><span class="reference-accessdate">. Retrieved <span class="nowrap">June 29,</span> 2016</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.atitle=IBM+Enterprise+PL%2FI+for+z%2FOS%2C+V5.1&amp;rft.au=IBM+Corporation&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww-01.ibm.com%2Fcommon%2Fssi%2Fcgi-bin%2Fssialias%3Fsubtype%3Dca%26infotype%3Dan%26supplier%3D897%26letternum%3DENUS216-185&amp;rft.jtitle=IBM&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation book">Sturm, Eberhard (2009). <i>The New PL/I</i>. Vieweg+Teubner. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-3-8348-0726-7" title="Special:BookSources/978-3-8348-0726-7">978-3-8348-0726-7</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=Eberhard&amp;rft.aulast=Sturm&amp;rft.btitle=The+New+PL%2FI&amp;rft.date=2009&amp;rft.genre=book&amp;rft.isbn=978-3-8348-0726-7&amp;rft.pub=Vieweg%2BTeubner&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-AndEarly-3"><span class="mw-cite-backlink">^ <a href="#cite_ref-AndEarly_3-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-AndEarly_3-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">IBM's 360 and Early 370 Systems, Emerson W. Pugh, Lyle R Johnson, John H Palmer, <a href="/wiki/MIT_Press" title="MIT Press">MIT Press</a>, 1991</span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text">The committee actually had 8 members at the time the report was released. They were:</span>
<ul>
<li><span class="reference-text">Hans Berg, <a href="/wiki/Lockheed_Corporation" title="Lockheed Corporation">Lockheed</a> Burbank</span></li>
<li><span class="reference-text"><a href="/wiki/George_Radin" title="George Radin">George Radin</a>, IBM</span></li>
<li><span class="reference-text">James Cox, <a href="/wiki/Union_Carbide" title="Union Carbide">Union Carbide</a></span></li>
<li><span class="reference-text">Bruce Rosenblatt, <a href="/wiki/Standard_Oil_of_California" class="mw-redirect" title="Standard Oil of California">Standard Oil of California</a>, Chair.</span></li>
<li><span class="reference-text"><a href="/wiki/Douglas_McIlroy" title="Douglas McIlroy">Douglas McIlroy</a>, Bell Laboratories</span></li>
<li><span class="reference-text">Robert Sheppard, <a href="/wiki/Procter_%26_Gamble" title="Procter &amp; Gamble">Procter &amp; Gamble</a>. From the GUIDE organization</span></li>
<li><span class="reference-text">C.W. Medlock, IBM</span></li>
<li><span class="reference-text">Bernice Weitzenhoffer, IBM.</span></li>
</ul>
</li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">Report II of the SHARE Advanced Language Development Committee, June 25, 1964</span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text">Highlights of a New Programming Language, G.Radin and H.Paul Rogoway <a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">Communications of the ACM</a> V8 No 1, Jan 1965</span></li>
<li id="cite_note-characteristics1978-7"><span class="mw-cite-backlink">^ <a href="#cite_ref-characteristics1978_7-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-characteristics1978_7-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Radin, G. The Early History and Characteristics of PL/I. August 1978. ACM <a href="/wiki/SIGPLAN_Notices" class="mw-redirect" title="SIGPLAN Notices">SIGPLAN Notices</a>, Vol 13, No.8</span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text">Control of the language was vested in a dedicated Language Control group and a Language Control Board that included representatives of the compiler groups (6 by 1973) in three countries. Daily communication was by <a href="/wiki/Telex" title="Telex">telex</a>. Changes and extensions were made through a Language Log that reached several thousand detailed points. A management level Language Review Board resolved issues escalated to it by the Control Board.</span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text">The Universal Language Document (ULD). Technical reports TR25.081, TR25.082, TR25.083, TR25.0S4, TR25.085, TR25.086 and TR25.087, IBM Corp Vienna Austria June 1968</span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://www.computer.org/web/awards/goode-frederick-brooks">"Frederick P. Brooks Jr. - IEEE Computer Society"</a>. <a href="/wiki/IEEE_Computer_Society" title="IEEE Computer Society">IEEE Computer Society</a>. 1989.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.btitle=Frederick+P.++Brooks+Jr.+-+IEEE+Computer+Society&amp;rft.date=1989&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Fwww.computer.org%2Fweb%2Fawards%2Fgoode-frederick-brooks&amp;rft.pub=IEEE+Computer+Society&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text">Some compilers chose to reserve these identifiers, or issue warnings if they found them used as identifiers. But the subsequent introduction of a <a href="/wiki/Case_statement" class="mw-redirect" title="Case statement">case statement</a> shows the value of the principle.</span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><cite class="citation book">Vowels, Robin (2001). <i>Introduction to PL/I</i>. pp.&#160;x. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-9596384-9-0" title="Special:BookSources/0-9596384-9-0">0-9596384-9-0</a>. <q>"PL/I is the first language to provide adequate facilities for scientific computations, business data processing and systems programming in a single language" - <a href="/wiki/Jean_Sammet" class="mw-redirect" title="Jean Sammet">Jean Sammet</a>, <i>Some Approaches to, and Illustrations of, Programming Language History</i></q></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=Robin&amp;rft.aulast=Vowels&amp;rft.btitle=Introduction+to+PL%2FI&amp;rft.date=2001&amp;rft.genre=book&amp;rft.isbn=0-9596384-9-0&amp;rft.pages=x&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-ReferenceA-13"><span class="mw-cite-backlink">^ <a href="#cite_ref-ReferenceA_13-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-ReferenceA_13-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">ANS Programming Language PL/I. X3.53-1976</span></li>
<li id="cite_note-SubsetG-14"><span class="mw-cite-backlink">^ <a href="#cite_ref-SubsetG_14-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-SubsetG_14-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">ANSI X3.74-1981 (R1998) <i>Information Systems - Programming Language - PL/I General-Purpose Subset</i></span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text">Reacting to IBM's involvement, a number of manufacturers had been reluctant to endorse an effort on a Standard. The initial remit of CLDG/X3J1 was to investigate whether PL/I was a suitable candidate for standardization. The joint effort processed over 3500 proposals for language or textual changes.</span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text">"PL/I Language Specifications. GY33-6003"</span></li>
<li id="cite_note-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-17">^</a></b></span> <span class="reference-text">The PL/I machine defined in the standard is covered in <i>The Definition Mechanism for Standard PL/I</i>. Michael Marcotty, Frederick G Sayward. <a rel="nofollow" class="external text" href="http://www.cs.yale.edu/publications/techreports/tr75.pdf">cs.yale.edu</a></span></li>
<li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18">^</a></b></span> <span class="reference-text">1987 PL/I General-Purpose Subset (ANSI X3.74-1987)</span></li>
<li id="cite_note-Krasun-19"><span class="mw-cite-backlink">^ <a href="#cite_ref-Krasun_19-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Krasun_19-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation web">Krasun, Andy. <a rel="nofollow" class="external text" href="http://www.bcs.org/content/ConMediaFile/6889">"The first 35+ years of Hursley software 1958-1993"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">September 18,</span> 2012</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=Andy&amp;rft.aulast=Krasun&amp;rft.btitle=The+first+35%2B+years+of+Hursley+software+1958-1993&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.bcs.org%2Fcontent%2FConMediaFile%2F6889&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20">^</a></b></span> <span class="reference-text">These were designed in 1966 for an early Optimizing compiler, written in PL/I and to be bootstrapped starting with the PL/I F compiler</span></li>
<li id="cite_note-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-21">^</a></b></span> <span class="reference-text">There were many delays in shipping these, so a common PL/I joke at the time was that <a href="/wiki/Charles_de_Gaulle" title="Charles de Gaulle">Gen de Gaulle</a> forbade La Gaude from shipping them until the <a href="/wiki/Concorde" title="Concorde">Concorde</a> had its first flight</span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.bitsavers.org/pdf/ibm/360/pli/C28-8202-0_PLIsubsetRM_1967.pdf">IBM System/360 PL/I Subset Reference Manual. C28-8202-0</a>, 1967 at Bitsavers</span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.multicians.org/pl1-raf.html">Multicians.org</a></span></li>
<li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24">^</a></b></span> <span class="reference-text">Honeywell, <i>Series 60 (Level 66)/6000 PL/I Reference Manual</i>, Order No. DE05, 1976.</span></li>
<li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25">^</a></b></span> <span class="reference-text">OS PL/I Checkout and Optimizing Compilers: Language Reference Manual. GC33-0009 1970</span></li>
<li id="cite_note-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-26">^</a></b></span> <span class="reference-text">A.M.Krasun. The first 35+ years of Hursley software 1958-1993 with some hardware asides. BCS, The Chartered Institute for IT, Advanced Programming Specialist Group. October 2006 <a rel="nofollow" class="external text" href="http://www.bcs.org/server.php?show=conWebDoc.16684">bcs.org</a></span></li>
<li id="cite_note-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-27">^</a></b></span> <span class="reference-text">A Conversational Compiler for Full PL/I R.N.Cuff The Computer Journal.1972; 15: 99-104</span></li>
<li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28">^</a></b></span> <span class="reference-text">The design of a checkout compiler, B.L.Marks, IBM Systems Journal Volume 12, Number 3, Page 315 (1973)</span></li>
<li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29">^</a></b></span> <span class="reference-text"><i>Uniprise PL/I for UNIX Reference Manual,</i> Uniprise Systems, Inc., Irvine, California, 1995, p. xxi.</span></li>
<li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30">^</a></b></span> <span class="reference-text"><i>Uniprise PL/I for UNIX Reference Manual,</i> Uniprise Systems, Inc., Irvine, California, 1995</span></li>
<li id="cite_note-kednos.com-31"><span class="mw-cite-backlink">^ <a href="#cite_ref-kednos.com_31-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-kednos.com_31-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.kednos.com/">Kednos.com</a></span></li>
<li id="cite_note-32"><span class="mw-cite-backlink"><b><a href="#cite_ref-32">^</a></b></span> <span class="reference-text">The "Fatal Disease" article - <a rel="nofollow" class="external text" href="http://plg.uwaterloo.ca/~holt/papers/fatal_disease.html">plg.uwaterloo.ca</a></span></li>
<li id="cite_note-33"><span class="mw-cite-backlink"><b><a href="#cite_ref-33">^</a></b></span> <span class="reference-text">Department of Computer Science, <i>User's Guide to PL/C - The Cornell Compiler for PL/I,</i> Cornell University, Ithaca, 1977.</span></li>
<li id="cite_note-34"><span class="mw-cite-backlink"><b><a href="#cite_ref-34">^</a></b></span> <span class="reference-text"><i>PLAGO/360 User's Manual,</i> Polytechnic Institute of Brooklyn.</span></li>
<li id="cite_note-35"><span class="mw-cite-backlink"><b><a href="#cite_ref-35">^</a></b></span> <span class="reference-text">J. N. P. Hume and R. C. Holt, <i>Structured Programming using PL/I and SP/k,</i> Reston, Reston, 1975.</span></li>
<li id="cite_note-36"><span class="mw-cite-backlink"><b><a href="#cite_ref-36">^</a></b></span> <span class="reference-text">M. V. Zelkowitz, <i>PL/I Programming with PLUM,</i> 2nd Ed., Paladin House, Geneva (Ill.), 1978.</span></li>
<li id="cite_note-37"><span class="mw-cite-backlink"><b><a href="#cite_ref-37">^</a></b></span> <span class="reference-text">Robin A Vowels. PL/I for OS/2. ACM SIGPLAN Notices, Volume 31, No 3. March 1996.</span></li>
<li id="cite_note-38"><span class="mw-cite-backlink"><b><a href="#cite_ref-38">^</a></b></span> <span class="reference-text">PL/I for IBM mainframe, Linux on zSeries and Windows. <a rel="nofollow" class="external text" href="http://www-01.ibm.com/software/awdtools/pli">ibm.com</a></span></li>
<li id="cite_note-39"><span class="mw-cite-backlink"><b><a href="#cite_ref-39">^</a></b></span> <span class="reference-text">Burroughs Corporation, <i>B 6700/B 7700: PL/I Language Reference Manual,</i> Reference 5001530, Detroit, 1977.</span></li>
<li id="cite_note-40"><span class="mw-cite-backlink"><b><a href="#cite_ref-40">^</a></b></span> <span class="reference-text">Sperry-Univac Computer Systems, <i>SPERRY UNIVAC 1100 Series PL/I Programmer Reference,</i> Reference UP-8277, 1976.</span></li>
<li id="cite_note-41"><span class="mw-cite-backlink"><b><a href="#cite_ref-41">^</a></b></span> <span class="reference-text">Data General Corporation, <i>AOS PL/I Reference Manual,</i> Order No. 093-000204, c. 1978.</span></li>
<li id="cite_note-42"><span class="mw-cite-backlink"><b><a href="#cite_ref-42">^</a></b></span> <span class="reference-text">Control Data Corporation, <i>PL/I Reference Manual,</i> 1978, Publication No. 60388100A.</span></li>
<li id="cite_note-43"><span class="mw-cite-backlink"><b><a href="#cite_ref-43">^</a></b></span> <span class="reference-text"><i>VOS PL/I User's Guide,</i> Stratus Computer, Inc., Marlboro, Massachusetts, 1995.<a rel="nofollow" class="external text" href="http://stratadoc.stratus.com/vos/17.1.0/r009-05/">stratadoc.stratus.com</a></span></li>
<li id="cite_note-44"><span class="mw-cite-backlink"><b><a href="#cite_ref-44">^</a></b></span> <span class="reference-text">The Norton chronicles: Peter Norton, PC magazine May 15, 1984. <a rel="nofollow" class="external text" href="http://members.dodo.com.au/~robin51/norton.htm">This article is enthusiastic towards PL/I</a></span></li>
<li id="cite_note-45"><span class="mw-cite-backlink"><b><a href="#cite_ref-45">^</a></b></span> <span class="reference-text">Micro Focus Open PL/I</span></li>
<li id="cite_note-46"><span class="mw-cite-backlink"><b><a href="#cite_ref-46">^</a></b></span> <span class="reference-text">IBM PL/I for OS/2 <a rel="nofollow" class="external text" href="http://portal.acm.org/citation.cfm?id=227717.227724">portal.acm.org</a></span></li>
<li id="cite_note-47"><span class="mw-cite-backlink"><b><a href="#cite_ref-47">^</a></b></span> <span class="reference-text"><i>IBM Series/1 PL/I: Language Reference,</i> 2nd Ed., Boca Raton, Florida, 1978.</span></li>
<li id="cite_note-48"><span class="mw-cite-backlink"><b><a href="#cite_ref-48">^</a></b></span> <span class="reference-text">Proceedings of the 1979 SIGPLAN symposium on Compiler construction. Pages 107-116nts. <a href="/wiki/Special:BookSources/0897910028" class="internal mw-magiclink-isbn">ISBN 0-89791-002-8</a></span></li>
<li id="cite_note-49"><span class="mw-cite-backlink"><b><a href="#cite_ref-49">^</a></b></span> <span class="reference-text">The Norton Chronicles Peter Norton, PC Magazine May 15, 1984 <a rel="nofollow" class="external text" href="http://members.dodo.com.au/~robin51/norton.htm">This article is enthusiastic towards PL/I</a></span></li>
<li id="cite_note-50"><span class="mw-cite-backlink"><b><a href="#cite_ref-50">^</a></b></span> <span class="reference-text">The Article <a rel="nofollow" class="external text" href="http://www.highbeam.com/doc/1G1-17813799.html">about Liant (now Micro Focus) Open PL/I estimated that in 1995 20% of mainframe legacy applications were in PL/I, with 60% in COBOL: there were 300,000 PL/I programmers worldwide.</a></span></li>
<li id="cite_note-51"><span class="mw-cite-backlink"><b><a href="#cite_ref-51">^</a></b></span> <span class="reference-text"><cite class="citation journal">Schultz, G.; D.Rose; C.West; J.Gray (April 1980). <a rel="nofollow" class="external text" href="http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=1094695">"Executable description and validation of SNA"</a>. <i>IEEE Xplorer</i>. <b>28</b> (4): 661–677. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1109%2FTCOM.1980.1094695">10.1109/TCOM.1980.1094695</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.atitle=Executable+description+and+validation+of+SNA&amp;rft.au=C.West&amp;rft.au=D.Rose&amp;rft.aufirst=G.&amp;rft.au=J.Gray&amp;rft.aulast=Schultz&amp;rft.date=1980-04&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fieeexplore.ieee.org%2Fxpl%2Ffreeabs_all.jsp%3Farnumber%3D1094695&amp;rft_id=info%3Adoi%2F10.1109%2FTCOM.1980.1094695&amp;rft.issue=4&amp;rft.jtitle=IEEE+Xplorer&amp;rft.pages=661-677&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=28" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-52"><span class="mw-cite-backlink"><b><a href="#cite_ref-52">^</a></b></span> <span class="reference-text">In his slides on <i>IBM Operating System/360</i> <a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a> says OS/360 should have been written in PL/I not PL/S and Assembler. The article is a great summary of the OS/360 program. <a rel="nofollow" class="external text" href="http://www.de.capgemini-sdm.com/download/sdm-konf2001/d_4_brooks.pdf">capgemini-sdm.com</a>, 2001.</span></li>
<li id="cite_note-53"><span class="mw-cite-backlink"><b><a href="#cite_ref-53">^</a></b></span> <span class="reference-text">See the Kednos Manuals, e.g <a rel="nofollow" class="external text" href="ftp://kednos.com/pub/PLIDOCS/vms/reference/6291pro.pdf">kednos.com</a></span></li>
<li id="cite_note-54"><span class="mw-cite-backlink"><b><a href="#cite_ref-54">^</a></b></span> <span class="reference-text">The compiler could not tell whether a statement was a declaration or a multiple assignment statement until encountering the "=" of the assignment or ";" of the DECLARE—which could be several lines later. The fact that DECLARE/DCL were not reserved is the proximate cause in this example&#160;–  consider the fragment <code>DECLARE(I,J,K),L=</code> vs <code>DECLARE(I,J,K),L;</code>.</span></li>
<li id="cite_note-55"><span class="mw-cite-backlink"><b><a href="#cite_ref-55">^</a></b></span> <span class="reference-text">Timothy P. Hart, <i><a rel="nofollow" class="external text" href="ftp://publications.ai.mit.edu/ai-publications/pdf/AIM-057.pdf">MACRO Definitions for LISP</a></i>, October 1963</span></li>
</ol>
</div>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=42" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Textbooks">Textbooks</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=43" title="Edit section: Textbooks">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><cite class="citation book">Barnes, R.A. (1979). <i>PL/I for Programmers</i>. North-Holland.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=R.A.&amp;rft.aulast=Barnes&amp;rft.btitle=PL%2FI+for+Programmers&amp;rft.date=1979&amp;rft.genre=book&amp;rft.pub=North-Holland&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Hughes, J.K. (1986). <i>PL/I Structured Programming</i> (3rd ed.). Wiley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-8053-0051-1" title="Special:BookSources/0-8053-0051-1">0-8053-0051-1</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=J.K.&amp;rft.aulast=Hughes&amp;rft.btitle=PL%2FI+Structured+Programming&amp;rft.date=1986&amp;rft.edition=3rd&amp;rft.genre=book&amp;rft.isbn=0-8053-0051-1&amp;rft.pub=Wiley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Groner, G.F. (1971). <i>PL/I Programming in Technological Applications</i>. Books on Demand, Ann Arbor, MI.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=G.F.&amp;rft.aulast=Groner&amp;rft.btitle=PL%2FI+Programming+in+Technological+Applications&amp;rft.date=1971&amp;rft.genre=book&amp;rft.pub=Books+on+Demand%2C+Ann+Arbor%2C+MI&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Anderson, M.E. (1973). <i>PL/I for Programmers</i>. Prentice-Hall.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=M.E.&amp;rft.aulast=Anderson&amp;rft.btitle=PL%2FI+for+Programmers&amp;rft.date=1973&amp;rft.genre=book&amp;rft.pub=Prentice-Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Stoutemyer, D.R. (1971). <i>PL/I Programming for Engineering &amp; Science</i>. Prentice-Hall.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=D.R.&amp;rft.aulast=Stoutemyer&amp;rft.btitle=PL%2FI+Programming+for+Engineering+%26+Science&amp;rft.date=1971&amp;rft.genre=book&amp;rft.pub=Prentice-Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Ziegler, R.R. &amp; C. (1986). <i>PL/I: Structured Programming and Problem Solving</i> (1st ed.). West. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-314-93915-6" title="Special:BookSources/0-314-93915-6">0-314-93915-6</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=R.R.+%26+C.&amp;rft.aulast=Ziegler&amp;rft.btitle=PL%2FI%3A+Structured+Programming+and+Problem+Solving&amp;rft.date=1986&amp;rft.edition=1st&amp;rft.genre=book&amp;rft.isbn=0-314-93915-6&amp;rft.pub=West&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Sturm, E. (2009). <i>The New PL/I ... for PC, Workstation and Mainframe</i>. Vieweg-Teubner, Wiesbaden, Germany. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-3-8348-0726-7" title="Special:BookSources/978-3-8348-0726-7">978-3-8348-0726-7</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=E.&amp;rft.aulast=Sturm&amp;rft.btitle=The+New+PL%2FI+...+for+PC%2C+Workstation+and+Mainframe&amp;rft.date=2009&amp;rft.genre=book&amp;rft.isbn=978-3-8348-0726-7&amp;rft.pub=Vieweg-Teubner%2C+Wiesbaden%2C+Germany&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Vowels, R.A. <i>Introduction to PL/I, Algorithms, and Structured Programming</i> (3rd ed.). <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-9596384-9-0" title="Special:BookSources/0-9596384-9-0">0-9596384-9-0</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=R.A.&amp;rft.aulast=Vowels&amp;rft.btitle=Introduction+to+PL%2FI%2C+Algorithms%2C+and+Structured+Programming&amp;rft.edition=3rd&amp;rft.genre=book&amp;rft.isbn=0-9596384-9-0&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Abrahams, Paul (1979). <a rel="nofollow" class="external text" href="http://www.iron-spring.com/abrahams.pdf"><i>The PL/I Programming Language</i></a> <span style="font-size:85%;">(PDF)</span>. Courant Mathematics and Computing Laboratory, New York University.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3APL%2FI&amp;rft.aufirst=Paul&amp;rft.aulast=Abrahams&amp;rft.btitle=The+PL%2FI+Programming+Language&amp;rft.date=1979&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.iron-spring.com%2Fabrahams.pdf&amp;rft.pub=Courant+Mathematics+and+Computing+Laboratory%2C+New+York+University&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
<h3><span class="mw-headline" id="Standards">Standards</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=44" title="Edit section: Standards">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="/wiki/American_National_Standards_Institute" title="American National Standards Institute">ANSI</a> ANSI X3.53-1976 (R1998) <i>Information Systems - Programming Language - PL/I</i></li>
<li><a href="/wiki/American_National_Standards_Institute" title="American National Standards Institute">ANSI</a> ANSI X3.74-1981 (R1998) <i>Information Systems - Programming Language - PL/I General-Purpose Subset</i></li>
<li><a href="/wiki/Ecma_International" title="Ecma International">ECMA</a> 50 <i>Programming Language PL/I</i>, 1st edition, December 1976</li>
<li><a href="/wiki/International_Organization_for_Standardization" title="International Organization for Standardization">ISO</a> 6160:1979 <i>Programming languages—PL/I</i></li>
<li>ISO/IEC 6522:1992 <i>Information technology—Programming languages—PL/I general purpose subset</i></li>
</ul>
<h3><span class="mw-headline" id="Reference_manuals">Reference manuals</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=45" title="Edit section: Reference manuals">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li>Burroughs Corporation, "B 6700 / B 7700 PL/I Language Reference", 5001530. Detroit, 1977.</li>
<li>CDC. R. A. Vowels, "PL/I for CDC Cyber". Optimizing compiler for the CDC Cyber 70 series.</li>
<li>Digital Equipment Corporation, <a rel="nofollow" class="external text" href="http://bitsavers.org/pdf/dec/pdp10/TOPS10_softwareNotebooks/vol10/DEC-10-LCPLA-B-D_Conversational_Programming_Language_Users_Manual_Mar76.pdf">"decsystem10 Conversational Programming Language User's Manual"</a>, DEC-10-LCPUA-A-D. Maynard, 1975.</li>
<li>Fujitsu Ltd, "Facom OS IV PL/I Reference Manual", 70SP5402E-1,1974. 579 pages. PL/I F subset.</li>
<li>Honeywell, Inc., <a rel="nofollow" class="external text" href="http://www.bitsavers.org/pdf/honeywell/multics/AG94-02_PLI_langSpec_Mar81.pdf">"Multics PL/I Language Specification"</a>, AG94-02. 1981.</li>
<li>IBM, <a rel="nofollow" class="external text" href="http://www.bitsavers.org/pdf/ibm/360/pli/C28-6571-1_PL_I_Language_Specifications_Jul65.pdfIBM">Operating System/360 PL/I: Language Specifications</a>, C28-6571. 1965.</li>
<li>IBM, <a rel="nofollow" class="external text" href="http://www.bitsavers.org/pdf/ibm/360/pli/GC33-0009-4_PLI_Checkout_And_Opt_Compiler_Lang_Ref_Oct76.pdf">OS PL/I Checkout and Optimizing Compilers: Language Reference Manual</a>, GC33-0009. 1970.</li>
<li>IBM, <a rel="nofollow" class="external text" href="http://www.bitsavers.org/pdf/ibm/npl/320-0908_NPL_Technical_Report_Dec64.pdfIBM,">"NPL Technical Report"</a>, December 1964.</li>
<li>IBM, <a rel="nofollow" class="external text" href="http://publibfp.boulder.ibm.com/epubs/pdf/ibm4lr00.pdf">Enterprise PL/I for z/OS Version 4 Release 1 Language Reference Manual</a>, SC14-7285-00. 2010.</li>
<li>IBM, OS/2 PL/I Version 2: Programming: Language Reference, 3rd Ed., Form SC26-4308, San Jose. 1994.</li>
<li><a rel="nofollow" class="external text" href="ftp://kednos.com/pub/PLIDOCS/vms/reference/6291pro.pdf">Kednos PL/I for OpenVMS Systems. Reference Manual</a>, AA-H952E-TM. Nov 2003.</li>
<li>Liant Software Corporation (1994), Open PL/I Language Reference Manual, Rev. Ed., Framingham (Mass.).</li>
<li>Nixdorf Computer, "Terminalsystem 8820 Systemtechnischer Teil PL/I-Subset",05001.17.8.93-01, 1976.</li>
<li>Ing. C. Olivetti, "Mini PL/I Reference Manual", 1975, No. 3970530 V</li>
<li>Q1 Corporation, "The Q1/LMC Systems Software Manual", Farmingdale, 1978.</li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=PL/I&amp;action=edit&amp;section=46" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table role="presentation" class="mbox-small plainlinks sistersitebox" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wikibooks-logo-en-noslogan.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" data-file-width="400" data-file-height="400" /></a></td>
<td class="mbox-text plainlist">Wikibooks has more on the topic of: <i><b><a href="https://en.wikibooks.org/wiki/Special:Search/PL/I" class="extiw" title="wikibooks:Special:Search/PL/I">PL/I</a></b></i></td>
</tr>
</table>
<ul>
<li><a rel="nofollow" class="external text" href="http://www-306.ibm.com/software/awdtools/pli/">IBM PL/I Compilers</a> for <a href="/wiki/Z/OS" title="Z/OS">z/OS</a>, <a href="/wiki/AIX" class="mw-redirect" title="AIX">AIX</a>, <a href="/wiki/MVS" title="MVS">MVS</a>, <a href="/wiki/VM_(operating_system)" title="VM (operating system)">VM</a> and <a href="/wiki/VSE_(operating_system)" title="VSE (operating system)">VSE</a></li>
<li><a rel="nofollow" class="external text" href="http://www.iron-spring.com/">Iron Spring Software</a>, PL/I for <a href="/wiki/Linux" title="Linux">Linux</a> and <a href="/wiki/OS/2" title="OS/2">OS/2</a></li>
<li><a rel="nofollow" class="external text" href="http://www.kednos.com/">Kednos PL/I</a> for <a href="/wiki/OpenVMS" title="OpenVMS">OpenVMS</a> and <a href="/wiki/Tru64" class="mw-redirect" title="Tru64">Tru64</a></li>
<li><a rel="nofollow" class="external text" href="http://www.microfocus.com/plus/pli/index.aspx">Micro Focus’ Mainframe PL/I Migration Solution</a></li>
<li><a rel="nofollow" class="external text" href="http://www.cs.vu.nl/grammars/browsable/os-pli-v2r3/">OS PL/I V2R3 grammar Version 0.1</a></li>
<li><a rel="nofollow" class="external text" href="http://pliedit.com/">Pliedit</a>, PL/I editor for Eclipse</li>
<li><a rel="nofollow" class="external text" href="http://www.uni-muenster.de/ZIV.EberhardSturm/PL1andC.html">Power vs. Adventure - PL/I and C</a>, a side-by-side comparison of PL/I and <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>.</li>
<li><a rel="nofollow" class="external text" href="https://vintagebigblue.org/Compilerator/PLIF/dosvsPLICompile.php">The Compilerator</a>, Online PL/I compiler for small experiments and tinkering.</li>
<li><a rel="nofollow" class="external text" href="http://www.softpanorama.org/Lang/pl1.shtml">Softpanorama PL/1 page</a>.</li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1273
Cached time: 20170201004803
Cache expiry: 2592000
Dynamic content: false
CPU time usage: 0.300 seconds
Real time usage: 0.379 seconds
Preprocessor visited node count: 2203/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 42000/2097152 bytes
Template argument size: 1907/2097152 bytes
Highest expansion depth: 17/40
Expensive parser function count: 6/500
Lua time usage: 0.106/10.000 seconds
Lua memory usage: 4.38 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  294.737      1 -total
 23.46%   69.148      1 Template:Reflist
 19.08%   56.249      2 Template:Infobox
 17.00%   50.118      1 Template:Infobox_programming_language
 13.84%   40.782      1 Template:Clarify
 12.63%   37.218      1 Template:Fix-span
 11.06%   32.603      3 Template:Cite_web
 10.82%   31.904     11 Template:Cite_book
  9.80%   28.876      1 Template:Redirects_here
  7.17%   21.146      2 Template:Category_handler
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:23708-0!*!0!!en!4!* and timestamp 20170201004802 and revision id 751693119
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=PL/I&amp;oldid=751693119">https://en.wikipedia.org/w/index.php?title=PL/I&amp;oldid=751693119</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Procedural_programming_languages" title="Category:Procedural programming languages">Procedural programming languages</a></li><li><a href="/wiki/Category:PL/I_programming_language_family" title="Category:PL/I programming language family">PL/I programming language family</a></li><li><a href="/wiki/Category:Structured_programming_languages" title="Category:Structured programming languages">Structured programming languages</a></li><li><a href="/wiki/Category:Concurrent_programming_languages" title="Category:Concurrent programming languages">Concurrent programming languages</a></li><li><a href="/wiki/Category:IBM_software" title="Category:IBM software">IBM software</a></li><li><a href="/wiki/Category:Programming_languages_created_in_1964" title="Category:Programming languages created in 1964">Programming languages created in 1964</a></li><li><a href="/wiki/Category:Programming_languages_with_an_ISO_standard" title="Category:Programming languages with an ISO standard">Programming languages with an ISO standard</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Pages_using_ISBN_magic_links" title="Category:Pages using ISBN magic links">Pages using ISBN magic links</a></li><li><a href="/wiki/Category:Wikipedia_articles_needing_clarification_from_April_2014" title="Category:Wikipedia articles needing clarification from April 2014">Wikipedia articles needing clarification from April 2014</a></li><li><a href="/wiki/Category:Articles_needing_additional_references_from_March_2012" title="Category:Articles needing additional references from March 2012">Articles needing additional references from March 2012</a></li><li><a href="/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="/wiki/Category:Articles_that_may_contain_original_research_from_March_2012" title="Category:Articles that may contain original research from March 2012">Articles that may contain original research from March 2012</a></li><li><a href="/wiki/Category:All_articles_that_may_contain_original_research" title="Category:All articles that may contain original research">All articles that may contain original research</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=PL%2FI" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=PL%2FI" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/PL/I"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:PL/I"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/PL/I" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=PL/I&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=PL/I&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/PL/I" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/PL/I" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=PL/I&amp;oldid=751693119" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=PL/I&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q223433" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=PL%2FI&amp;id=751693119" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=PL%2FI">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=PL%2FI&amp;returnto=PL%2FI&amp;oldid=751693119&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=PL/I&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
						<li class="interlanguage-link interwiki-be"><a href="https://be.wikipedia.org/wiki/%D0%9F%D0%9B/1" title="ПЛ/1 – Belarusian" lang="be" hreflang="be" class="interlanguage-link-target">Беларуская</a></li><li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/PL/I" title="PL/I – Bulgarian" lang="bg" hreflang="bg" class="interlanguage-link-target">Български</a></li><li class="interlanguage-link interwiki-bs"><a href="https://bs.wikipedia.org/wiki/PL/I" title="PL/I – Bosnian" lang="bs" hreflang="bs" class="interlanguage-link-target">Bosanski</a></li><li class="interlanguage-link interwiki-ca"><a href="https://ca.wikipedia.org/wiki/PL/I" title="PL/I – Catalan" lang="ca" hreflang="ca" class="interlanguage-link-target">Català</a></li><li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/PL/1" title="PL/1 – Czech" lang="cs" hreflang="cs" class="interlanguage-link-target">Čeština</a></li><li class="interlanguage-link interwiki-da"><a href="https://da.wikipedia.org/wiki/PL/I" title="PL/I – Danish" lang="da" hreflang="da" class="interlanguage-link-target">Dansk</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/PL/I" title="PL/I – German" lang="de" hreflang="de" class="interlanguage-link-target">Deutsch</a></li><li class="interlanguage-link interwiki-et"><a href="https://et.wikipedia.org/wiki/PL/I" title="PL/I – Estonian" lang="et" hreflang="et" class="interlanguage-link-target">Eesti</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/PL/1" title="PL/1 – Spanish" lang="es" hreflang="es" class="interlanguage-link-target">Español</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D9%BE%DB%8C%E2%80%8C%D8%A7%D9%84/%DB%B1" title="پی‌ال/۱ – Persian" lang="fa" hreflang="fa" class="interlanguage-link-target">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/PL/I" title="PL/I – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/PL/1" title="PL/1 – Galician" lang="gl" hreflang="gl" class="interlanguage-link-target">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/PL/I" title="PL/I – Korean" lang="ko" hreflang="ko" class="interlanguage-link-target">한국어</a></li><li class="interlanguage-link interwiki-hr"><a href="https://hr.wikipedia.org/wiki/PL/1" title="PL/1 – Croatian" lang="hr" hreflang="hr" class="interlanguage-link-target">Hrvatski</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/PL/I" title="PL/I – Italian" lang="it" hreflang="it" class="interlanguage-link-target">Italiano</a></li><li class="interlanguage-link interwiki-he"><a href="https://he.wikipedia.org/wiki/PL/I" title="PL/I – Hebrew" lang="he" hreflang="he" class="interlanguage-link-target">עברית</a></li><li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/PL/I" title="PL/I – Hungarian" lang="hu" hreflang="hu" class="interlanguage-link-target">Magyar</a></li><li class="interlanguage-link interwiki-ms"><a href="https://ms.wikipedia.org/wiki/Bahasa_pengaturcaraan_PL/I" title="Bahasa pengaturcaraan PL/I – Malay" lang="ms" hreflang="ms" class="interlanguage-link-target">Bahasa Melayu</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/PL/1" title="PL/1 – Dutch" lang="nl" hreflang="nl" class="interlanguage-link-target">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/PL/I" title="PL/I – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-no"><a href="https://no.wikipedia.org/wiki/PL/I" title="PL/I – Norwegian" lang="no" hreflang="no" class="interlanguage-link-target">Norsk bokmål</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/PL/I" title="PL/I – Polish" lang="pl" hreflang="pl" class="interlanguage-link-target">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/PL/I" title="PL/I – Portuguese" lang="pt" hreflang="pt" class="interlanguage-link-target">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%9B/1" title="ПЛ/1 – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-sk"><a href="https://sk.wikipedia.org/wiki/PL/I" title="PL/I – Slovak" lang="sk" hreflang="sk" class="interlanguage-link-target">Slovenčina</a></li><li class="interlanguage-link interwiki-sh"><a href="https://sh.wikipedia.org/wiki/PL/I" title="PL/I – Serbo-Croatian" lang="sh" hreflang="sh" class="interlanguage-link-target">Srpskohrvatski / српскохрватски</a></li><li class="interlanguage-link interwiki-fi"><a href="https://fi.wikipedia.org/wiki/PL/I" title="PL/I – Finnish" lang="fi" hreflang="fi" class="interlanguage-link-target">Suomi</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/PL/1" title="PL/1 – Swedish" lang="sv" hreflang="sv" class="interlanguage-link-target">Svenska</a></li><li class="interlanguage-link interwiki-tg"><a href="https://tg.wikipedia.org/wiki/%D0%9F%D0%9B/1" title="ПЛ/1 – Tajik" lang="tg" hreflang="tg" class="interlanguage-link-target">Тоҷикӣ</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/PL/I" title="PL/I – Chinese" lang="zh" hreflang="zh" class="interlanguage-link-target">中文</a></li>					</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q223433#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 27 November 2016, at 08:55.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=PL/I&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.300","walltime":"0.379","ppvisitednodes":{"value":2203,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":42000,"limit":2097152},"templateargumentsize":{"value":1907,"limit":2097152},"expansiondepth":{"value":17,"limit":40},"expensivefunctioncount":{"value":6,"limit":500},"entityaccesscount":{"value":1,"limit":400},"timingprofile":["100.00%  294.737      1 -total"," 23.46%   69.148      1 Template:Reflist"," 19.08%   56.249      2 Template:Infobox"," 17.00%   50.118      1 Template:Infobox_programming_language"," 13.84%   40.782      1 Template:Clarify"," 12.63%   37.218      1 Template:Fix-span"," 11.06%   32.603      3 Template:Cite_web"," 10.82%   31.904     11 Template:Cite_book","  9.80%   28.876      1 Template:Redirects_here","  7.17%   21.146      2 Template:Category_handler"]},"scribunto":{"limitreport-timeusage":{"value":"0.106","limit":"10.000"},"limitreport-memusage":{"value":4589739,"limit":52428800}},"cachereport":{"origin":"mw1273","timestamp":"20170201004803","ttl":2592000,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":459,"wgHostname":"mw1273"});});</script>
	</body>
</html>
