<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Hume (programming language) - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Hume_(programming_language)","wgTitle":"Hume (programming language)","wgCurRevisionId":732883957,"wgRevisionId":732883957,"wgArticleId":6328175,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles with example code","Haskell programming language family","Functional languages","Systems programming languages","Embedded systems"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Hume_(programming_language)","wgRelevantArticleId":6328175,"wgRequestId":"WI6JGApAMFAAAHneDJIAAAAM","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgRedirectedFrom":"Hume_(language)","wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgInternalRedirectTargetUrl":"/wiki/Hume_(programming_language)","wgWikibaseItemId":"Q5940583","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.action.view.redirect","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.9"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Hume_(programming_language)"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Hume_(programming_language)&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Hume_(programming_language)&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Hume_(programming_language)"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Hume_programming_language rootpage-Hume_programming_language skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Hume (programming language)</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"><span class="mw-redirectedfrom">  (Redirected from <a href="/w/index.php?title=Hume_(language)&amp;redirect=no" class="mw-redirect" title="Hume (language)">Hume (language)</a>)</span></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><div class="thumb tright">
<div class="thumbinner" style="width:222px;"><a href="/wiki/File:HumeStatue-Edinburgh2006.gif" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/a/aa/HumeStatue-Edinburgh2006.gif/220px-HumeStatue-Edinburgh2006.gif" width="220" height="331" class="thumbimage" srcset="//upload.wikimedia.org/wikipedia/en/thumb/a/aa/HumeStatue-Edinburgh2006.gif/330px-HumeStatue-Edinburgh2006.gif 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/a/aa/HumeStatue-Edinburgh2006.gif/440px-HumeStatue-Edinburgh2006.gif 2x" data-file-width="1488" data-file-height="2240" /></a>
<div class="thumbcaption">
<div class="magnify"><a href="/wiki/File:HumeStatue-Edinburgh2006.gif" class="internal" title="Enlarge"></a></div>
Hume Statue in Edinburgh</div>
</div>
</div>
<p><b>Hume</b> is a functionally based programming language developed at the <a href="/wiki/University_of_St_Andrews" title="University of St Andrews">University of St Andrews</a> and <a href="/wiki/Heriot-Watt_University" title="Heriot-Watt University">Heriot-Watt University</a> in <a href="/wiki/Scotland" title="Scotland">Scotland</a> since the year 2000. The language name is both an acronym meaning 'Higher-order Unified Meta-Environment' and an honorific to the 18th Century philosopher <a href="/wiki/David_Hume" title="David Hume">David Hume</a>. It targets <a href="/wiki/Real-time_computing" title="Real-time computing">real-time</a> <a href="/wiki/Embedded_systems" class="mw-redirect" title="Embedded systems">embedded systems</a>, aiming to produce a design that is both highly abstract, yet which will still allow precise extraction of time and space execution costs. This allows programmers to guarantee the bounded time and space demands of executing programs.</p>
<p>Hume is unusual in combining <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> ideas with ideas from <a href="/wiki/Finite_state_automata" class="mw-redirect" title="Finite state automata">finite state automata</a>. Automata are used to structure communicating programs into a series of "boxes", where each box maps inputs to outputs in a <a href="/wiki/Pure_function" title="Pure function">purely functional</a> way using high-level pattern-matching. It is also unusual in being structured as a series of levels, each of which exposes different machine properties.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#The_Hume_Design_Model"><span class="tocnumber">1</span> <span class="toctext">The Hume Design Model</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Characteristics"><span class="tocnumber">2</span> <span class="toctext">Characteristics</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#Vending_machine"><span class="tocnumber">3.1</span> <span class="toctext">Vending machine</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-5"><a href="#External_links"><span class="tocnumber">4</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="The_Hume_Design_Model">The Hume Design Model</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: The Hume Design Model">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The Hume language design attempts to maintain the essential properties and features required by the embedded systems domain (especially for transparent time and space costing) whilst incorporating as high a level of program abstraction as possible. It aims to target applications ranging from simple micro-controllers to complex real-time systems such as <a href="/wiki/Smartphone" title="Smartphone">smartphones</a>. This ambitious goal requires incorporating both low-level notions such as interrupt handling, and high-level ones of data structure abstraction etc. Of course such systems will be programmed in widely differing ways, but the language design should accommodate these varying requirements.</p>
<p>Hume is a three-layer language: an outer (static) declaration/<a href="/wiki/Metaprogramming" title="Metaprogramming">metaprogramming</a> layer, an intermediate coordination layer describing a static layout of dynamic processes and the associated devices, and an inner layer describing each process as a (dynamic) mapping from patterns to expressions. The inner layer is stateless and purely functional.</p>
<p>Rather than attempting to apply cost modeling and correctness proving technology to an existing language framework either directly or by altering a more general language (as with e.g. <a href="/wiki/RTSJ" class="mw-redirect" title="RTSJ">RTSJ</a>), the approach taken by the Hume designers is to design Hume in such a way that formal models and proofs can definitely be constructed. Hume is structured as a series of overlapping language levels, where each level adds expressibility to the expression semantics, but either loses some desirable property or increases the technical difficulty of providing formal correctness/cost models.</p>
<h2><span class="mw-headline" id="Characteristics">Characteristics</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Characteristics">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The interpreter and compiler versions differ a bit.</p>
<ul>
<li>the interpreter (concept prover) admits timeout and custom exceptions.</li>
<li>the compiler admits heap and stack cost bounding but exceptions only print the exception name.</li>
</ul>
<p>The coordination system wires <i>boxes</i> in a <a href="/wiki/Dataflow_programming" title="Dataflow programming">dataflow programming</a> style.</p>
<p>The expression language is <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>-like.</p>
<p>The message passing concurrency system remembers <a href="/wiki/JoCaml" title="JoCaml">JoCaml</a>'s <a href="/wiki/Join-pattern" title="Join-pattern">Join patterns</a> or <a href="/wiki/Polyphonic_C_Sharp" title="Polyphonic C Sharp">Polyphonic C Sharp</a> <a href="/wiki/Chord_(concurrency)" title="Chord (concurrency)">chords</a>, but with all channels asynchronous.</p>
<p>There is a scheduler built-in that continuously checks pattern-matching through all boxes in turn, putting on hold the boxes that cannot copy outputs to busy input destinations.</p>
<h2><span class="mw-headline" id="Examples">Examples</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Examples">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="Vending_machine">Vending machine</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Vending machine">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kr">data</span> <span class="kt">Coins</span> <span class="ow">=</span> <span class="kt">Nickel</span> <span class="o">|</span> <span class="kt">Dime</span> <span class="o">|</span> <span class="kt">Fake</span><span class="p">;</span>
<span class="kr">data</span> <span class="kt">Drinks</span> <span class="ow">=</span> <span class="kt">Coffee</span> <span class="o">|</span> <span class="kt">Tea</span><span class="p">;</span>
<span class="kr">data</span> <span class="kt">Buttons</span> <span class="ow">=</span> <span class="kt">BCoffee</span> <span class="o">|</span> <span class="kt">BTea</span> <span class="o">|</span> <span class="kt">BCancel</span><span class="p">;</span>

<span class="kr">type</span> <span class="kt">Int</span> <span class="ow">=</span> <span class="n">int</span> <span class="mi">32</span> <span class="p">;</span>

<span class="nf">exception</span> <span class="kt">EFakeCoin</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Int</span><span class="p">,</span> <span class="n">string</span><span class="p">)</span> <span class="p">;</span>

<span class="nf">show</span> <span class="n">v</span> <span class="ow">=</span> <span class="n">v</span> <span class="n">as</span> <span class="n">string</span> <span class="p">;</span>
 
<span class="nf">box</span> <span class="n">coffee</span>
<span class="kr">in</span> <span class="p">(</span> <span class="n">coin</span> <span class="ow">::</span> <span class="kt">Coins</span><span class="p">,</span> <span class="n">button</span> <span class="ow">::</span> <span class="kt">Buttons</span><span class="p">,</span> <span class="n">value</span> <span class="ow">::</span> <span class="kt">Int</span> <span class="p">)</span> <span class="c1">-- input channels</span>
<span class="nf">out</span> <span class="p">(</span> <span class="n">drink_outp</span> <span class="ow">::</span> <span class="n">string</span><span class="p">,</span> <span class="n">value</span><span class="err">’</span> <span class="ow">::</span> <span class="kt">Int</span>
    <span class="p">,</span> <span class="n">refund_outp</span> <span class="ow">::</span> <span class="n">string</span><span class="p">,</span> <span class="n">display</span> <span class="ow">::</span> <span class="n">string</span><span class="p">)</span>  <span class="c1">-- named outputs</span>

<span class="nf">within</span> <span class="mi">500</span><span class="kt">KB</span> <span class="p">(</span><span class="mi">400</span><span class="kt">B</span><span class="p">)</span> <span class="c1">-- max heap ( max stack) cost bounding</span>
<span class="nf">handles</span> <span class="kt">EFakeCoin</span><span class="p">,</span> <span class="kt">TimeOut</span><span class="p">,</span> <span class="kt">HeapOverflow</span><span class="p">,</span> <span class="kt">StackOverflow</span>

<span class="nf">match</span>
<span class="c1">-- * wildcards for unfilled outputs, and unconsumed inputs</span>
  <span class="p">(</span> <span class="n">my_coin</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>  <span class="cm">{- ''join-pattern'' equivalent: coin(my_coin) &amp; value(v) -}</span> 
                <span class="ow">-&gt;</span> <span class="kr">let</span> <span class="n">v</span><span class="err">’</span> <span class="ow">=</span> <span class="n">incrementCredit</span> <span class="n">my_coin</span> <span class="n">v</span>
                   <span class="kr">in</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="n">v</span><span class="err">’</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="n">show</span> <span class="n">v</span><span class="err">’</span><span class="p">)</span>
 
           <span class="c1">-- time bounding (''within x time-unit'') raises TimeOut ()</span>
<span class="o">|</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="kt">BCoffee</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="cm">{- ''join-pattern'' equivalent: button(BCoffee) &amp; value(v) -}</span>
                   <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">vend</span> <span class="kt">Coffee</span> <span class="mi">10</span> <span class="n">v</span><span class="p">)</span> <span class="n">within</span> <span class="mi">30</span><span class="n">s</span> 
<span class="o">|</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="kt">BTea</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span>    <span class="ow">-&gt;</span> <span class="p">(</span><span class="n">vend</span> <span class="kt">Tea</span> <span class="mi">5</span> <span class="n">v</span><span class="p">)</span> <span class="n">within</span> <span class="mi">30</span><span class="n">s</span>
<span class="o">|</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="kt">BCancel</span><span class="p">,</span> <span class="n">v</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="kr">let</span> <span class="n">refund</span> <span class="n">u</span> <span class="ow">=</span> <span class="s">"Refund "</span> <span class="o">++</span> <span class="n">show</span> <span class="n">u</span> <span class="o">++</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span>
                      <span class="kr">in</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">refund</span> <span class="n">v</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>

<span class="nf">handle</span>
   <span class="kt">EFakeCoin</span> <span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span> <span class="ow">-&gt;</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="n">v</span> <span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span>
<span class="o">|</span>  <span class="kt">TimeOut</span> <span class="nb">()</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="s">"maybe content exhausted, call service!"</span><span class="p">)</span>
<span class="o">|</span>  <span class="kt">HeapOverflow</span> <span class="nb">()</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="s">"error: heap limit exceeded"</span><span class="p">)</span>
<span class="o">|</span>  <span class="kt">StackOverflow</span> <span class="nb">()</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="s">"error: stack limit exceeded"</span><span class="p">)</span> 
<span class="p">;</span>

<span class="nf">incrementCredit</span> <span class="n">coin</span> <span class="n">v</span> <span class="ow">=</span> 
    <span class="kr">case</span> <span class="n">coin</span> <span class="kr">of</span>
      <span class="kt">Nickel</span> <span class="ow">-&gt;</span> <span class="n">v</span> <span class="o">+</span> <span class="mi">5</span>
      <span class="kt">Dime</span> <span class="ow">-&gt;</span> <span class="n">v</span> <span class="o">+</span> <span class="mi">10</span>
      <span class="kt">Fake</span> <span class="ow">-&gt;</span> <span class="n">raise</span> <span class="kt">EFakeCoin</span> <span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="s">"coin rejected"</span><span class="p">)</span>
    <span class="p">;</span> 
 
<span class="nf">vend</span> <span class="n">drink</span> <span class="n">cost</span> <span class="n">v</span> <span class="ow">=</span> 
    <span class="kr">if</span> <span class="n">v</span> <span class="o">&gt;=</span> <span class="n">cost</span>
       <span class="kr">then</span> <span class="p">(</span> <span class="n">serve</span> <span class="n">drink</span><span class="p">,</span> <span class="n">v</span> <span class="o">-</span> <span class="n">cost</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="s">"your drink"</span><span class="p">)</span> 
       <span class="kr">else</span> <span class="p">(</span> <span class="o">*</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="o">*</span><span class="p">,</span> <span class="s">"money is short of "</span> <span class="o">++</span> <span class="n">show</span> <span class="p">(</span><span class="n">cost</span> <span class="o">-</span> <span class="n">v</span><span class="p">))</span>
    <span class="p">;</span>
 
<span class="nf">serve</span> <span class="n">drink</span> <span class="ow">=</span> <span class="kr">case</span> <span class="n">drink</span> <span class="kr">of</span>
               <span class="kt">Coffee</span> <span class="ow">-&gt;</span> <span class="s">"Cofee</span><span class="se">\n</span><span class="s">"</span>
               <span class="kt">Tea</span> <span class="ow">-&gt;</span> <span class="s">"Tea</span><span class="se">\n</span><span class="s">"</span>
    <span class="p">;</span>
 
<span class="nf">box</span> <span class="n">control</span>
<span class="kr">in</span> <span class="p">(</span><span class="n">c</span> <span class="ow">::</span> <span class="n">char</span><span class="p">)</span>
<span class="nf">out</span> <span class="p">(</span><span class="n">coin</span> <span class="ow">::</span> <span class="kt">Coins</span><span class="p">,</span> <span class="n">button</span><span class="ow">::</span> <span class="kt">Buttons</span><span class="p">)</span>
<span class="nf">match</span>
 <span class="sc">'n'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="kt">Nickel</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>
 <span class="o">|</span> <span class="sc">'d'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="kt">Dime</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>
 <span class="o">|</span> <span class="sc">'f'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="kt">Fake</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>
 <span class="o">|</span> <span class="sc">'c'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="kt">BCoffee</span><span class="p">)</span>
 <span class="o">|</span> <span class="sc">'t'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="kt">BTea</span><span class="p">)</span>
 <span class="o">|</span> <span class="sc">'x'</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="kt">BCancel</span><span class="p">)</span>
 <span class="o">|</span> <span class="kr">_</span> <span class="ow">-&gt;</span> <span class="p">(</span><span class="o">*</span><span class="p">,</span> <span class="o">*</span><span class="p">)</span>
<span class="p">;</span>
 
<span class="nf">stream</span> <span class="n">console_outp</span> <span class="n">to</span> <span class="s">"std_out"</span> <span class="p">;</span>
<span class="nf">stream</span> <span class="n">console_inp</span> <span class="n">from</span> <span class="s">"std_in"</span> <span class="p">;</span>

<span class="c1">-- dataflow</span>
 
<span class="nf">wire</span> <span class="n">cofee</span>
    <span class="c1">-- inputs (channel origins)</span>
    <span class="p">(</span><span class="n">control</span><span class="o">.</span><span class="n">coin</span><span class="p">,</span> <span class="n">control</span><span class="o">.</span><span class="n">button</span><span class="p">,</span> <span class="n">coffee</span><span class="o">.</span><span class="n">value</span><span class="err">’</span> <span class="n">initially</span> <span class="mi">0</span><span class="p">)</span>  <span class="c1">-- </span>
    <span class="c1">-- outputs destinations</span>
    <span class="p">(</span><span class="n">console_outp</span><span class="p">,</span> <span class="n">coffee</span><span class="o">.</span><span class="n">value</span><span class="p">,</span> <span class="n">console_outp</span><span class="p">,</span> <span class="n">console_outp</span><span class="p">)</span> 
<span class="p">;</span>
 
<span class="nf">wire</span> <span class="n">control</span>
    <span class="p">(</span><span class="n">console_inp</span><span class="p">)</span>
    <span class="p">(</span><span class="n">coffee</span><span class="o">.</span><span class="n">coin</span><span class="p">,</span> <span class="n">coffee</span><span class="o">.</span><span class="n">button</span><span class="p">)</span>
<span class="p">;</span>
</pre></div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://www-fp.cs.st-andrews.ac.uk/hume/index.shtml">The Hume Programming Language web site</a></li>
<li><a rel="nofollow" class="external text" href="http://www.macs.hw.ac.uk/~greg/hume/">The Hume Project at Heriot-Watt University</a></li>
<li><a rel="nofollow" class="external text" href="http://sgate.emt.bme.hu/documents/patai/publications/PataiHanakSE2007Presentation.ppt">Embedded Functional Programming in Hume</a> <a rel="nofollow" class="external text" href="http://sgate.emt.bme.hu/documents/patai/publications/PataiHanakSE2007.pdf">Document</a></li>
<li><a rel="nofollow" class="external text" href="http://www.embounded.org/">The EmBounded project</a> Project to certify resource-bounded code in Hume.</li>
<li><a rel="nofollow" class="external text" href="http://glew.org/damp2006/Hume-Multicore.ppt">Hume and Multicore</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1270
Cached time: 20170101224301
Cache expiry: 2592000
Dynamic content: false
CPU time usage: 0.016 seconds
Real time usage: 0.020 seconds
Preprocessor visited node count: 38/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/500
-->

<!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 - -total
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:6328175-0!*!0!!en!4!* and timestamp 20170101224301 and revision id 732883957
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Hume_(programming_language)&amp;oldid=732883957">https://en.wikipedia.org/w/index.php?title=Hume_(programming_language)&amp;oldid=732883957</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Haskell_programming_language_family" title="Category:Haskell programming language family">Haskell programming language family</a></li><li><a href="/wiki/Category:Functional_languages" title="Category:Functional languages">Functional languages</a></li><li><a href="/wiki/Category:Systems_programming_languages" title="Category:Systems programming languages">Systems programming languages</a></li><li><a href="/wiki/Category:Embedded_systems" title="Category:Embedded systems">Embedded systems</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_with_example_code" title="Category:Articles with example code">Articles with example code</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Hume+%28programming+language%29" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Hume+%28programming+language%29" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Hume_(programming_language)"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:Hume_(programming_language)"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/Hume_(programming_language)" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Hume_(programming_language)&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Hume_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Hume_(programming_language)" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Hume_(programming_language)&amp;oldid=732883957" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Hume_(programming_language)&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q5940583" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Hume_%28programming_language%29&amp;id=732883957" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Hume+%28programming+language%29">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Hume+%28programming+language%29&amp;returnto=Hume+%28programming+language%29&amp;oldid=732883957&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Hume_(programming_language)&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
						<li class="interlanguage-link interwiki-ca"><a href="https://ca.wikipedia.org/wiki/Hume_(llenguatge_de_programaci%C3%B3)" title="Hume (llenguatge de programació) – Catalan" lang="ca" hreflang="ca" class="interlanguage-link-target">Català</a></li>					</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q5940583#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 3 August 2016, at 21:38.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Hume_(programming_language)&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":61,"wgHostname":"mw1245"});});</script>
	</body>
</html>
