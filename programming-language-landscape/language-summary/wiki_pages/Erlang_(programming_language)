<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Erlang (programming language) - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Erlang_(programming_language)","wgTitle":"Erlang (programming language)","wgCurRevisionId":763089345,"wgRevisionId":763089345,"wgArticleId":9646,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with dead external links","Articles with dead external links from February 2016","Pages using ISBN magic links","Pages using deprecated image syntax","CS1 maint: BOT: original-url status unknown","CS1 maint: Uses authors parameter","Commons category with page title same as on Wikidata","Use dmy dates from January 2012","Concurrent programming languages","Declarative programming languages","Dynamically typed programming languages","Ericsson","Erlang (programming language)","Formerly proprietary software","Functional languages","Pattern matching programming languages","Programming languages created in 1986","Programming languages created in the 1980s","Register-based virtual machines"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Erlang_(programming_language)","wgRelevantArticleId":9646,"wgRequestId":"WJLoDwpAME8AAGy0CHYAAAGS","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q334879","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.9"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Erlang_(programming_language)"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Erlang_(programming_language)"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Erlang_programming_language rootpage-Erlang_programming_language skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Erlang (programming language)</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><div role="note" class="hatnote">This article is about the programming language. For other things named "Erlang", see <a href="/wiki/Erlang_(disambiguation)" class="mw-redirect mw-disambig" title="Erlang (disambiguation)">Erlang (disambiguation)</a>.</div>
<table class="infobox vevent" style="width:22em">
<caption class="summary">Erlang</caption>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/File:Erlang_logo.svg" class="image"><img alt="Erlang logo.svg" src="//upload.wikimedia.org/wikipedia/commons/thumb/0/04/Erlang_logo.svg/114px-Erlang_logo.svg.png" width="114" height="100" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/0/04/Erlang_logo.svg/171px-Erlang_logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/0/04/Erlang_logo.svg/228px-Erlang_logo.svg.png 2x" data-file-width="243" data-file-height="213" /></a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td><a href="/wiki/Multi-paradigm_programming_language" class="mw-redirect" title="Multi-paradigm programming language">multi-paradigm</a>: <a href="/wiki/Concurrent_programming" class="mw-redirect" title="Concurrent programming">concurrent</a>, <a href="/wiki/Functional_programming" title="Functional programming">functional</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_design" title="Software design">Designed&#160;by</a></th>
<td>Joe Armstrong, Robert Virding, and Mike Williams</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="organiser"><a href="/wiki/Ericsson" title="Ericsson">Ericsson</a></td>
</tr>
<tr>
<th scope="row">First&#160;appeared</th>
<td>1986<span class="noprint">; 31&#160;years ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">1986</span>)</span></td>
</tr>
<tr>
<td colspan="2" style="text-align:center"></td>
</tr>
<tr>
<th scope="row" style="white-space: nowrap;"><a href="/wiki/Software_release_life_cycle" title="Software release life cycle">Stable release</a></th>
<td>
<div style="margin:0px;">19.2<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup> / December&#160;9, 2016<span class="noprint">; 55 days ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">2016-12-09</span>)</span></div>
</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td><a href="/wiki/Type_system" title="Type system">dynamic</a>, <a href="/wiki/Strong_typing" class="mw-redirect" title="Strong typing">strong</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_license" title="Software license">License</a></th>
<td>
<p><a href="/wiki/Apache_License" title="Apache License">Apache License 2.0</a> (since OTP 18.0)</p>
<a href="/wiki/Erlang_Public_License" title="Erlang Public License">Erlang Public License 1.1</a> (earlier releases)</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Filename_extension" title="Filename extension">Filename extensions</a></th>
<td>.erl .hrl</td>
</tr>
<tr>
<th scope="row">Website</th>
<td><span class="url"><a rel="nofollow" class="external text" href="https://www.erlang.org">www<wbr />.erlang<wbr />.org</a></span></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Major <a href="/wiki/Programming_language_implementation" title="Programming language implementation">implementations</a></th>
</tr>
<tr>
<td colspan="2" style="text-align:center">Erlang</td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced by</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/Prolog" title="Prolog">Prolog</a>, <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>, <a href="/wiki/PLEX_(programming_language)" title="PLEX (programming language)">PLEX</a>,<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup> <a href="/wiki/LISP" class="mw-redirect" title="LISP">LISP</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a>, <a href="/wiki/Clojure" title="Clojure">Clojure</a>, <a href="/wiki/Rust_(programming_language)" title="Rust (programming language)">Rust</a>, <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="/wiki/Opa_(programming_language)" title="Opa (programming language)">Opa</a>, <a href="/wiki/Reia_(programming_language)" title="Reia (programming language)">Reia</a>, <a href="/wiki/Elixir_(programming_language)" title="Elixir (programming language)">Elixir</a>, <a href="/wiki/Dart_(programming_language)" title="Dart (programming language)">Dart</a>, <a href="/wiki/Akka_(toolkit)" title="Akka (toolkit)">Akka</a></td>
</tr>
<tr>
<td colspan="2" class="hlist" style="text-align:center;border-top: 1px solid #aaa; padding-top: 3px;">
<ul>
<li><a href="/wiki/File:Wikibooks-logo-en-noslogan.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/16px-Wikibooks-logo-en-noslogan.svg.png" width="16" height="16" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/24px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/32px-Wikibooks-logo-en-noslogan.svg.png 2x" data-file-width="400" data-file-height="400" /></a> <a href="https://en.wikibooks.org/wiki/Erlang_Programming" class="extiw" title="wikibooks:Erlang Programming">Erlang Programming</a> at Wikibooks</li>
</ul>
</td>
</tr>
</table>
<p><b>Erlang</b> (<span class="nowrap"><span class="IPA nopopups"><a href="/wiki/Help:IPA_for_English" title="Help:IPA for English">/<span style="border-bottom:1px dotted"><span title="/ˈ/ primary stress follows">ˈ</span><span title="/ɜːr/ 'ur' in 'fur'">ɜːr</span><span title="'l' in 'lie'">l</span><span title="/æ/ short 'a' in 'bad'">æ</span><span title="/ŋ/ 'ng' in 'sing'">ŋ</span></span>/</a></span></span> <span title="English pronunciation respelling"><a href="/wiki/Help:Pronunciation_respelling_key" title="Help:Pronunciation respelling key"><i><b><span class="smallcaps"><span style="font-variant: small-caps; text-transform: lowercase;">ER</span></span></b>-lang</i></a></span>) is a <a href="/wiki/General-purpose_programming_language" title="General-purpose programming language">general-purpose</a>, <a href="/wiki/Concurrent_computing" title="Concurrent computing">concurrent</a>, <a href="/wiki/Functional_programming" title="Functional programming">functional</a> <a href="/wiki/Programming_language" title="Programming language">programming language</a>. It is also a <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage-collected</a> <a href="/wiki/Run_time_system" class="mw-redirect" title="Run time system">runtime</a> system. The sequential subset of Erlang supports <a href="/wiki/Eager_evaluation" title="Eager evaluation">eager evaluation</a>, <a href="/wiki/Single_assignment" class="mw-redirect" title="Single assignment">single assignment</a>, and <a href="/wiki/Dynamic_typing" class="mw-redirect" title="Dynamic typing">dynamic typing</a>. Erlang is known for its designs that are well suited for systems with the following characteristics:</p>
<ul>
<li><a href="/wiki/Distributed_computing" title="Distributed computing">Distributed</a></li>
<li><a href="/wiki/Fault-tolerance" class="mw-redirect" title="Fault-tolerance">Fault-tolerant</a></li>
<li><a href="/wiki/Soft_real-time" class="mw-redirect" title="Soft real-time">Soft real-time</a>,</li>
<li><a href="/wiki/High_availability" title="High availability">Highly available</a>, <a href="/wiki/Uptime" title="Uptime">non-stop</a> applications</li>
<li><a href="/wiki/Hot_swapping" title="Hot swapping">Hot swapping</a>, where code can be changed without stopping a system.<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup></li>
</ul>
<p>It was originally a <a href="/wiki/Proprietary_programming_language" class="mw-redirect" title="Proprietary programming language">proprietary language</a> within <a href="/wiki/Ericsson" title="Ericsson">Ericsson</a>, developed by Joe Armstrong, Robert Virding and Mike Williams in 1986,<sup id="cite_ref-hopl_4-0" class="reference"><a href="#cite_note-hopl-4">[4]</a></sup> but was released as <a href="/wiki/Open_source" class="mw-redirect" title="Open source">open source</a> in 1998.<sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[5]</a></sup><sup id="cite_ref-6" class="reference"><a href="#cite_note-6">[6]</a></sup> Erlang, along with <a href="/wiki/Open_Telecom_Platform" title="Open Telecom Platform">OTP</a>, a collection of middleware and libraries in Erlang, are now supported and maintained by the <a href="/wiki/Open_Telecom_Platform" title="Open Telecom Platform">OTP product unit</a> at <a href="/wiki/Ericsson" title="Ericsson">Ericsson</a> and have been widely referred to as <b>Erlang/OTP</b>.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Erlang_Worldview"><span class="tocnumber">1.1</span> <span class="toctext">Erlang Worldview</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Usage"><span class="tocnumber">1.2</span> <span class="toctext">Usage</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-4"><a href="#Functional_programming_examples"><span class="tocnumber">2</span> <span class="toctext">Functional programming examples</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Data_types"><span class="tocnumber">3</span> <span class="toctext">Data types</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Concurrency_and_distribution_orientation"><span class="tocnumber">4</span> <span class="toctext">Concurrency and distribution orientation</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Implementation"><span class="tocnumber">5</span> <span class="toctext">Implementation</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Hot_code_loading_and_modules"><span class="tocnumber">6</span> <span class="toctext">Hot code loading and modules</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Distribution"><span class="tocnumber">7</span> <span class="toctext">Distribution</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Variants"><span class="tocnumber">8</span> <span class="toctext">Variants</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#References"><span class="tocnumber">9</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#Further_reading"><span class="tocnumber">10</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#External_links"><span class="tocnumber">11</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The name "Erlang", attributed to Bjarne Däcker, has been presumed by those working on the telephony switches (for whom the language was designed) to be a reference to Danish mathematician and engineer <a href="/wiki/Agner_Krarup_Erlang" title="Agner Krarup Erlang">Agner Krarup Erlang</a> or the ubiquitous use of the <a href="/wiki/Erlang_(unit)" title="Erlang (unit)">unit named for him</a>, and (initially at least) simultaneously as a <a href="/wiki/Syllabic_abbreviation" class="mw-redirect" title="Syllabic abbreviation">syllabic abbreviation</a> of "Ericsson Language".<sup id="cite_ref-hopl_4-1" class="reference"><a href="#cite_note-hopl-4">[4]</a></sup><sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup></p>
<p>Erlang was designed with the aim of improving the development of telephony applications. The initial version of Erlang was implemented in <a href="/wiki/Prolog" title="Prolog">Prolog</a> and was influenced by the programming language <a href="/wiki/PLEX_(programming_language)" title="PLEX (programming language)">PLEX</a> used in earlier Ericsson exchanges. By 1988 Erlang had proven that it was suitable for prototyping telephone exchanges, but the Prolog interpreter was far too slow. One group within Ericsson estimated that it would need to be 40 times faster in order to be suitable for production use. In 1992 work began on the BEAM virtual machine which compiles Erlang to C using a mix of natively compiled code and threaded code to strike a balance between performance and disk space.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup> According to Armstrong, the language went from lab product to real applications following the collapse of the next-generation <a href="/wiki/AXE_telephone_exchange" title="AXE telephone exchange">AXE exchange</a> named <i>AXE-N</i> in 1995. As a result, Erlang was chosen for the next <a href="/wiki/Asynchronous_Transfer_Mode" title="Asynchronous Transfer Mode">ATM exchange</a> <i>AXD</i>.<sup id="cite_ref-hopl_4-2" class="reference"><a href="#cite_note-hopl-4">[4]</a></sup></p>
<p>In 1998 Ericsson announced the AXD301 switch, containing over a million lines of Erlang and reported to achieve a <a href="/wiki/High_availability" title="High availability">high availability</a> of <a href="/wiki/Nines_(engineering)" class="mw-redirect" title="Nines (engineering)">nine "9"s</a>.<sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup> Shortly thereafter, Ericsson Radio Systems banned the in-house use of Erlang for new products, citing a preference for non-proprietary languages. The ban caused Armstrong and others to leave Ericsson.<sup id="cite_ref-questions_10-0" class="reference"><a href="#cite_note-questions-10">[10]</a></sup> The implementation was open-sourced at the end of the year.<sup id="cite_ref-hopl_4-3" class="reference"><a href="#cite_note-hopl-4">[4]</a></sup> Ericsson eventually lifted the ban; it re-hired Armstrong in 2004.<sup id="cite_ref-questions_10-1" class="reference"><a href="#cite_note-questions-10">[10]</a></sup></p>
<p>In 2006, native <a href="/wiki/Symmetric_multiprocessing" title="Symmetric multiprocessing">symmetric multiprocessing</a> support was added to the runtime system and <a href="/wiki/Virtual_machine" title="Virtual machine">virtual machine</a>.<sup id="cite_ref-hopl_4-4" class="reference"><a href="#cite_note-hopl-4">[4]</a></sup></p>
<h3><span class="mw-headline" id="Erlang_Worldview">Erlang Worldview</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Erlang Worldview">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The Erlang view of the world, as Joe Armstrong, co-inventor of Erlang summarized in his PhD thesis:<sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup></p>
<ul>
<li>Everything is a process.</li>
<li>Processes are strongly isolated.</li>
<li>Process creation and destruction is a lightweight operation.</li>
<li>Message passing is the only way for processes to interact.</li>
<li>Processes have unique names.</li>
<li>If you know the name of a process you can send it a message.</li>
<li>Processes share no resources.</li>
<li>Error handling is non-local.</li>
<li>Processes do what they are supposed to do or fail.</li>
</ul>
<p>Joe Armstrong pointed out in an interview with Rackspace in 2013:<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup> “If Java is 'write once, run anywhere', then Erlang is 'write once, run forever'.”</p>
<h3><span class="mw-headline" id="Usage">Usage</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Usage">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Erlang has now been adopted by companies worldwide, including <a href="/wiki/Nortel" title="Nortel">Nortel</a> and <a href="/wiki/T-Mobile" title="T-Mobile">T-Mobile</a>. Erlang is used in <a href="/wiki/Ericsson" title="Ericsson">Ericsson</a>’s support nodes, and in <a href="/wiki/GPRS" class="mw-redirect" title="GPRS">GPRS</a>, <a href="/wiki/3G" title="3G">3G</a> and <a href="/wiki/LTE_(telecommunication)" title="LTE (telecommunication)">LTE</a> mobile networks worldwide.<sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[13]</a></sup></p>
<p>As Tim Bray, director of Web Technologies at <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>, expressed in his keynote at <a href="/wiki/O%27Reilly_Open_Source_Convention" title="O'Reilly Open Source Convention">OSCON</a> in July 2008:</p>
<blockquote class="templatequote">
<p>If somebody came to me and wanted to pay me a lot of money to build a large scale message handling system that really had to be up all the time, could never afford to go down for years at a time, I would unhesitatingly choose Erlang to build it in.</p>
</blockquote>
<h2><span class="mw-headline" id="Functional_programming_examples">Functional programming examples</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Functional programming examples">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>An Erlang function that uses recursion to count to ten:<sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[14]</a></sup></p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="lineno">1 </span><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">count_to_ten</span><span class="p">).</span>
<span class="lineno">2 </span><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">count_to_ten</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
<span class="lineno">3 </span> 
<span class="lineno">4 </span><span class="nf">count_to_ten</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">do_count</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span>
<span class="lineno">5 </span> 
<span class="lineno">6 </span><span class="nf">do_count</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="mi">10</span><span class="p">;</span>
<span class="lineno">7 </span><span class="nf">do_count</span><span class="p">(</span><span class="n">code</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">do_count</span><span class="p">(</span><span class="n">code</span> <span class="o">+</span> <span class="mi">1</span><span class="p">).</span>
</pre></div>
<p>A <a href="/wiki/Factorial" title="Factorial">factorial</a> algorithm implemented in Erlang:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">fact</span><span class="p">).</span>    <span class="c">% This is the file 'fact.erl', the module and the filename must match</span>
<span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">fac</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span> <span class="c">% This exports the function 'fac' of arity 1 (1 parameter, no type, no name)</span>

<span class="nf">fac</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="p">;</span> <span class="c">% If 0, then return 1, otherwise (note the semicolon ; meaning 'else')</span>
<span class="nf">fac</span><span class="p">(</span><span class="nv">N</span><span class="p">)</span> <span class="k">when</span> <span class="nv">N</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">is_integer</span><span class="p">(</span><span class="nv">N</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">N</span> <span class="o">*</span> <span class="n">fac</span><span class="p">(</span><span class="nv">N</span><span class="o">-</span><span class="mi">1</span><span class="p">).</span>
<span class="c">% Recursively determine, then return the result</span>
<span class="c">% (note the period . meaning 'endif' or 'function end')</span>
<span class="c">%% This function will crash if anything other than a nonnegative integer is given.</span>
<span class="c">%% It illustrates the "Let it crash" philosophy of Erlang.</span>
</pre></div>
<p>A <a href="/wiki/Fibonacci_number" title="Fibonacci number">Fibonacci</a> algorithm implemented in Erlang (Note: This is only for demonstrating the Erlang <a href="/wiki/Syntax_(programming_languages)" title="Syntax (programming languages)">syntax</a>. This algorithm is rather slow.<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup>):</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">fib</span><span class="p">).</span>    <span class="c">% This is the file 'fib.erl', the module and the filename must match</span>
<span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">fib</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span> <span class="c">% This exports the function 'fib' of arity 1</span>

<span class="nf">fib</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="p">;</span> <span class="c">% If 1, then return 1, otherwise (note the semicolon ; meaning 'else')</span>
<span class="nf">fib</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="mi">1</span><span class="p">;</span> <span class="c">% If 2, then return 1, otherwise</span>
<span class="nf">fib</span><span class="p">(</span><span class="nv">N</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">fib</span><span class="p">(</span><span class="nv">N</span> <span class="o">-</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="n">fib</span><span class="p">(</span><span class="nv">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">).</span>
</pre></div>
<p><a href="/wiki/Quicksort" title="Quicksort">Quicksort</a> in Erlang, using <a href="/wiki/List_comprehension" title="List comprehension">list comprehension</a>:<sup id="cite_ref-16" class="reference"><a href="#cite_note-16">[16]</a></sup></p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c">%% qsort:qsort(List)</span>
<span class="c">%% Sort a list of items</span>
<span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">qsort</span><span class="p">).</span>     <span class="c">% This is the file 'qsort.erl'</span>
<span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">qsort</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span> <span class="c">% A function 'qsort' with 1 parameter is exported (no type, no name)</span>

<span class="nf">qsort</span><span class="p">([])</span> <span class="o">-&gt;</span> <span class="p">[];</span> <span class="c">% If the list [] is empty, return an empty list (nothing to sort)</span>
<span class="nf">qsort</span><span class="p">([</span><span class="nv">Pivot</span><span class="p">|</span><span class="nv">Rest</span><span class="p">])</span> <span class="o">-&gt;</span>
    <span class="c">% Compose recursively a list with 'Front' for all elements that should be before 'Pivot'</span>
    <span class="c">% then 'Pivot' then 'Back' for all elements that should be after 'Pivot'</span>
    <span class="n">qsort</span><span class="p">([</span><span class="nv">Front</span> <span class="p">||</span> <span class="nv">Front</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">Front</span> <span class="o">&lt;</span> <span class="nv">Pivot</span><span class="p">])</span> <span class="o">++</span> 
    <span class="p">[</span><span class="nv">Pivot</span><span class="p">]</span> <span class="o">++</span>
    <span class="n">qsort</span><span class="p">([</span><span class="nv">Back</span> <span class="p">||</span> <span class="nv">Back</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">Back</span> <span class="o">&gt;=</span> <span class="nv">Pivot</span><span class="p">]).</span>
</pre></div>
<p>The above example recursively invokes the function <code>qsort</code> until nothing remains to be sorted. The expression <code>[Front || Front &lt;- Rest, Front &lt; Pivot]</code> is a <a href="/wiki/List_comprehension" title="List comprehension">list comprehension</a>, meaning "Construct a list of elements <code>Front</code> such that <code>Front</code> is a member of <code>Rest</code>, and <code>Front</code> is less than <code>Pivot</code>." <code>++</code> is the list concatenation operator.</p>
<p>A comparison function can be used for more complicated structures for the sake of readability.</p>
<p>The following code would sort lists according to length:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c">% This is file 'listsort.erl' (the compiler is made this way)</span>
<span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">listsort</span><span class="p">).</span>
<span class="c">% Export 'by_length' with 1 parameter (don't care about the type and name)</span>
<span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">by_length</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>

<span class="nf">by_length</span><span class="p">(</span><span class="nv">Lists</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="c">% Use 'qsort/2' and provides an anonymous function as a parameter</span>
   <span class="n">qsort</span><span class="p">(</span><span class="nv">Lists</span><span class="p">,</span> <span class="k">fun</span><span class="p">(</span><span class="nv">A</span><span class="p">,</span><span class="nv">B</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">A</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">B</span><span class="p">)</span> <span class="k">end</span><span class="p">).</span>

<span class="nf">qsort</span><span class="p">([],</span> <span class="p">_)</span><span class="o">-&gt;</span> <span class="p">[];</span> <span class="c">% If list is empty, return an empty list (ignore the second parameter)</span>
<span class="nf">qsort</span><span class="p">([</span><span class="nv">Pivot</span><span class="p">|</span><span class="nv">Rest</span><span class="p">],</span> <span class="nv">Smaller</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="c">% Partition list with 'Smaller' elements in front of 'Pivot' and not-'Smaller' elements</span>
    <span class="c">% after 'Pivot' and sort the sublists.</span>
    <span class="n">qsort</span><span class="p">([</span><span class="nv">X</span> <span class="p">||</span> <span class="nv">X</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">Smaller</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span><span class="nv">Pivot</span><span class="p">)],</span> <span class="nv">Smaller</span><span class="p">)</span>
    <span class="o">++</span> <span class="p">[</span><span class="nv">Pivot</span><span class="p">]</span> <span class="o">++</span>
    <span class="n">qsort</span><span class="p">([</span><span class="nv">Y</span> <span class="p">||</span> <span class="nv">Y</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="ow">not</span><span class="p">(</span><span class="nv">Smaller</span><span class="p">(</span><span class="nv">Y</span><span class="p">,</span> <span class="nv">Pivot</span><span class="p">))],</span> <span class="nv">Smaller</span><span class="p">).</span>
</pre></div>
<p>Here again, a <code>Pivot</code> is taken from the first parameter given to <code>qsort()</code> and the rest of <code>Lists</code> is named <code>Rest</code>. Note that the expression</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="p">[</span><span class="nv">X</span> <span class="p">||</span> <span class="nv">X</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">Smaller</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span><span class="nv">Pivot</span><span class="p">)]</span>
</pre></div>
<p>is no different in form from</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="p">[</span><span class="nv">Front</span> <span class="p">||</span> <span class="nv">Front</span> <span class="o">&lt;-</span> <span class="nv">Rest</span><span class="p">,</span> <span class="nv">Front</span> <span class="o">&lt;</span> <span class="nv">Pivot</span><span class="p">]</span>
</pre></div>
<p>(in the previous example) except for the use of a comparison function in the last part, saying "Construct a list of elements <code>X</code> such that <code>X</code> is a member of <code>Rest</code>, and <code>Smaller</code> is true", with <code>Smaller</code> being defined earlier as</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">fun</span><span class="p">(</span><span class="nv">A</span><span class="p">,</span><span class="nv">B</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">A</span><span class="p">)</span> <span class="o">&lt;</span> <span class="nb">length</span><span class="p">(</span><span class="nv">B</span><span class="p">)</span> <span class="k">end</span>
</pre></div>
<p>Note also that the <a href="/wiki/Anonymous_function" title="Anonymous function">anonymous function</a> is named <code>Smaller</code> in the parameter list of the second definition of <code>qsort</code> so that it can be referenced by that name within that function. It is not named in the first definition of <code>qsort</code>, which deals with the base case of an empty list and thus has no need of this function, let alone a name for it.</p>
<h2><span class="mw-headline" id="Data_types">Data types</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Data types">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Erlang has eight primitive <a href="/wiki/Data_type" title="Data type">data types</a>:</p>
<dl>
<dt>Integers</dt>
<dd>Integers are written as sequences of decimal digits, for example, 12, 12375 and -23427 are integers. Integer arithmetic is exact and only limited by available memory on the machine. (This is called <a href="/wiki/Arbitrary-precision_arithmetic" title="Arbitrary-precision arithmetic">arbitrary-precision arithmetic</a>.)</dd>
<dt>Atoms</dt>
<dd>Atoms are used within a program to denote distinguished values. They are written as strings of consecutive alphanumeric characters, the first character being lowercase. Atoms can contain any character if they are enclosed within single quotes and an escape convention exists which allows any character to be used within an atom.</dd>
<dt>Floats</dt>
<dd>Floating point numbers use the <a href="/wiki/Binary64" class="mw-redirect" title="Binary64">IEEE 754 64-bit representation</a>.</dd>
<dt>References</dt>
<dd>References are globally unique symbols whose only property is that they can be compared for equality. They are created by evaluating the Erlang primitive <code>make_ref()</code>.</dd>
<dt>Binaries</dt>
<dd>A binary is a sequence of bytes. Binaries provide a space-efficient way of storing binary data. Erlang primitives exist for composing and decomposing binaries and for efficient input/output of binaries.</dd>
<dt>Pids</dt>
<dd>Pid is short for <i>process identifier</i>&#160;– a Pid is created by the Erlang primitive <code>spawn(...)</code> Pids are references to Erlang processes.</dd>
<dt>Ports</dt>
<dd>Ports are used to communicate with the external world. Ports are created with the built-in function <code>open_port</code>. Messages can be sent to and received from ports, but these messages must obey the so-called "port protocol."</dd>
<dt>Funs</dt>
<dd>Funs are function closures. Funs are created by expressions of the form: <code>fun(...) -&gt; ... end</code>.</dd>
</dl>
<p>And three compound data types:</p>
<dl>
<dt>Tuples</dt>
<dd>Tuples are containers for a fixed number of Erlang data types. The syntax <code>{D1,D2,...,Dn}</code> denotes a tuple whose arguments are <code>D1, D2, ... Dn.</code> The arguments can be primitive data types or compound data types. Any element of a tuple can be accessed in constant time.</dd>
<dt>Lists</dt>
<dd>Lists are containers for a variable number of Erlang data types. The syntax <code>[Dh|Dt]</code> denotes a list whose first element is <code>Dh</code>, and whose remaining elements are the list <code>Dt</code>. The syntax <code>[]</code> denotes an empty list. The syntax <code>[D1,D2,..,Dn]</code> is short for <code>[D1|[D2|..|[Dn|[]]]]</code>. The first element of a list can be accessed in constant time. The first element of a list is called the <i>head</i> of the list. The remainder of a list when its head has been removed is called the <i>tail</i> of the list.</dd>
<dt>Maps</dt>
<dd>Maps contain a variable number of key-value associations. The syntax is<code>#{Key1=&gt;Value1,...,KeyN=&gt;ValueN}</code>.</dd>
</dl>
<p>Two forms of <a href="/wiki/Syntactic_sugar" title="Syntactic sugar">syntactic sugar</a> are provided:</p>
<dl>
<dt>Strings</dt>
<dd>Strings are written as doubly quoted lists of characters. This is syntactic sugar for a list of the integer <a href="/wiki/ASCII" title="ASCII">ASCII</a> codes for the characters in the string. Thus, for example, the string "cat" is shorthand for <code>[99,97,116]</code>. It has partial support for Unicode strings.<sup id="cite_ref-17" class="reference"><a href="#cite_note-17">[17]</a></sup></dd>
<dt>Records</dt>
<dd>Records provide a convenient way for associating a tag with each of the elements in a tuple. This allows one to refer to an element of a tuple by name and not by position. A pre-compiler takes the record definition and replaces it with the appropriate tuple reference.</dd>
</dl>
<p>Erlang has no method of defining classes, although there are external libraries available.<sup id="cite_ref-18" class="reference"><a href="#cite_note-18">[18]</a></sup></p>
<h2><span class="mw-headline" id="Concurrency_and_distribution_orientation">Concurrency and distribution orientation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: Concurrency and distribution orientation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Erlang's main strength is support for <a href="/wiki/Concurrency_(computer_science)" title="Concurrency (computer science)">concurrency</a>. It has a small but powerful set of primitives to create processes and communicate among them. Erlang is conceptually similar to the <a href="/wiki/Occam_(programming_language)" title="Occam (programming language)">occam programming language</a>, though it recasts the ideas of <a href="/wiki/Communicating_sequential_processes" title="Communicating sequential processes">communicating sequential processes</a> (CSP) in a functional framework and uses asynchronous message passing.<sup id="cite_ref-19" class="reference"><a href="#cite_note-19">[19]</a></sup> Processes are the primary means to structure an Erlang application. They are neither operating system <a href="/wiki/Process_(computing)" title="Process (computing)">processes</a> nor operating system <a href="/wiki/Thread_(computer_science)" class="mw-redirect" title="Thread (computer science)">threads</a>, but lightweight processes that are scheduled by Erlang's BEAM <a href="/wiki/Virtual_Machine" class="mw-redirect" title="Virtual Machine">VM</a>. Like operating system processes (but unlike operating system threads), they share no state with each other. The estimated minimal overhead for each is 300 <a href="/wiki/Word_(data_type)" class="mw-redirect" title="Word (data type)">words</a>.<sup id="cite_ref-20" class="reference"><a href="#cite_note-20">[20]</a></sup> Thus, many processes can be created without degrading performance. A benchmark with 20 million processes has been successfully performed.<sup id="cite_ref-21" class="reference"><a href="#cite_note-21">[21]</a></sup> Erlang has supported <a href="/wiki/Symmetric_multiprocessing" title="Symmetric multiprocessing">symmetric multiprocessing</a> since release R11B of May 2006.</p>
<p>While <a href="/wiki/Thread_(computer_science)" class="mw-redirect" title="Thread (computer science)">threads</a> require external library support in most languages, Erlang provides language-level features for creating and managing processes with the aim of simplifying concurrent programming. Though all concurrency is explicit in Erlang, processes communicate using <a href="/wiki/Message_passing" title="Message passing">message passing</a> instead of shared variables, which removes the need for explicit <a href="/wiki/Lock_(computer_science)" title="Lock (computer science)">locks</a> (a locking scheme is still used internally by the <a href="/wiki/Virtual_machine" title="Virtual machine">VM</a><sup id="cite_ref-22" class="reference"><a href="#cite_note-22">[22]</a></sup>).</p>
<p><a href="/wiki/Inter-process_communication" title="Inter-process communication">Inter-process communication</a> works via a <a href="/wiki/Shared_nothing_architecture" title="Shared nothing architecture">shared-nothing</a> <a href="/wiki/Asynchronous_method_dispatch" title="Asynchronous method dispatch">asynchronous</a> <a href="/wiki/Message_passing" title="Message passing">message passing</a> system: every process has a "mailbox", a <a href="/wiki/Queue_(data_structure)" class="mw-redirect" title="Queue (data structure)">queue</a> of messages that have been sent by other processes and not yet consumed. A process uses the <code>receive</code> primitive to retrieve messages that match desired patterns. A message-handling routine tests messages in turn against each pattern, until one of them matches. When the message is consumed and removed from the mailbox the process resumes execution. A message may comprise any Erlang structure, including primitives (integers, floats, characters, atoms), tuples, lists, and functions.</p>
<p>The code example below shows the built-in support for distributed processes:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
 <span class="c">% Create a process and invoke the function web:start_server(Port, MaxConnections)</span>
 <span class="nv">ServerProcess</span> <span class="o">=</span> <span class="nb">spawn</span><span class="p">(</span><span class="n">web</span><span class="p">,</span> <span class="n">start_server</span><span class="p">,</span> <span class="p">[</span><span class="nv">Port</span><span class="p">,</span> <span class="nv">MaxConnections</span><span class="p">]),</span>

 <span class="c">% Create a remote process and invoke the function</span>
 <span class="c">% web:start_server(Port, MaxConnections) on machine RemoteNode</span>
 <span class="nv">RemoteProcess</span> <span class="o">=</span> <span class="nb">spawn</span><span class="p">(</span><span class="nv">RemoteNode</span><span class="p">,</span> <span class="n">web</span><span class="p">,</span> <span class="n">start_server</span><span class="p">,</span> <span class="p">[</span><span class="nv">Port</span><span class="p">,</span> <span class="nv">MaxConnections</span><span class="p">]),</span>

 <span class="c">% Send a message to ServerProcess (asynchronously). The message consists of a tuple</span>
 <span class="c">% with the atom "pause" and the number "10".</span>
 <span class="nv">ServerProcess</span> <span class="o">!</span> <span class="p">{</span><span class="n">pause</span><span class="p">,</span> <span class="mi">10</span><span class="p">},</span>

 <span class="c">% Receive messages sent to this process</span>
 <span class="k">receive</span>
         <span class="n">a_message</span> <span class="o">-&gt;</span> <span class="n">do_something</span><span class="p">;</span>
         <span class="p">{</span><span class="n">data</span><span class="p">,</span> <span class="nv">DataContent</span><span class="p">}</span> <span class="o">-&gt;</span> <span class="n">handle</span><span class="p">(</span><span class="nv">DataContent</span><span class="p">);</span>
         <span class="p">{</span><span class="n">hello</span><span class="p">,</span> <span class="nv">Text</span><span class="p">}</span> <span class="o">-&gt;</span> <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">"Got hello message: </span><span class="si">~s</span><span class="s">"</span><span class="p">,</span> <span class="p">[</span><span class="nv">Text</span><span class="p">]);</span>
         <span class="p">{</span><span class="n">goodbye</span><span class="p">,</span> <span class="nv">Text</span><span class="p">}</span> <span class="o">-&gt;</span> <span class="nn">io</span><span class="p">:</span><span class="nf">format</span><span class="p">(</span><span class="s">"Got goodbye message: </span><span class="si">~s</span><span class="s">"</span><span class="p">,</span> <span class="p">[</span><span class="nv">Text</span><span class="p">])</span>
 <span class="k">end</span><span class="p">.</span>
</pre></div>
<p>As the example shows, processes may be created on remote nodes, and communication with them is transparent in the sense that communication with remote processes works exactly as communication with local processes.</p>
<p>Concurrency supports the primary method of error-handling in Erlang. When a process crashes, it neatly exits and sends a message to the controlling process which can then take action, such as for instance starting a new process that takes over the old process's task.<sup id="cite_ref-23" class="reference"><a href="#cite_note-23">[23]</a></sup><sup id="cite_ref-24" class="reference"><a href="#cite_note-24">[24]</a></sup></p>
<h2><span class="mw-headline" id="Implementation">Implementation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Implementation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The Ericsson Erlang implementation loads virtual machine <a href="/wiki/Bytecode" title="Bytecode">bytecode</a> which is converted to <a href="/wiki/Threaded_code" title="Threaded code">threaded code</a> at load time. It also includes a native code compiler on most platforms, developed by the High Performance Erlang Project (HiPE) at <a href="/wiki/Uppsala_University" title="Uppsala University">Uppsala University</a>. Since October 2001 the HiPE system is fully integrated in Ericsson's Open Source Erlang/OTP system.<sup id="cite_ref-25" class="reference"><a href="#cite_note-25">[25]</a></sup> It also supports interpreting, directly from source code via <a href="/wiki/Abstract_syntax_tree" title="Abstract syntax tree">abstract syntax tree</a>, via script as of R11B-5 release of Erlang.</p>
<h2><span class="mw-headline" id="Hot_code_loading_and_modules">Hot code loading and modules</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: Hot code loading and modules">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Erlang supports language-level <a href="/wiki/Dynamic_Software_Updating" class="mw-redirect" title="Dynamic Software Updating">Dynamic Software Updating</a>. To implement this, code is loaded and managed as "module" units; the module is a <a href="/wiki/Compilation_unit" class="mw-redirect" title="Compilation unit">compilation unit</a>. The system can keep two versions of a module in memory at the same time, and processes can concurrently run code from each. The versions are referred to as the "new" and the "old" version. A process will not move into the new version until it makes an external call to its module.</p>
<p>An example of the mechanism of hot code loading:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
  <span class="c">%% A process whose only job is to keep a counter.</span>
  <span class="c">%% First version</span>
  <span class="o">-</span><span class="n">module</span><span class="p">(</span><span class="n">counter</span><span class="p">).</span>
  <span class="o">-</span><span class="n">export</span><span class="p">([</span><span class="n">start</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span> <span class="n">codeswitch</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>

  <span class="n">start</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">loop</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span>

  <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="k">receive</span>
       <span class="p">{</span><span class="n">increment</span><span class="p">,</span> <span class="nv">Count</span><span class="p">}</span> <span class="o">-&gt;</span>
          <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="o">+</span><span class="nv">Count</span><span class="p">);</span>
       <span class="p">{</span><span class="n">counter</span><span class="p">,</span> <span class="nv">Pid</span><span class="p">}</span> <span class="o">-&gt;</span>
          <span class="nv">Pid</span> <span class="o">!</span> <span class="p">{</span><span class="n">counter</span><span class="p">,</span> <span class="nv">Sum</span><span class="p">},</span>
          <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">);</span>
       <span class="n">code_switch</span> <span class="o">-&gt;</span>
          <span class="o">?</span><span class="nv">MODULE</span><span class="p">:</span><span class="nf">codeswitch</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span>
          <span class="c">% Force the use of 'codeswitch/1' from the latest MODULE version</span>
    <span class="k">end</span><span class="p">.</span>

  <span class="n">codeswitch</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">).</span>
</pre></div>
<p>For the second version, we add the possibility to reset the count to zero.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
  <span class="c">%% Second version</span>
  <span class="o">-</span><span class="n">module</span><span class="p">(</span><span class="n">counter</span><span class="p">).</span>
  <span class="o">-</span><span class="n">export</span><span class="p">([</span><span class="n">start</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span> <span class="n">codeswitch</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>

  <span class="n">start</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">loop</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span>

  <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span> <span class="o">-&gt;</span>
    <span class="k">receive</span>
       <span class="p">{</span><span class="n">increment</span><span class="p">,</span> <span class="nv">Count</span><span class="p">}</span> <span class="o">-&gt;</span>
          <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="o">+</span><span class="nv">Count</span><span class="p">);</span>
       <span class="n">reset</span> <span class="o">-&gt;</span>
          <span class="n">loop</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
       <span class="p">{</span><span class="n">counter</span><span class="p">,</span> <span class="nv">Pid</span><span class="p">}</span> <span class="o">-&gt;</span>
          <span class="nv">Pid</span> <span class="o">!</span> <span class="p">{</span><span class="n">counter</span><span class="p">,</span> <span class="nv">Sum</span><span class="p">},</span>
          <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">);</span>
       <span class="n">code_switch</span> <span class="o">-&gt;</span>
          <span class="o">?</span><span class="nv">MODULE</span><span class="p">:</span><span class="nf">codeswitch</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span>
    <span class="k">end</span><span class="p">.</span>

  <span class="n">codeswitch</span><span class="p">(</span><span class="nv">Sum</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">loop</span><span class="p">(</span><span class="nv">Sum</span><span class="p">).</span>
</pre></div>
<p>Only when receiving a message consisting of the atom 'code_switch' will the loop execute an external call to codeswitch/1 (<code>?MODULE</code> is a preprocessor macro for the current module). If there is a new version of the "counter" module in memory, then its codeswitch/1 function will be called. The practice of having a specific entry-point into a new version allows the programmer to transform state to what is required in the newer version. In our example we keep the state as an integer.</p>
<p>In practice, systems are built up using design principles from the Open Telecom Platform which leads to more code upgradable designs. Successful hot code loading is a tricky subject; Code needs to be written with care to make use of Erlang's facilities.</p>
<h2><span class="mw-headline" id="Distribution">Distribution</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: Distribution">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In 1998, Ericsson released Erlang as <a href="/wiki/Open_source" class="mw-redirect" title="Open source">open source</a> to ensure its independence from a single vendor and to increase awareness of the language. Erlang, together with libraries and the real-time distributed database <a href="/wiki/Mnesia" title="Mnesia">Mnesia</a>, forms the <a href="/wiki/Open_Telecom_Platform" title="Open Telecom Platform">Open Telecom Platform</a> (OTP) collection of libraries. Ericsson and a few other companies offer commercial support for Erlang.</p>
<p>Since the open source release, Erlang has been used by several firms worldwide, including <a href="/wiki/Nortel_Networks" class="mw-redirect" title="Nortel Networks">Nortel</a> and <a href="/wiki/T-Mobile" title="T-Mobile">T-Mobile</a>.<sup id="cite_ref-26" class="reference"><a href="#cite_note-26">[26]</a></sup> Although Erlang was designed to fill a niche and has remained an obscure language for most of its existence, its popularity is growing due to demand for concurrent services.<sup id="cite_ref-27" class="reference"><a href="#cite_note-27">[27]</a></sup><sup id="cite_ref-28" class="reference"><a href="#cite_note-28">[28]</a></sup> Erlang has found some use in fielding <a href="/wiki/MMORPG" class="mw-redirect" title="MMORPG">MMORPG</a> servers.<sup id="cite_ref-29" class="reference"><a href="#cite_note-29">[29]</a></sup></p>
<h2><span class="mw-headline" id="Variants">Variants</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=10" title="Edit section: Variants">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Elixir_(programming_language)" title="Elixir (programming language)">Elixir</a>: a functional, concurrent, general-purpose programming language that runs on the Erlang Virtual Machine (BEAM).</li>
<li><a href="/wiki/LFE_(programming_language)" title="LFE (programming language)">Lisp Flavored Erlang</a>: a <a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">LISP</a> based programming language that runs on the Erlang Virtual Machine (BEAM).</li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=11" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-width" style="-moz-column-width: 30em; -webkit-column-width: 30em; column-width: 30em; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="https://github.com/erlang/otp/releases">Releases</a></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://vimeo.com/97329186">18:30</a></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite class="citation web">Joe Armstrong; Bjarne Däcker; Thomas Lindgren; Håkan Millroth. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20111025022940/http://ftp.sunet.se/pub/lang/erlang/white_paper.html">"Open-source Erlang - White Paper"</a>. Archived from <a rel="nofollow" class="external text" href="http://ftp.sunet.se/pub/lang/erlang/white_paper.html">the original</a> on 2011-10-25<span class="reference-accessdate">. Retrieved <span class="nowrap">31 July</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.au=Bjarne+D%C3%A4cker&amp;rft.au=H%C3%A5kan+Millroth&amp;rft.au=Joe+Armstrong&amp;rft.au=Thomas+Lindgren&amp;rft.btitle=Open-source+Erlang+-+White+Paper&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fftp.sunet.se%2Fpub%2Flang%2Ferlang%2Fwhite_paper.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-hopl-4"><span class="mw-cite-backlink">^ <a href="#cite_ref-hopl_4-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-hopl_4-1"><sup><i><b>b</b></i></sup></a> <a href="#cite_ref-hopl_4-2"><sup><i><b>c</b></i></sup></a> <a href="#cite_ref-hopl_4-3"><sup><i><b>d</b></i></sup></a> <a href="#cite_ref-hopl_4-4"><sup><i><b>e</b></i></sup></a></span> <span class="reference-text">Joe Armstrong, "History of Erlang", in <i>HOPL III: Proceedings of the third ACM SIGPLAN conference on History of programming languages</i>, 2007, <a href="/wiki/Special:BookSources/9781595937667" class="internal mw-magiclink-isbn">ISBN 978-1-59593-766-7</a></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.cio.com/article/3020454/open-source-tools/how-tech-giants-spread-open-source-programming-love.html">"How tech giants spread open source programming love - CIO.com"</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=How+tech+giants+spread+open+source+programming+love+-+CIO.com&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.cio.com%2Farticle%2F3020454%2Fopen-source-tools%2Fhow-tech-giants-spread-open-source-programming-love.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://web.archive.org/web/19991009002753/www.erlang.se/onlinenews/ErlangOTPos.shtml">"Erlang/OTP Released as Open Source™, 1998-12-08"</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang%2FOTP+Released+as+Open+Source%84%A2%2C+1998-12-08&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fweb.archive.org%2Fweb%2F19991009002753%2Fwww.erlang.se%2Fonlinenews%2FErlangOTPos.shtml&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.erlang.org/pipermail/erlang-questions/1999-February/000098.html">"Erlang, the mathematician?"</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang%2C+the+mathematician%3F&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Fpipermail%2Ferlang-questions%2F1999-February%2F000098.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite class="citation journal">Armstrong, Joe (August 1997). <a rel="nofollow" class="external text" href="http://dl.acm.org/citation.cfm?doid=258948.258967">"The development of Erlang"</a>. <i>ACM SIGPLAN Notices</i>. <b>32</b> (8): 196–203. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1145%2F258948.258967">10.1145/258948.258967</a><span class="reference-accessdate">. Retrieved <span class="nowrap">19 February</span> 2016</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=The+development+of+Erlang&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.date=1997-08&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fdoid%3D258948.258967&amp;rft_id=info%3Adoi%2F10.1145%2F258948.258967&amp;rft.issue=8&amp;rft.jtitle=ACM+SIGPLAN+Notices&amp;rft.pages=196-203&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=32" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.rabbitmq.com/resources/armstrong.pdf">"Concurrency Oriented Programming in Erlang"</a> <span style="font-size:85%;">(PDF)</span>. 9 November 2002.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Concurrency+Oriented+Programming+in+Erlang&amp;rft.date=2002-11-09&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.rabbitmq.com%2Fresources%2Farmstrong.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-questions-10"><span class="mw-cite-backlink">^ <a href="#cite_ref-questions_10-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-questions_10-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://erlang.org/pipermail/erlang-questions/2006-July/021368.html">"question about Erlang's future"</a>. 6 July 2010.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=question+about+Erlang%27s+future&amp;rft.date=2010-07-06&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Ferlang.org%2Fpipermail%2Ferlang-questions%2F2006-July%2F021368.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://erlang.org/download/armstrong_thesis_2003.pdf">http://erlang.org/download/armstrong_thesis_2003.pdf</a></span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><cite id="CITEREFRackspace_Studios.2C_SFO2013" class="citation">Rackspace Studios, SFO (2013-03-26), <a rel="nofollow" class="external text" href="https://www.youtube.com/watch?v=u41GEwIq2mE&amp;t=3m59s"><i>Rackspace takes a look at the ERLANG programming language for distributed computing</i></a><span class="reference-accessdate">, retrieved <span class="nowrap">2017-01-31</span></span></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.au=Rackspace+Studios%2C+SFO&amp;rft.btitle=Rackspace+takes+a+look+at+the+ERLANG+programming+language+for+distributed+computing&amp;rft.date=2013-03-26&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Du41GEwIq2mE%26t%3D3m59s&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.ericsson.com/news/141204-inside-erlang-creator-joe-armstrong-tells-his-story_244099435_c">"Ericsson"</a>. <i>Ericsson.com</i><span class="reference-accessdate">. Retrieved <span class="nowrap">2016-02-13</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Ericsson&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.ericsson.com%2Fnews%2F141204-inside-erlang-creator-joe-armstrong-tells-his-story_244099435_c&amp;rft.jtitle=Ericsson.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://brikis98.blogspot.se/2012/11/seven-languages-in-seven-weeks-erlang.html">"Redirecting..."</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2 May</span> 2015</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Redirecting...&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fbrikis98.blogspot.se%2F2012%2F11%2Fseven-languages-in-seven-weeks-erlang.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external autonumber" href="http://www.aquabu.com/2008/02/16/fibonacci-sequence-recursion-in-erlang/">[1]</a><sup class="noprint Inline-Template"><span style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Link_rot" title="Wikipedia:Link rot"><span title="&#160;Dead link since February 2016">dead link</span></a></i>]</span></sup></span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external free" href="http://erlang.org/doc/programming_examples/list_comprehensions.html">http://erlang.org/doc/programming_examples/list_comprehensions.html</a></span></li>
<li id="cite_note-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-17">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://erlang.org/doc/apps/stdlib/unicode_usage.html">"Erlang -- Using Unicode in Erlang"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2 May</span> 2015</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang+--+Using+Unicode+in+Erlang&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Ferlang.org%2Fdoc%2Fapps%2Fstdlib%2Funicode_usage.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://code.google.com/p/ect/">"ect - Erlang Class Transformation - add object-oriented programming to Erlang - Google Project Hosting"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2 May</span> 2015</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=ect+-++++++Erlang+Class+Transformation+-+add+object-oriented+programming+to+Erlang+-+Google+Project+Hosting&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Fcode.google.com%2Fp%2Fect%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-19">^</a></b></span> <span class="reference-text"><cite class="citation journal"><a href="/wiki/Joe_Armstrong_(programming)" class="mw-redirect" title="Joe Armstrong (programming)">Armstrong, Joe</a> (September 2010). "Erlang". <i><a href="/wiki/Communications_of_the_ACM" title="Communications of the ACM">Communications of the ACM</a></i>. <b>53</b> (9): 68–75. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1145%2F1810891.1810910">10.1145/1810891.1810910</a>. <q>Erlang is conceptually similar to the occam programming language, though it recasts the ideas of CSP in a functional framework and uses asynchronous message passing.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Erlang&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.date=2010-09&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F1810891.1810910&amp;rft.issue=9&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=68-75&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=53" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20150227174813/http://www.erlang.org/doc/efficiency_guide/processes.html">"Erlang Efficiency Guide - Processes"</a>. Archived from <a rel="nofollow" class="external text" href="http://www.erlang.org/doc/efficiency_guide/processes.html">the original</a> on 2015-02-27.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang+Efficiency+Guide+-+Processes&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Fdoc%2Fefficiency_guide%2Fprocesses.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-21">^</a></b></span> <span class="reference-text"><cite class="citation web">Wiger, Ulf (14 November 2005). <a rel="nofollow" class="external text" href="https://groups.google.com/group/comp.lang.functional/msg/33b7a62afb727a4f?dmode=source">"Stress-testing erlang"</a>. <i>comp.lang.functional.misc</i><span class="reference-accessdate">. Retrieved <span class="nowrap">25 August</span> 2006</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Stress-testing+erlang&amp;rft.aufirst=Ulf&amp;rft.aulast=Wiger&amp;rft.date=2005-11-14&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Fgroups.google.com%2Fgroup%2Fcomp.lang.functional%2Fmsg%2F33b7a62afb727a4f%3Fdmode%3Dsource&amp;rft.jtitle=comp.lang.functional.misc&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://erlang.2086793.n4.nabble.com/Lock-free-message-queue-td2550221.html">"Lock-free message queue"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">23 December</span> 2013</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Lock-free+message+queue&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Ferlang.2086793.n4.nabble.com%2FLock-free-message-queue-td2550221.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text"><cite class="citation web">Armstrong, Joe. <a rel="nofollow" class="external text" href="https://web.archive.org/web/20150423182840/http://www.erlang.org/doc/getting_started/robustness.html">"Erlang robustness"</a>. Archived from <a rel="nofollow" class="external text" href="http://www.erlang.org/doc/getting_started/robustness.html">the original</a> on 2015-04-23<span class="reference-accessdate">. Retrieved <span class="nowrap">15 July</span> 2010</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.btitle=Erlang+robustness&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Fdoc%2Fgetting_started%2Frobustness.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://web.archive.org/web/20150206050600/http://www.erlang.org/doc/design_principles/sup_princ.html">"Erlang Supervision principles"</a>. Archived from <a rel="nofollow" class="external text" href="http://www.erlang.org/doc/design_principles/sup_princ.html">the original</a> on 2015-02-06<span class="reference-accessdate">. Retrieved <span class="nowrap">15 July</span> 2010</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang+Supervision+principles&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Fdoc%2Fdesign_principles%2Fsup_princ.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.it.uu.se/research/group/hipe/">"High Performance Erlang"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">26 March</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=High+Performance+Erlang&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.it.uu.se%2Fresearch%2Fgroup%2Fhipe%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-26">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.erlang.org/faq/faq.html#AEN50">"Who uses Erlang for product development?"</a>. <i>Frequently asked questions about Erlang</i><span class="reference-accessdate">. Retrieved <span class="nowrap">16 July</span> 2007</span>. <q><i>The largest user of Erlang is (surprise!) Ericsson. Ericsson use it to write software used in telecommunications systems. Many dozens of projects have used it, a particularly large one is the extremely scalable AXD301 ATM switch.</i> Other commercial users listed as part of the FAQ include: Nortel, Deutsche Flugsicherung (the German national <a href="/wiki/Air_traffic_control" title="Air traffic control">air traffic control</a> organisation), and T-Mobile.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Who+uses+Erlang+for+product+development%3F&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Ffaq%2Ffaq.html%23AEN50&amp;rft.jtitle=Frequently+asked+questions+about+Erlang&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-27">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.ddj.com/linux-open-source/201001928?cid=RSSfeed_DDJ_OpenSource">"Programming Erlang"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">13 December</span> 2008</span>. <q>Virtually all language use shared state concurrency. This is very difficult and leads to terrible problems when you handle failure and scale up the system...Some pretty fast-moving startups in the financial world have latched onto Erlang; for example, the Swedish www.kreditor.se.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Programming+Erlang&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.ddj.com%2Flinux-open-source%2F201001928%3Fcid%3DRSSfeed_DDJ_OpenSource&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-28">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.cincomsmalltalk.com/userblogs/ralph/blogView?showComments=true&amp;entry=3364027251">"Erlang, the next Java"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">8 October</span> 2008</span>. <q>I do not believe that other languages can catch up with Erlang anytime soon. It will be easy for them to add language features to be like Erlang. It will take a long time for them to build such a high-quality VM and the mature libraries for concurrency and reliability. So, Erlang is poised for success. If you want to build a multicore application in the next few years, you should look at Erlang.</q></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.btitle=Erlang%2C+the+next+Java&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.cincomsmalltalk.com%2Fuserblogs%2Fralph%2FblogView%3FshowComments%3Dtrue%26entry%3D3364027251&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span><sup class="noprint Inline-Template"><span style="white-space: nowrap;">[<i><a href="/wiki/Wikipedia:Link_rot" title="Wikipedia:Link rot"><span title="&#160;Dead link since February 2016">dead link</span></a></i>]</span></sup></span></li>
<li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29">^</a></b></span> <span class="reference-text"><cite class="citation web">Clarke, Gavin (5 Feb 2011). <a rel="nofollow" class="external text" href="http://www.theregister.co.uk/2011/02/05/battlestar_galactica_mmp/">"Battlestar Galactica vets needed for online roleplay"</a>. <i>Music and Media</i>. <a href="/wiki/The_Reg" class="mw-redirect" title="The Reg">The Reg</a><span class="reference-accessdate">. Retrieved <span class="nowrap">8 February</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Battlestar+Galactica+vets+needed+for+online+roleplay&amp;rft.aufirst=Gavin&amp;rft.aulast=Clarke&amp;rft.date=2011-02-05&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.theregister.co.uk%2F2011%2F02%2F05%2Fbattlestar_galactica_mmp%2F&amp;rft.jtitle=Music+and+Media&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Further_reading">Further reading</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=12" title="Edit section: Further reading">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="refbegin" style="">
<ul>
<li><cite class="citation journal">Armstrong, Joe (2003). <a rel="nofollow" class="external text" href="https://web.archive.org/web/20150323001245/https://www.sics.se/~joe/thesis/armstrong_thesis_2003.pdf">"Making reliable distributed systems in the presence of software errors"</a> <span style="font-size:85%;">(PDF)</span>. Ph.D. Dissertation. The Royal Institute of Technology, Stockholm, Sweden. Archived from the original on 23 March 2015<span class="reference-accessdate">. Retrieved <span class="nowrap">2016-02-13</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Making+reliable+distributed+systems+in+the+presence+of+software+errors&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.date=2003&amp;rft.genre=article&amp;rft_id=https%3A%2F%2Fwww.sics.se%2F~joe%2Fthesis%2Farmstrong_thesis_2003.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span> <span class="citation-comment" style="display:none; color:#33aa33">CS1 maint: BOT: original-url status unknown (<a href="/wiki/Category:CS1_maint:_BOT:_original-url_status_unknown" title="Category:CS1 maint: BOT: original-url status unknown">link</a>)</span></li>
<li><cite class="citation book">Armstrong, J. (2007). "A history of Erlang". <i>Proceedings of the third ACM SIGPLAN conference on History of programming languages - HOPL III</i>. pp.&#160;6–1. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1145%2F1238844.1238850">10.1145/1238844.1238850</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-1-59593-766-7" title="Special:BookSources/978-1-59593-766-7">978-1-59593-766-7</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=A+history+of+Erlang&amp;rft.aufirst=J.&amp;rft.aulast=Armstrong&amp;rft.btitle=Proceedings+of+the+third+ACM+SIGPLAN+conference+on+History+of+programming+languages++-+HOPL+III&amp;rft.date=2007&amp;rft.genre=bookitem&amp;rft_id=info%3Adoi%2F10.1145%2F1238844.1238850&amp;rft.isbn=978-1-59593-766-7&amp;rft.pages=6-1&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><a rel="nofollow" class="external text" href="http://www.erlang.se/publications/bjarnelic.pdf">Early history of Erlang</a> by Bjarne Däcker</li>
<li><cite class="citation journal">Mattsson, H.; Nilsson, H.; Wikstrom, C. (1999). "Mnesia - A distributed robust DBMS for telecommunications applications". <i>First International Workshop on Practical Aspects of Declarative Languages (PADL '99)</i>: 152–163.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Mnesia+-+A+distributed+robust+DBMS+for+telecommunications+applications&amp;rft.date=1999&amp;rft.genre=article&amp;rft.jtitle=First+International+Workshop+on+Practical+Aspects+of+Declarative+Languages+%28PADL+%2799%29&amp;rft.pages=152-163&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span> <span class="citation-comment" style="display:none; color:#33aa33">CS1 maint: Uses authors parameter (<a href="/wiki/Category:CS1_maint:_Uses_authors_parameter" title="Category:CS1 maint: Uses authors parameter">link</a>)</span></li>
<li><cite class="citation book">Armstrong, Joe; Virding, Robert; Williams, Mike; Wikstrom, Claes (16 January 1996). <a rel="nofollow" class="external text" href="https://web.archive.org/web/20120306002430/http://www.erlang.org/erlang_book_toc.html"><i>Concurrent Programming in Erlang</i></a> (2nd ed.). <a href="/wiki/Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. p.&#160;358. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-0-13-508301-7" title="Special:BookSources/978-0-13-508301-7">978-0-13-508301-7</a>. Archived from <a rel="nofollow" class="external text" href="http://www.erlang.org/erlang_book_toc.html">the original</a> on 2012-03-06.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.au=Virding%2C+Robert&amp;rft.au=Wikstrom%2C+Claes&amp;rft.au=Williams%2C+Mike&amp;rft.btitle=Concurrent+Programming+in+Erlang&amp;rft.date=1996-01-16&amp;rft.edition=2nd&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.erlang.org%2Ferlang_book_toc.html&amp;rft.isbn=978-0-13-508301-7&amp;rft.pages=358&amp;rft.pub=Prentice+Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Armstrong, Joe (11 July 2007). <a rel="nofollow" class="external text" href="http://pragprog.com/titles/jaerlang/programming-erlang"><i>Programming Erlang: Software for a Concurrent World</i></a> (1st ed.). <a href="/wiki/Pragmatic_Bookshelf" class="mw-redirect" title="Pragmatic Bookshelf">Pragmatic Bookshelf</a>. p.&#160;536. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-1-934356-00-5" title="Special:BookSources/978-1-934356-00-5">978-1-934356-00-5</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.aufirst=Joe&amp;rft.aulast=Armstrong&amp;rft.btitle=Programming+Erlang%3A+Software+for+a+Concurrent+World&amp;rft.date=2007-07-11&amp;rft.edition=1st&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fpragprog.com%2Ftitles%2Fjaerlang%2Fprogramming-erlang&amp;rft.isbn=978-1-934356-00-5&amp;rft.pages=536&amp;rft.pub=Pragmatic+Bookshelf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Thompson, Simon J.; Cesarini, Francesco (19 June 2009). <a rel="nofollow" class="external text" href="http://www.erlangprogramming.org"><i>Erlang Programming: A Concurrent Approach to Software Development</i></a> (1st ed.). Sebastopol, California: <a href="/wiki/O%27Reilly_Media" title="O'Reilly Media">O'Reilly Media</a>, Inc. p.&#160;496. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-0-596-51818-9" title="Special:BookSources/978-0-596-51818-9">978-0-596-51818-9</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.au=Cesarini%2C+Francesco&amp;rft.aufirst=Simon+J.&amp;rft.aulast=Thompson&amp;rft.btitle=Erlang+Programming%3A+A+Concurrent+Approach+to+Software+Development&amp;rft.date=2009-06-19&amp;rft.edition=1st&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fwww.erlangprogramming.org&amp;rft.isbn=978-0-596-51818-9&amp;rft.pages=496&amp;rft.place=Sebastopol%2C+California&amp;rft.pub=O%27Reilly+Media%2C+Inc&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation book">Logan, Martin; Merritt, Eric; Carlsson, Richard (28 May 2010). <i>Erlang and OTP in Action</i> (1st ed.). Greenwich, CT: <a href="/wiki/Manning_Publications" title="Manning Publications">Manning Publications</a>. p.&#160;500. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-1-933988-78-8" title="Special:BookSources/978-1-933988-78-8">978-1-933988-78-8</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.au=Carlsson%2C+Richard&amp;rft.aufirst=Martin&amp;rft.aulast=Logan&amp;rft.au=Merritt%2C+Eric&amp;rft.btitle=Erlang+and+OTP+in+Action&amp;rft.date=2010-05-28&amp;rft.edition=1st&amp;rft.genre=book&amp;rft.isbn=978-1-933988-78-8&amp;rft.pages=500&amp;rft.place=Greenwich%2C+CT&amp;rft.pub=Manning+Publications&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation web">Martin, Brown (10 May 2011). <a rel="nofollow" class="external text" href="http://www.ibm.com/developerworks/opensource/library/os-erlang1/index.html">"Introduction to programming in Erlang, Part 1: The basics"</a>. <i>developerWorks</i>. IBM<span class="reference-accessdate">. Retrieved <span class="nowrap">10 May</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Introduction+to+programming+in+Erlang%2C+Part+1%3A+The+basics&amp;rft.aufirst=Brown&amp;rft.aulast=Martin&amp;rft.date=2011-05-10&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Fopensource%2Flibrary%2Fos-erlang1%2Findex.html&amp;rft.jtitle=developerWorks&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation web">Martin, Brown (17 May 2011). <a rel="nofollow" class="external text" href="http://www.ibm.com/developerworks/opensource/library/os-erlang2/index.html">"Introduction to programming in Erlang, Part 2: Use advanced features and functionality"</a>. <i>developerWorks</i>. IBM<span class="reference-accessdate">. Retrieved <span class="nowrap">17 May</span> 2011</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Introduction+to+programming+in+Erlang%2C+Part+2%3A+Use+advanced+features+and+functionality&amp;rft.aufirst=Brown&amp;rft.aulast=Martin&amp;rft.date=2011-05-17&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.ibm.com%2Fdeveloperworks%2Fopensource%2Flibrary%2Fos-erlang2%2Findex.html&amp;rft.jtitle=developerWorks&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>
<li><cite class="citation web">Wiger, Ulf (30 Mar 2001). <a rel="nofollow" class="external text" href="http://www.erlang.se/publications/Ulf_Wiger.pdf">"Four-fold Increase in Productivity and Quality: Industrial-Strength Functional Programming in Telecom-Class Products"</a> <span style="font-size:85%;">(PDF)</span>. <i>FEmSYS 2001 Deployment on distributed architectures</i>. Ericsson Telecom AB<span class="reference-accessdate">. Retrieved <span class="nowrap">16 Sep</span> 2014</span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AErlang+%28programming+language%29&amp;rft.atitle=Four-fold+Increase+in+Productivity+and+Quality%3A+Industrial-Strength+Functional+Programming+in+Telecom-Class+Products&amp;rft.aufirst=Ulf&amp;rft.aulast=Wiger&amp;rft.date=2001-03-30&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.erlang.se%2Fpublications%2FUlf_Wiger.pdf&amp;rft.jtitle=FEmSYS+2001+Deployment+on+distributed+architectures&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>
</ul>
</div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit&amp;section=13" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table role="presentation" class="mbox-small plainlinks sistersitebox" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a href="/wiki/File:Commons-logo.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png" width="30" height="40" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/45px-Commons-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/59px-Commons-logo.svg.png 2x" data-file-width="1024" data-file-height="1376" /></a></td>
<td class="mbox-text plainlist">Wikimedia Commons has media related to <i><b><a href="https://commons.wikimedia.org/wiki/Category:Erlang_(programming_language)" class="extiw" title="commons:Category:Erlang (programming language)">Erlang (programming language)</a></b></i>.</td>
</tr>
</table>
<table role="presentation" class="mbox-small plainlinks sistersitebox" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a href="/wiki/File:Wikibooks-logo-en-noslogan.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" width="40" height="40" class="noviewer" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" data-file-width="400" data-file-height="400" /></a></td>
<td class="mbox-text plainlist">Wikibooks has a book on the topic of: <i><b><a href="https://en.wikibooks.org/wiki/Erlang_Programming" class="extiw" title="wikibooks:Erlang Programming">Erlang Programming</a></b></i></td>
</tr>
</table>
<ul>
<li><span class="official-website"><span class="url"><a rel="nofollow" class="external text" href="https://www.erlang.org">Official website</a></span></span></li>
<li><a rel="nofollow" class="external text" href="http://www.ericsson.com/news/141204-inside-erlang-creator-joe-armstrong-tells-his-story_244099435_c">Inside Erlang – creator Joe Armstrong tells his story - Ericsson</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1258
Cached time: 20170202080333
Cache expiry: 86400
Dynamic content: true
CPU time usage: 0.436 seconds
Real time usage: 0.520 seconds
Preprocessor visited node count: 2805/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 77689/2097152 bytes
Template argument size: 4705/2097152 bytes
Highest expansion depth: 25/40
Expensive parser function count: 4/500
Lua time usage: 0.200/10.000 seconds
Lua memory usage: 5.22 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  459.819      1 -total
 41.52%  190.903      1 Template:Reflist
 28.33%  130.263      2 Template:Infobox
 25.54%  117.444     23 Template:Cite_web
 21.34%   98.121      1 Template:Infobox_programming_language
  9.35%   42.993      1 Template:Infobox_software/simple
  7.09%   32.594      2 Template:Dead_link
  6.92%   31.811      1 Template:Commons_category
  6.87%   31.577      2 Template:Sister_project
  6.71%   30.869      2 Template:Start_date_and_age
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:9646-0!*!0!!en!4!* and timestamp 20170202080332 and revision id 763089345
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Erlang_(programming_language)&amp;oldid=763089345">https://en.wikipedia.org/w/index.php?title=Erlang_(programming_language)&amp;oldid=763089345</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Concurrent_programming_languages" title="Category:Concurrent programming languages">Concurrent programming languages</a></li><li><a href="/wiki/Category:Declarative_programming_languages" title="Category:Declarative programming languages">Declarative programming languages</a></li><li><a href="/wiki/Category:Dynamically_typed_programming_languages" title="Category:Dynamically typed programming languages">Dynamically typed programming languages</a></li><li><a href="/wiki/Category:Ericsson" title="Category:Ericsson">Ericsson</a></li><li><a href="/wiki/Category:Erlang_(programming_language)" title="Category:Erlang (programming language)">Erlang (programming language)</a></li><li><a href="/wiki/Category:Formerly_proprietary_software" title="Category:Formerly proprietary software">Formerly proprietary software</a></li><li><a href="/wiki/Category:Functional_languages" title="Category:Functional languages">Functional languages</a></li><li><a href="/wiki/Category:Pattern_matching_programming_languages" title="Category:Pattern matching programming languages">Pattern matching programming languages</a></li><li><a href="/wiki/Category:Programming_languages_created_in_1986" title="Category:Programming languages created in 1986">Programming languages created in 1986</a></li><li><a href="/wiki/Category:Programming_languages_created_in_the_1980s" title="Category:Programming languages created in the 1980s">Programming languages created in the 1980s</a></li><li><a href="/wiki/Category:Register-based_virtual_machines" title="Category:Register-based virtual machines">Register-based virtual machines</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:All_articles_with_dead_external_links" title="Category:All articles with dead external links">All articles with dead external links</a></li><li><a href="/wiki/Category:Articles_with_dead_external_links_from_February_2016" title="Category:Articles with dead external links from February 2016">Articles with dead external links from February 2016</a></li><li><a href="/wiki/Category:Pages_using_ISBN_magic_links" title="Category:Pages using ISBN magic links">Pages using ISBN magic links</a></li><li><a href="/wiki/Category:Pages_using_deprecated_image_syntax" title="Category:Pages using deprecated image syntax">Pages using deprecated image syntax</a></li><li><a href="/wiki/Category:CS1_maint:_BOT:_original-url_status_unknown" title="Category:CS1 maint: BOT: original-url status unknown">CS1 maint: BOT: original-url status unknown</a></li><li><a href="/wiki/Category:CS1_maint:_Uses_authors_parameter" title="Category:CS1 maint: Uses authors parameter">CS1 maint: Uses authors parameter</a></li><li><a href="/wiki/Category:Commons_category_with_page_title_same_as_on_Wikidata" title="Category:Commons category with page title same as on Wikidata">Commons category with page title same as on Wikidata</a></li><li><a href="/wiki/Category:Use_dmy_dates_from_January_2012" title="Category:Use dmy dates from January 2012">Use dmy dates from January 2012</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Erlang+%28programming+language%29" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Erlang+%28programming+language%29" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Erlang_(programming_language)"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:Erlang_(programming_language)"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/Erlang_(programming_language)" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Erlang_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Erlang_(programming_language)" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Erlang_(programming_language)&amp;oldid=763089345" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Erlang_(programming_language)&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q334879" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Erlang_%28programming_language%29&amp;id=763089345" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Erlang+%28programming+language%29">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Erlang+%28programming+language%29&amp;returnto=Erlang+%28programming+language%29&amp;oldid=763089345&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Erlang_(programming_language)&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-wikibase-otherprojects' aria-labelledby='p-wikibase-otherprojects-label'>
			<h3 id='p-wikibase-otherprojects-label'>In other projects</h3>

			<div class="body">
									<ul>
						<li class="wb-otherproject-link wb-otherproject-commons"><a href="https://commons.wikimedia.org/wiki/Category:Erlang_(programming_language)" hreflang="en">Wikimedia Commons</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
						<li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D8%A5%D8%B1%D9%84%D8%A7%D9%86%D8%AC" title="إرلانج – Arabic" lang="ar" hreflang="ar" class="interlanguage-link-target">العربية</a></li><li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/Erlang" title="Erlang – Bulgarian" lang="bg" hreflang="bg" class="interlanguage-link-target">Български</a></li><li class="interlanguage-link interwiki-ca"><a href="https://ca.wikipedia.org/wiki/Erlang" title="Erlang – Catalan" lang="ca" hreflang="ca" class="interlanguage-link-target">Català</a></li><li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/Erlang_(programovac%C3%AD_jazyk)" title="Erlang (programovací jazyk) – Czech" lang="cs" hreflang="cs" class="interlanguage-link-target">Čeština</a></li><li class="interlanguage-link interwiki-da"><a href="https://da.wikipedia.org/wiki/Erlang_(programmeringssprog)" title="Erlang (programmeringssprog) – Danish" lang="da" hreflang="da" class="interlanguage-link-target">Dansk</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Erlang_(Programmiersprache)" title="Erlang (Programmiersprache) – German" lang="de" hreflang="de" class="interlanguage-link-target">Deutsch</a></li><li class="interlanguage-link interwiki-et"><a href="https://et.wikipedia.org/wiki/Erlang" title="Erlang – Estonian" lang="et" hreflang="et" class="interlanguage-link-target">Eesti</a></li><li class="interlanguage-link interwiki-el"><a href="https://el.wikipedia.org/wiki/Erlang" title="Erlang – Greek" lang="el" hreflang="el" class="interlanguage-link-target">Ελληνικά</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Erlang" title="Erlang – Spanish" lang="es" hreflang="es" class="interlanguage-link-target">Español</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D8%A7%D8%B1%D9%84%D9%86%DA%AF" title="ارلنگ – Persian" lang="fa" hreflang="fa" class="interlanguage-link-target">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Erlang_(langage)" title="Erlang (langage) – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Erlang" title="Erlang – Galician" lang="gl" hreflang="gl" class="interlanguage-link-target">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%EC%96%BC%EB%9E%AD" title="얼랭 – Korean" lang="ko" hreflang="ko" class="interlanguage-link-target">한국어</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Erlang_(linguaggio_di_programmazione)" title="Erlang (linguaggio di programmazione) – Italian" lang="it" hreflang="it" class="interlanguage-link-target">Italiano</a></li><li class="interlanguage-link interwiki-ka"><a href="https://ka.wikipedia.org/wiki/%E1%83%94%E1%83%A0%E1%83%9A%E1%83%90%E1%83%9C%E1%83%92%E1%83%98" title="ერლანგი – Georgian" lang="ka" hreflang="ka" class="interlanguage-link-target">ქართული</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Erlang_(programmeertaal)" title="Erlang (programmeertaal) – Dutch" lang="nl" hreflang="nl" class="interlanguage-link-target">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Erlang" title="Erlang – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-no"><a href="https://no.wikipedia.org/wiki/Erlang_(programmeringsspr%C3%A5k)" title="Erlang (programmeringsspråk) – Norwegian" lang="no" hreflang="no" class="interlanguage-link-target">Norsk bokmål</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Erlang_(j%C4%99zyk_programowania)" title="Erlang (język programowania) – Polish" lang="pl" hreflang="pl" class="interlanguage-link-target">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Erlang_(linguagem_de_programa%C3%A7%C3%A3o)" title="Erlang (linguagem de programação) – Portuguese" lang="pt" hreflang="pt" class="interlanguage-link-target">Português</a></li><li class="interlanguage-link interwiki-ru badge-Q17437798 badge-goodarticle" title="good article"><a href="https://ru.wikipedia.org/wiki/Erlang" title="Erlang – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-sl"><a href="https://sl.wikipedia.org/wiki/Erlang" title="Erlang – Slovenian" lang="sl" hreflang="sl" class="interlanguage-link-target">Slovenščina</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/Erlang_(programspr%C3%A5k)" title="Erlang (programspråk) – Swedish" lang="sv" hreflang="sv" class="interlanguage-link-target">Svenska</a></li><li class="interlanguage-link interwiki-th"><a href="https://th.wikipedia.org/wiki/%E0%B8%A0%E0%B8%B2%E0%B8%A9%E0%B8%B2%E0%B9%80%E0%B8%AD%E0%B8%AD%E0%B8%A3%E0%B9%8C%E0%B9%81%E0%B8%A5%E0%B8%87" title="ภาษาเออร์แลง – Thai" lang="th" hreflang="th" class="interlanguage-link-target">ไทย</a></li><li class="interlanguage-link interwiki-tg"><a href="https://tg.wikipedia.org/wiki/Erlang" title="Erlang – Tajik" lang="tg" hreflang="tg" class="interlanguage-link-target">Тоҷикӣ</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/Erlang" title="Erlang – Ukrainian" lang="uk" hreflang="uk" class="interlanguage-link-target">Українська</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/Erlang" title="Erlang – Chinese" lang="zh" hreflang="zh" class="interlanguage-link-target">中文</a></li>					</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q334879#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 1 February 2017, at 07:25.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Erlang_(programming_language)&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.436","walltime":"0.520","ppvisitednodes":{"value":2805,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":77689,"limit":2097152},"templateargumentsize":{"value":4705,"limit":2097152},"expansiondepth":{"value":25,"limit":40},"expensivefunctioncount":{"value":4,"limit":500},"entityaccesscount":{"value":1,"limit":400},"timingprofile":["100.00%  459.819      1 -total"," 41.52%  190.903      1 Template:Reflist"," 28.33%  130.263      2 Template:Infobox"," 25.54%  117.444     23 Template:Cite_web"," 21.34%   98.121      1 Template:Infobox_programming_language","  9.35%   42.993      1 Template:Infobox_software/simple","  7.09%   32.594      2 Template:Dead_link","  6.92%   31.811      1 Template:Commons_category","  6.87%   31.577      2 Template:Sister_project","  6.71%   30.869      2 Template:Start_date_and_age"]},"scribunto":{"limitreport-timeusage":{"value":"0.200","limit":"10.000"},"limitreport-memusage":{"value":5478007,"limit":52428800}},"cachereport":{"origin":"mw1258","timestamp":"20170202080333","ttl":86400,"transientcontent":true}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":55,"wgHostname":"mw1244"});});</script>
	</body>
</html>
