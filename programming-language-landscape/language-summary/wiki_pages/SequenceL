<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>SequenceL - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"SequenceL","wgTitle":"SequenceL","wgCurRevisionId":762196639,"wgRevisionId":762196639,"wgArticleId":37895661,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles containing potentially dated statements from 2015","All articles containing potentially dated statements","Official website not in Wikidata","High-level programming languages","Parallel computing","Array programming languages","Cross-platform software","Declarative programming languages","Functional programming","Functional languages","Statically typed programming languages","Heterogeneous computing","Concurrent programming languages","Mathematical software","Numerical analysis software for Windows","Numerical analysis software for MacOS","Numerical analysis software for Linux","Numerical linear algebra","Numerical programming languages","Numerical software","Science software for Windows","Science software for MacOS","Science software for Linux","GPGPU"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"SequenceL","wgRelevantArticleId":37895661,"wgRequestId":"WIr6yQpAADwAAHc-MZMAAABW","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q7452449","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","ext.math.styles":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["ext.cite.a11y","ext.math.scripts","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.math.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediaBadges%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.8"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/SequenceL"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=SequenceL&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=SequenceL&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/SequenceL"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-SequenceL rootpage-SequenceL skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">SequenceL</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><table class="infobox vevent" style="width:22em">
<caption class="summary">SequenceL</caption>
<tr>
<th scope="row"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigms</a></th>
<td><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a>, <a href="/wiki/Functional_programming" title="Functional programming">Functional</a>, <a href="/wiki/Purely_functional_programming" title="Purely functional programming">Purely functional</a>, <a href="/wiki/Declarative_programming" title="Declarative programming">Declarative programming</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_design" title="Software design">Designed&#160;by</a></th>
<td>Dr. Daniel Cooke,<br />
Dr. Nelson Rushton,<br />
Dr. Brad Nemanich</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_developer" title="Software developer">Developers</a></th>
<td class="organiser">Texas Tech University,<br />
Texas Multicore Technologies</td>
</tr>
<tr>
<th scope="row">First&#160;appeared</th>
<td>1989<span class="noprint">; 28&#160;years ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">1989</span>)</span></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td><a href="/wiki/Type_system#Static_type_checking" title="Type system">Static</a>, <a href="/wiki/Type_inference" title="Type inference">type inference</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Computing_platform" title="Computing platform">Platform</a></th>
<td><a href="/wiki/X86" title="X86">x86</a>, <a href="/wiki/IBM_POWER_microprocessors" title="IBM POWER microprocessors">POWER</a>, <a href="/wiki/ARM_architecture" title="ARM architecture">ARM</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Operating_system" title="Operating system">OS</a></th>
<td><a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>, <a href="/wiki/MacOS" title="MacOS">macOS</a>, <a href="/wiki/Linux" title="Linux">Linux</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_license" title="Software license">License</a></th>
<td><a href="/wiki/Proprietary_software" title="Proprietary software">Proprietary</a><sup id="cite_ref-Licensing_1-0" class="reference"><a href="#cite_note-Licensing-1">[1]</a></sup></td>
</tr>
<tr>
<th scope="row">Website</th>
<td><span class="url"><a rel="nofollow" class="external text" href="http://texasmulticore.com">texasmulticore<wbr />.com</a></span></td>
</tr>
</table>
<p><b>SequenceL</b> is a general purpose <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> language and auto-parallelizing (<a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a>) compiler and tool set, whose primary design objectives are performance on <a href="/wiki/Multi-core_processor" title="Multi-core processor">multi-core processor</a> hardware, ease of programming, platform portability/optimization, and code clarity and readability. Its main advantage is that it can be used to write straightforward code that automatically takes full advantage of all the processing power available, without <a href="/wiki/Programmer" title="Programmer">programmers</a> needing to be concerned with identifying <a href="/wiki/Parallel_computing" title="Parallel computing">parallelisms</a>, specifying <a href="/wiki/Automatic_vectorization" title="Automatic vectorization">vectorization</a>, avoiding <a href="/wiki/Race_condition" title="Race condition">race conditions</a>, and other challenges of manual <a href="/wiki/Directive_pragma" class="mw-redirect" title="Directive pragma">directive-based programming</a> approaches such as <a href="/wiki/OpenMP" title="OpenMP">OpenMP</a>.</p>
<p>Programs written in SequenceL can be compiled to <a href="/wiki/Thread_(computing)" title="Thread (computing)">multithreaded</a> code that runs in parallel, with no explicit indications from a programmer of how or what to parallelize. As of 2015<sup class="plainlinks noprint asof-tag update" style="display:none;"><a class="external text" href="//en.wikipedia.org/w/index.php?title=SequenceL&amp;action=edit">[update]</a></sup>, versions of the SequenceL <a href="/wiki/Compiler" title="Compiler">compiler</a> generate parallel code in <a href="/wiki/C%2B%2B" title="C++">C++</a> and <a href="/wiki/OpenCL" title="OpenCL">OpenCL</a>, which allows it to work with most popular programming languages, including <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, C++, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, and <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>. A platform-specific runtime manages the threads safely, automatically providing parallel performance according to the number of cores available, currently supporting <a href="/wiki/X86" title="X86">x86</a>, <a href="/wiki/Power_Architecture" title="Power Architecture">OpenPOWER/POWER8</a>, and <a href="/wiki/ARM_architecture" title="ARM architecture">ARM</a> platforms.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Design"><span class="tocnumber">2</span> <span class="toctext">Design</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Normalize.E2.80.93transpose"><span class="tocnumber">3</span> <span class="toctext">Normalize–transpose</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Example:_prime_numbers"><span class="tocnumber">4</span> <span class="toctext">Example: prime numbers</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Components"><span class="tocnumber">5</span> <span class="toctext">Components</span></a>
<ul>
<li class="toclevel-2 tocsection-6"><a href="#Interpreter"><span class="tocnumber">5.1</span> <span class="toctext">Interpreter</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Compiler"><span class="tocnumber">5.2</span> <span class="toctext">Compiler</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Runtime"><span class="tocnumber">5.3</span> <span class="toctext">Runtime</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Eclipse_IDE_plug-in_with_debugger"><span class="tocnumber">5.4</span> <span class="toctext">Eclipse IDE plug-in with debugger</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Libraries"><span class="tocnumber">5.5</span> <span class="toctext">Libraries</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-11"><a href="#See_also"><span class="tocnumber">6</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#References"><span class="tocnumber">7</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#External_links"><span class="tocnumber">8</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>SequenceL was initially developed over a 20-year period starting in 1989, mostly at <a href="/wiki/Texas_Tech_University" title="Texas Tech University">Texas Tech University</a>. Primary funding was from <a href="/wiki/NASA" title="NASA">NASA</a>, which originally wanted to develop a specification language which was "self-verifying"; that is, once written, the requirements could be <i>executed</i>, and the results verified against the desired outcome.</p>
<p>The principal researcher on the project was initially Dr. Daniel Cooke,<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup> who was soon joined by Dr. Nelson Rushton (another Texas Tech professor) and later Dr. Brad Nemanich (then a PhD student under Cooke). The goal of creating a language that was simple enough to be readable, but unambiguous enough to be executable, drove the inventors to settle on a <a href="/wiki/Functional_programming" title="Functional programming">functional</a>, <a href="/wiki/Declarative_programming" title="Declarative programming">declarative</a> language approach, where a programmer describes desired results, rather than the means to achieve them. The language is then free to solve the problem in the most efficient manner that it can find.</p>
<p>As the language evolved, the researchers developed new computational approaches, including <i>consume-simplify-produce</i> (CSP).<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup> In 1998, research began to apply SequenceL to <a href="/wiki/Parallel_computing" title="Parallel computing">parallel computing</a>. This culminated in 2004 when it took its more complete form with the addition of the <i>normalize-transpose</i> (NT) semantic,<sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup><sup id="cite_ref-5" class="reference"><a href="#cite_note-5">[5]</a></sup> which coincided with the major vendors of <a href="/wiki/Central_processing_unit" title="Central processing unit">central processing units</a> (CPUs) making a major shift to <a href="/wiki/Multi-core_processor" title="Multi-core processor">multi-core processors</a> rather than continuing to increase clock speeds. NT is the semantic work-horse, being used to simplify and decompose structures, based on a <a href="/wiki/Dataflow" title="Dataflow">dataflow</a>-like execution strategy similar to GAMMA<sup id="cite_ref-6" class="reference"><a href="#cite_note-6">[6]</a></sup> and NESL.<sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup> The NT semantic achieves a goal similar to that of the Lämmel and Peyton-Jones’ boilerplate elimination.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup><sup id="cite_ref-9" class="reference"><a href="#cite_note-9">[9]</a></sup> All other features of the language are definable from these two laws - including <a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">recursion</a>, subscripting structures, function references, and evaluation of function bodies.<sup id="cite_ref-10" class="reference"><a href="#cite_note-10">[10]</a></sup><sup id="cite_ref-11" class="reference"><a href="#cite_note-11">[11]</a></sup></p>
<p>Though it was not the original intent, these new approaches allowed the language to parallelize a large fraction of the operations it performed, transparently to the programmer. In 2006, a prototype auto-parallelizing compiler was developed at Texas Tech University. In 2009, Texas Tech licensed the intellectual property to Texas Multicore Technologies (TMT),<sup id="cite_ref-12" class="reference"><a href="#cite_note-12">[12]</a></sup> for follow-on commercial development. In January 2017 TMT released v3, which includes a free Community Edition for download in addition to the commercial Professional Edition.</p>
<h2><span class="mw-headline" id="Design">Design</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=2" title="Edit section: Design">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>SequenceL is designed to be as simple as possible to learn and use, focusing on algorithmic code where it adds value, e.g., the inventors chose not to reinvent I/O since C handled that well. As a result, the full <a rel="nofollow" class="external text" href="https://texasmulticore.com/documentation/3.0/0710language_ref.html">language reference for SequenceL</a> is only 40 pages, with copious examples, and its formal grammar has around 15 production rules.<sup id="cite_ref-13" class="reference"><a href="#cite_note-13">[13]</a></sup></p>
<p>SequenceL is strictly evaluated (like <a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a>), statically typed with <a href="/wiki/Type_inference" title="Type inference">type inference</a> (like <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>), and uses a combination of infix and prefix operators that resemble standard, informal mathematical notation (like <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, etc.). It is a purely declarative language, meaning that a programmer defines functions, in the mathematical sense, without giving instructions for their implementation. For example, the mathematical definition of matrix multiplication is as follows:</p>
<dl>
<dd>The product of the <i>m</i>×<i>p</i> matrix <i>A</i> with the <i>p</i>×<i>n</i> matrix <i>B</i> is the <i>m</i>×<i>n</i> matrix whose (<i>i</i>,<i>j</i>)'th entry is
<dl>
<dd><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" >
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <munderover>
          <mo>&#x2211;<!-- ∑ --></mo>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>k</mi>
            <mo>=</mo>
            <mn>1</mn>
          </mrow>
          <mrow class="MJX-TeXAtom-ORD">
            <mi>p</mi>
          </mrow>
        </munderover>
        <mi>A</mi>
        <mo stretchy="false">(</mo>
        <mi>i</mi>
        <mo>,</mo>
        <mi>k</mi>
        <mo stretchy="false">)</mo>
        <mi>B</mi>
        <mo stretchy="false">(</mo>
        <mi>k</mi>
        <mo>,</mo>
        <mi>j</mi>
        <mo stretchy="false">)</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle \sum _{k=1}^{p}A(i,k)B(k,j)}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/88d7ab4c706195792dfee451a32d7a6158139259" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -3.171ex; width:17.255ex; height:7.176ex;" alt="\sum_{k=1}^p A(i,k)B(k,j)" /></span></dd>
</dl>
</dd>
</dl>
<p>The SequenceL definition mirrors that definition more or less exactly:</p>
<pre>
   matmul(A(2), B(2)) [i,j] := 
       let k := 1...size(B); 
       in  sum( A[i,k] * B[k,j] );
</pre>
<p>The subscripts following each parameter <i>A</i> and <i>B</i> on the left hand side of the definition indicate that <i>A</i> and <i>B</i> are depth-2 structures (i.e., lists of lists of scalars), which are here thought of as matrices. From this formal definition, SequenceL infers the dimensions of the defined product from the formula for its (<i>i</i>, <i>j</i>)'th entry (as the set of pairs (<i>i</i>, <i>j</i>) for which the right hand side is defined) and computes each entry by the same formula as in the informal definition above. Notice there are no explicit instructions for iteration in this definition, or for the order in which operations are to be carried out. Because of this, the SequenceL compiler can perform operations in any order (including parallel order) which satisfies the defining equation. In this example, computation of coordinates in the product will be parallelized in a way that, for large matrices, scales linearly with the number of processors.</p>
<p>As noted above, SequenceL has no built-in constructs for <a href="/wiki/Input/output" title="Input/output">input/output</a> (I/O) since it was designed to work in an additive manner with other programming languages. The decision to compile to multithreaded C++ and support the 20+ Simplified Wrapper and Interface Generator (<a href="/wiki/SWIG" title="SWIG">SWIG</a>) languages (C, C++, C#, Java, Python, etc.) means it easily fits into extant design flows, training, and tools. It can be used to enhance extant applications, create multicore libraries, and even create standalone applications by linking the resulting code with other code which performs I/O tasks. SequenceL functions can also be queried from an <a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpreter</a> with given inputs, like Python and other interpreted languages.</p>
<h2><span class="mw-headline" id="Normalize.E2.80.93transpose">Normalize–transpose</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=3" title="Edit section: Normalize–transpose">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The main non-scalar construct of SequenceL is the sequence, which is essentially a list. Sequences may be nested to any level. To avoid the routine use of recursion common in many purely functional languages, SequenceL uses a technique termed <i>normalize–transpose</i> (NT), in which scalar operations are automatically distributed over elements of a sequence.<sup id="cite_ref-14" class="reference"><a href="#cite_note-14">[14]</a></sup> For example, in SequenceL we have</p>
<dl>
<dd><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" >
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mo stretchy="false">[</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mn>3</mn>
        <mo stretchy="false">]</mo>
        <mo>+</mo>
        <mn>10</mn>
        <mo>==</mo>
        <mo stretchy="false">[</mo>
        <mn>11</mn>
        <mo>,</mo>
        <mn>12</mn>
        <mo>,</mo>
        <mn>13</mn>
        <mo stretchy="false">]</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle [1,2,3]+10==[11,12,13]}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/991ec90da473c765f6fbc89360ad3579bc1fa589" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:27.487ex; height:2.843ex;" alt="[1,2,3] + 10 == [11,12,13]" /></span></dd>
</dl>
<p>This results not from overloading the '+' operator, but from the effect of NT that extends to all operations, both built-in and user-defined. As another example, if f() is a 3-argument function whose arguments are scalars, then for any appropriate x and z we will have</p>
<dl>
<dd><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" >
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mi>f</mi>
        <mo stretchy="false">(</mo>
        <mi>x</mi>
        <mo>,</mo>
        <mo stretchy="false">[</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mn>3</mn>
        <mo stretchy="false">]</mo>
        <mo>,</mo>
        <mi>z</mi>
        <mo stretchy="false">)</mo>
        <mo>==</mo>
        <mo stretchy="false">[</mo>
        <mi>f</mi>
        <mo stretchy="false">(</mo>
        <mi>x</mi>
        <mo>,</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mi>z</mi>
        <mo stretchy="false">)</mo>
        <mo>,</mo>
        <mi>f</mi>
        <mo stretchy="false">(</mo>
        <mi>x</mi>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mi>z</mi>
        <mo stretchy="false">)</mo>
        <mo>,</mo>
        <mi>f</mi>
        <mo stretchy="false">(</mo>
        <mi>x</mi>
        <mo>,</mo>
        <mn>3</mn>
        <mo>,</mo>
        <mi>z</mi>
        <mo stretchy="false">)</mo>
        <mo stretchy="false">]</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle f(x,[1,2,3],z)==[f(x,1,z),f(x,2,z),f(x,3,z)]}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/381a8c0a34b8e47f1fecd7792226ba05d37e2d76" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:49.359ex; height:2.843ex;" alt="f(x,[1,2,3],z) == [f(x,1,z), f(x,2,z), f(x,3,z)]" /></span></dd>
</dl>
<p>The NT construct can be used for multiple arguments at once, as in, for example</p>
<dl>
<dd><span><span class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="display: none;"><math xmlns="http://www.w3.org/1998/Math/MathML" >
  <semantics>
    <mrow class="MJX-TeXAtom-ORD">
      <mstyle displaystyle="true" scriptlevel="0">
        <mo stretchy="false">[</mo>
        <mn>1</mn>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mn>3</mn>
        <mo stretchy="false">]</mo>
        <mo>+</mo>
        <mo stretchy="false">[</mo>
        <mn>10</mn>
        <mo>,</mo>
        <mn>20</mn>
        <mo>,</mo>
        <mn>30</mn>
        <mo stretchy="false">]</mo>
        <mo>==</mo>
        <mo stretchy="false">[</mo>
        <mn>11</mn>
        <mo>,</mo>
        <mn>22</mn>
        <mo>,</mo>
        <mn>33</mn>
        <mo stretchy="false">]</mo>
      </mstyle>
    </mrow>
    <annotation encoding="application/x-tex">{\displaystyle [1,2,3]+[10,20,30]==[11,22,33]}</annotation>
  </semantics>
</math></span><img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/cf0e699aa9915ca86360e44c0c87108f12ec1f79" class="mwe-math-fallback-image-inline" aria-hidden="true" style="vertical-align: -0.838ex; width:35.582ex; height:2.843ex;" alt="[1,2,3] + [10,20,30] == [11,22,33]" /></span></dd>
</dl>
<p>It also works when the expected argument is a non-scalar of any type T, and the actual argument is a list of objects of type T (or, in greater generality, any data structure whose coordinates are of type T). For example, if <i><b>A</b></i> is a matrix and <i><b>X<sub>s</sub></b></i> is a list of matrices [X<sub>1</sub>, ..., X<sub>n</sub>], and given the above definition of matrix multiply, in SequenceL we would have</p>
<pre>
   matmul(A,X<sub>s</sub>) = [matmul(A,X<sub>1</sub>),...,matmul(A,X<sub>n</sub>)]
</pre>
<p>As a rule, NTs eliminate the need for iteration, recursion, or high level functional operators to</p>
<ol>
<li>do the same things to every member of a data structure, or to</li>
<li>process corresponding parts of similarly shaped structures together.</li>
</ol>
<p>This tends to account for most uses of iteration and recursion.</p>
<h2><span class="mw-headline" id="Example:_prime_numbers">Example: prime numbers</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=4" title="Edit section: Example: prime numbers">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>A good example that demonstrates the above concepts would be in finding prime numbers. A <a href="/wiki/Prime_number" title="Prime number">prime number</a> is defined as</p>
<dl>
<dd><i>An integer greater than 1, with no positive divisors other than itself and 1.</i></dd>
</dl>
<p>So a positive integer <i>z</i> is prime if no numbers from 2 through <i>z</i>-1, inclusive, divide evenly. SequenceL allows this problem to be programmed by literally transcribing the above definition into the language.</p>
<p>In SequenceL, a sequence of the numbers from 2 through <i>z</i>-1, inclusive, is just (2...(<i>z</i>-1)), so a program to find all of the primes between 100 and 200 can be written:</p>
<pre>
   prime(z) := z when none(z mod (2...(z-1)) = 0);
</pre>
<p>Which, in English just says,</p>
<dl>
<dd><i>...return the argument if none of the numbers between 2, and 1 less than the argument itself, divide evenly into it.</i></dd>
</dl>
<p>If that condition isn’t met, the function returns nothing. As a result, running this program yields</p>
<pre>
   cmd:&gt;prime(17)
   17
   cmd:&gt;prime(18)
   empty
</pre>
<p>The string "between 100 and 200" doesn’t appear in the program. Rather, a programmer will typically pass that part in as the argument. Since the program expects a scalar as an argument, passing it a sequence of numbers instead will cause SequenceL to perform the operation on each member of the sequence automatically. Since the function returns empty for failing values, the result will be the input sequence, but filtered to return only those numbers that satisfy the criteria for primes:</p>
<pre>
   cmd:&gt;prime(100...200)
   [101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199]
</pre>
<p>In addition to solving this problem with a very short and readable program, SequenceL’s evaluation of the nested sequences would all be performed in parallel.</p>
<h2><span class="mw-headline" id="Components">Components</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=5" title="Edit section: Components">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The following software components are available and supported by TMT for use in writing SequenceL code. All components are available on <a href="/wiki/X86" title="X86">x86</a> platforms running <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>, <a href="/wiki/MacOS" title="MacOS">macOS</a>, and most varieties of <a href="/wiki/Linux" title="Linux">Linux</a> (including <a href="/wiki/CentOS" title="CentOS">CentOS</a>, <a href="/wiki/RedHat" class="mw-redirect" title="RedHat">RedHat</a>, <a href="/wiki/OpenSUSE" title="OpenSUSE">OpenSUSE</a>, and <a href="/wiki/Ubuntu_(operating_system)" title="Ubuntu (operating system)">Ubuntu</a>), and on <a href="/wiki/ARM_architecture" title="ARM architecture">ARM</a> and <a href="/wiki/IBM_POWER_microprocessors" title="IBM POWER microprocessors">IBM POWER</a> platforms running most varieties of <a href="/wiki/Linux" title="Linux">Linux</a>.</p>
<h3><span class="mw-headline" id="Interpreter">Interpreter</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=6" title="Edit section: Interpreter">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A <a href="/wiki/Command-line_interface" title="Command-line interface">command-line</a> <a href="/wiki/Interpreter_(computing)" title="Interpreter (computing)">interpreter</a> allows writing code directly into a command shell, or loading code from prewritten text files. This code can be executed, and the results evaluated, to assist in checking code correctness, or finding a quick answer. It is also available via the popular <a href="/wiki/Eclipse_(software)" title="Eclipse (software)">Eclipse</a> <a href="/wiki/Integrated_development_environment" title="Integrated development environment">integrated development environment</a> (IDE). Code executed in the interpreter does not run in parallel; it executes in one thread.</p>
<h3><span class="mw-headline" id="Compiler">Compiler</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=7" title="Edit section: Compiler">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>A command-line <a href="/wiki/Compiler" title="Compiler">compiler</a> reads SequenceL code and generates highly parallelized, <a href="/wiki/Automatic_vectorization" title="Automatic vectorization">vectorized</a>, C++, and optionally OpenCL, which must be linked with the SequenceL runtime library to execute.</p>
<h3><span class="mw-headline" id="Runtime">Runtime</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=8" title="Edit section: Runtime">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The runtime environment is a pre-compiled set of libraries which works with the compiled parallelized C++ code to execute optimally on the target platform. It builds on Intel Threaded Building Blocks (TBB)<sup id="cite_ref-15" class="reference"><a href="#cite_note-15">[15]</a></sup> and handles things such as cache optimization, memory management, work queues-stealing, and performance monitoring.</p>
<h3><span class="mw-headline" id="Eclipse_IDE_plug-in_with_debugger">Eclipse IDE plug-in with debugger</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=9" title="Edit section: Eclipse IDE plug-in with debugger">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>An <a href="/wiki/Eclipse_(software)" title="Eclipse (software)">Eclipse</a> <a href="/wiki/Integrated_development_environment" title="Integrated development environment">integrated development environment</a> <a href="/wiki/Plug-in_(computing)" title="Plug-in (computing)">plug-in</a> provides standard editing abilities (function rollup, chromacoding, etc.), and a SequenceL debugging environment. This plug-in runs against the SequenceL Interpreter, so cannot be used to debug the multithreaded code; however, by providing automatic parallelization, debugging of parallel SequenceL code is really verifying correctness of sequential SequenceL code. That is, if it runs correctly sequentially, it should run correctly in parallel – so debugging in the interpreter is sufficient.</p>
<h3><span class="mw-headline" id="Libraries">Libraries</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=10" title="Edit section: Libraries">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Various math and other standard function libraries are included as SequenceL source code to streamline the programming process and serve as best practice examples. These may be imported, in much the same way that C or C++ libraries are #included.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=11" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a></li>
<li><a href="/wiki/Automatic_parallelization_tool" title="Automatic parallelization tool">Automatic parallelization tool</a></li>
<li><a href="/wiki/Multi-core_processor" title="Multi-core processor">Multi-core processor</a></li>
<li><a href="/wiki/Multiprocessing" title="Multiprocessing">Multiprocessing</a></li>
<li><a href="/wiki/Functional_programming" title="Functional programming">Functional programming</a></li>
<li><a href="/wiki/Purely_functional_programming" title="Purely functional programming">Purely functional programming</a></li>
<li><a href="/wiki/Declarative_programming" title="Declarative programming">Declarative programming</a></li>
<li><a href="/wiki/Comparison_of_programming_paradigms" title="Comparison of programming paradigms">Comparison of programming paradigms</a></li>
<li><a href="/wiki/Automatic_vectorization" title="Automatic vectorization">Automatic vectorization</a></li>
<li><a href="/wiki/Simon_Peyton_Jones" title="Simon Peyton Jones">Simon Peyton Jones</a></li>
<li><a href="/wiki/Rosetta_Code" title="Rosetta Code">Rosetta Code</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=12" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-Licensing-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-Licensing_1-0">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://texasmulticore.com/products/sequencel-licenses/">"SequenceL Licensing"</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.btitle=SequenceL+Licensing&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Ftexasmulticore.com%2Fproducts%2Fsequencel-licenses%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.texasmulticoretechnologies.com/about/inventors/">Dr. Daniel Cooke at Texas Multicore Technologies</a></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="https://texasmulticore.com/wp-content/uploads/2016/05/2004-ttudamp.pdf">Consume-simplify-produce (CSP)</a></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><cite id="CITEREFNemanichCookeRushton2010" class="citation">Nemanich, Brad; Cooke, Daniel; Rushton, Nelson (2010), <a rel="nofollow" class="external text" href="https://texasmulticore.com/wp-content/uploads/2016/05/2004-ttudamp.pdf"><i>SequenceL: Transparency And Multi-Core Parallelisms</i></a> <span style="font-size:85%;">(PDF)</span>, DAMP '10 Proceedings of the 5th ACM SIGPLAN workshop on Declarative Aspects of Multicore Programming, New York, NY, US: ACM, pp.&#160;45–52</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.au=Cooke%2C+Daniel&amp;rft.aufirst=Brad&amp;rft.aulast=Nemanich&amp;rft.au=Rushton%2C+Nelson&amp;rft.btitle=SequenceL%3A+Transparency+And+Multi-Core+Parallelisms&amp;rft.date=2010&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Ftexasmulticore.com%2Fwp-content%2Fuploads%2F2016%2F05%2F2004-ttudamp.pdf&amp;rft.pages=45-52&amp;rft.place=New+York%2C+NY%2C+US&amp;rft.pub=ACM&amp;rft.series=DAMP+%2710+Proceedings+of+the+5th+ACM+SIGPLAN+workshop+on+Declarative+Aspects+of+Multicore+Programming&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text"><cite id="CITEREFCookeRushtonNemanichWatson2008" class="citation">Cooke, Daniel; Rushton, Nelson; Nemanich, Brad; Watson, Robert G.; Andersen, Per (March 2008), <a rel="nofollow" class="external text" href="http://dl.acm.org/citation.cfm?id=1330020&amp;dl=ACM&amp;coll=DL&amp;CFID=893264698&amp;CFTOKEN=93567450">"Normalize, Transpose, and Distribute: An Automatic Approach for Handling Nonscalars"</a>, <i>ACM Transactions on Programming Languages and Systems</i>, New York, NY, US: ACM, <b>30</b> (2)</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Normalize%2C+Transpose%2C+and+Distribute%3A+An+Automatic+Approach+for+Handling+Nonscalars&amp;rft.au=Andersen%2C+Per&amp;rft.aufirst=Daniel&amp;rft.aulast=Cooke&amp;rft.au=Nemanich%2C+Brad&amp;rft.au=Rushton%2C+Nelson&amp;rft.au=Watson%2C+Robert+G.&amp;rft.date=2008-03&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%3D1330020%26dl%3DACM%26coll%3DDL%26CFID%3D893264698%26CFTOKEN%3D93567450&amp;rft.issue=2&amp;rft.jtitle=ACM+Transactions+on+Programming+Languages+and+Systems&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=30" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-6">^</a></b></span> <span class="reference-text"><cite id="CITEREFBanaterLe_Metayer1993" class="citation">Banater, J-P; Le Metayer, D. (January 1993), "Programming by Multiset Transformation", <i>Communications of the ACM</i>, ACM, <b>36</b> (1): 98–111, <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1145%2F151233.151242">10.1145/151233.151242</a></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Programming+by+Multiset+Transformation&amp;rft.aufirst=J-P&amp;rft.aulast=Banater&amp;rft.au=Le+Metayer%2C+D.&amp;rft.date=1993-01&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F151233.151242&amp;rft.issue=1&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=98-111&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=36" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite id="CITEREFBlelloch1996" class="citation">Blelloch, Guy (March 1996), "Programming Parallel Algorithms", <i>Communications of the ACM</i>, ACM, <b>39</b> (3): 85–97, <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1145%2F227234.227246">10.1145/227234.227246</a></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Programming+Parallel+Algorithms&amp;rft.aufirst=Guy&amp;rft.aulast=Blelloch&amp;rft.date=1996-03&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F227234.227246&amp;rft.issue=3&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=85-97&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=39" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite id="CITEREFL.C3.A4mmelPeyton-Jones2003" class="citation">Lämmel, Ralf; Peyton-Jones, Simon (2003), "Scrap your boilerplate: a practical design pattern for generic programming", <i>Proceedings of TLDI 2003</i>, ACM Press</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Scrap+your+boilerplate%3A+a+practical+design+pattern+for+generic+programming&amp;rft.aufirst=Ralf&amp;rft.aulast=L%C3%A4mmel&amp;rft.au=Peyton-Jones%2C+Simon&amp;rft.date=2003&amp;rft.genre=article&amp;rft.jtitle=Proceedings+of+TLDI+2003&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><cite id="CITEREFL.C3.A4mmelPeyton-Jones2004" class="citation">Lämmel, Ralf; Peyton-Jones, Simon (2004), "Scrap more boilerplate: reflection, zips, and generalised casts", <i>Proceedings of ICFP 2004</i>, ACM Press</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Scrap+more+boilerplate%3A+reflection%2C+zips%2C+and+generalised+casts&amp;rft.aufirst=Ralf&amp;rft.aulast=L%C3%A4mmel&amp;rft.au=Peyton-Jones%2C+Simon&amp;rft.date=2004&amp;rft.genre=article&amp;rft.jtitle=Proceedings+of+ICFP+2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><cite id="CITEREFCookeRushton1993" class="citation">Cooke, Daniel; Rushton, Nelson (January 1993), <a rel="nofollow" class="external text" href="https://texasmulticore.com/wp-content/uploads/2016/05/2005-Iterative-and-Parallel-Algorithm-Design-from-High.pdf">"Iterative and Parallel Algorithm Design from High Level Language Traces"</a> <span style="font-size:85%;">(PDF)</span>, <i>ICCS'05 Proceedings of the 5th international conference on Computational Science</i>, Part III: 891–894, <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a rel="nofollow" class="external text" href="//dx.doi.org/10.1007%2F11428862_132">10.1007/11428862_132</a>, <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-3-540-26044-8" title="Special:BookSources/978-3-540-26044-8">978-3-540-26044-8</a></cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=Iterative+and+Parallel+Algorithm+Design+from+High+Level+Language+Traces&amp;rft.aufirst=Daniel&amp;rft.aulast=Cooke&amp;rft.au=Rushton%2C+Nelson&amp;rft.date=1993-01&amp;rft.genre=article&amp;rft_id=https%3A%2F%2Ftexasmulticore.com%2Fwp-content%2Fuploads%2F2016%2F05%2F2005-Iterative-and-Parallel-Algorithm-Design-from-High.pdf&amp;rft_id=info%3Adoi%2F10.1007%2F11428862_132&amp;rft.isbn=978-3-540-26044-8&amp;rft.jtitle=ICCS%2705+Proceedings+of+the+5th+international+conference+on+Computational+Science&amp;rft.pages=891-894&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=Part+III" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-11">^</a></b></span> <span class="reference-text"><cite id="CITEREFCookeRushton2005" class="citation">Cooke, Daniel; Rushton, Nelson (June 27–30, 2005), "SequenceL – An Overview of a Simple Language", <i>Proceedings of The 2005 International Conference on Programming Languages and Compilers, PLC 2005</i>, Las Vegas, Nevada, US</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=SequenceL+%93+An+Overview+of+a+Simple+Language&amp;rft.aufirst=Daniel&amp;rft.aulast=Cooke&amp;rft.au=Rushton%2C+Nelson&amp;rft.date=2005-06-27%2F2005-06-30&amp;rft.genre=article&amp;rft.jtitle=Proceedings+of+The+2005+International+Conference+on+Programming+Languages+and+Compilers%2C+PLC+2005&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="http://www.texasmulticoretechnologies.com">Texas Multicore Technologies, Inc.</a></span></li>
<li id="cite_note-13"><span class="mw-cite-backlink"><b><a href="#cite_ref-13">^</a></b></span> <span class="reference-text"><cite id="CITEREFNemanichCookeRushton2010" class="citation">Nemanich, Brad; Cooke, Daniel; Rushton, Nelson (2010), <a rel="nofollow" class="external text" href="https://texasmulticore.com/wp-content/uploads/2016/05/2004-ttudamp.pdf"><i>SequenceL: Transparency And Multi-Core Parallelisms</i></a> <span style="font-size:85%;">(PDF)</span>, DAMP '10 Proceedings of the 5th ACM SIGPLAN workshop on Declarative Aspects of Multicore Programming, New York, NY, US: ACM, pp.&#160;45–52</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.au=Cooke%2C+Daniel&amp;rft.aufirst=Brad&amp;rft.aulast=Nemanich&amp;rft.au=Rushton%2C+Nelson&amp;rft.btitle=SequenceL%3A+Transparency+And+Multi-Core+Parallelisms&amp;rft.date=2010&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Ftexasmulticore.com%2Fwp-content%2Fuploads%2F2016%2F05%2F2004-ttudamp.pdf&amp;rft.pages=45-52&amp;rft.place=New+York%2C+NY%2C+US&amp;rft.pub=ACM&amp;rft.series=DAMP+%2710+Proceedings+of+the+5th+ACM+SIGPLAN+workshop+on+Declarative+Aspects+of+Multicore+Programming&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text"><cite id="CITEREFCookeRushton2005" class="citation">Cooke, Daniel; Rushton, Nelson (June 27–30, 2005), "SequenceL – An Overview of a Simple Language", <i>Proceedings of The 2005 International Conference on Programming Languages and Compilers, PLC 2005</i>, Las Vegas, Nevada, US</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ASequenceL&amp;rft.atitle=SequenceL+%93+An+Overview+of+a+Simple+Language&amp;rft.aufirst=Daniel&amp;rft.aulast=Cooke&amp;rft.au=Rushton%2C+Nelson&amp;rft.date=2005-06-27%2F2005-06-30&amp;rft.genre=article&amp;rft.jtitle=Proceedings+of+The+2005+International+Conference+on+Programming+Languages+and+Compilers%2C+PLC+2005&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text"><a rel="nofollow" class="external text" href="https://www.threadingbuildingblocks.org/">Intel Threaded Building Blocks (TBB)</a></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=SequenceL&amp;action=edit&amp;section=13" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><span class="official-website"><span class="url"><a rel="nofollow" class="external text" href="http://texasmulticore.com">Official website</a></span></span> Texas Multicore Technologies</li>
<li><a rel="nofollow" class="external text" href="https://texasmulticore.com/technology/multicore-performance/">Why SequenceL Works</a></li>
<li><a rel="nofollow" class="external text" href="https://texasmulticore.com/technology/openmp-comparison/">OpenMP compared to SequenceL?</a></li>
<li><a rel="nofollow" class="external text" href="http://texasmulticore.com/products/sequencel-at-a-glance/">SequenceL Features</a></li>
<li><a rel="nofollow" class="external text" href="https://www.youtube.com/channel/UCb6JyUsAuS_vmBAE3gXVKzQ">YouTube: Texas Multicore Technologies</a></li>
<li><a rel="nofollow" class="external text" href="https://texasmulticore.com/resources/downloads/">Free Downloads</a></li>
<li><a rel="nofollow" class="external text" href="https://texasmulticore.com/documentation/">Programmer Resources and Education</a></li>
<li><a rel="nofollow" class="external text" href="https://texasmulticore.com/wp-content/uploads/2016/05/2008-ACM-paper_NTD-Auto-Approach-for-Handling-Nonscalars-1.pdf">Normalize, Transpose and Distribute: An Automatic Approach for Handling Nonscalars</a></li>
<li><a rel="nofollow" class="external text" href="https://rosettacode.org/wiki/Category:SequenceL">SequenceL examples on Rosetta Code wiki</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1234
Cached time: 20170127074559
Cache expiry: 86400
Dynamic content: true
CPU time usage: 0.148 seconds
Real time usage: 0.214 seconds
Preprocessor visited node count: 1298/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 34517/2097152 bytes
Template argument size: 1601/2097152 bytes
Highest expansion depth: 12/40
Expensive parser function count: 3/500
Lua time usage: 0.064/10.000 seconds
Lua memory usage: 3.29 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  150.238      1 -total
 49.23%   73.958      1 Template:Reflist
 29.60%   44.465      1 Template:Infobox_programming_language
 27.37%   41.127      1 Template:Infobox
 24.36%   36.593     10 Template:Citation
 16.04%   24.091      1 Template:Cite_web
  9.74%   14.628      1 Template:Official_website
  6.71%   10.080      1 Template:As_of
  5.14%    7.721      1 Template:DMCA
  4.94%    7.417      1 Template:Start_date_and_age
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:37895661-0!*!0!!en!*!*!math=5 and timestamp 20170127074559 and revision id 762196639
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=SequenceL&amp;oldid=762196639">https://en.wikipedia.org/w/index.php?title=SequenceL&amp;oldid=762196639</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:High-level_programming_languages" title="Category:High-level programming languages">High-level programming languages</a></li><li><a href="/wiki/Category:Parallel_computing" title="Category:Parallel computing">Parallel computing</a></li><li><a href="/wiki/Category:Array_programming_languages" title="Category:Array programming languages">Array programming languages</a></li><li><a href="/wiki/Category:Cross-platform_software" title="Category:Cross-platform software">Cross-platform software</a></li><li><a href="/wiki/Category:Declarative_programming_languages" title="Category:Declarative programming languages">Declarative programming languages</a></li><li><a href="/wiki/Category:Functional_programming" title="Category:Functional programming">Functional programming</a></li><li><a href="/wiki/Category:Functional_languages" title="Category:Functional languages">Functional languages</a></li><li><a href="/wiki/Category:Statically_typed_programming_languages" title="Category:Statically typed programming languages">Statically typed programming languages</a></li><li><a href="/wiki/Category:Heterogeneous_computing" title="Category:Heterogeneous computing">Heterogeneous computing</a></li><li><a href="/wiki/Category:Concurrent_programming_languages" title="Category:Concurrent programming languages">Concurrent programming languages</a></li><li><a href="/wiki/Category:Mathematical_software" title="Category:Mathematical software">Mathematical software</a></li><li><a href="/wiki/Category:Numerical_analysis_software_for_Windows" title="Category:Numerical analysis software for Windows">Numerical analysis software for Windows</a></li><li><a href="/wiki/Category:Numerical_analysis_software_for_MacOS" title="Category:Numerical analysis software for MacOS">Numerical analysis software for MacOS</a></li><li><a href="/wiki/Category:Numerical_analysis_software_for_Linux" title="Category:Numerical analysis software for Linux">Numerical analysis software for Linux</a></li><li><a href="/wiki/Category:Numerical_linear_algebra" title="Category:Numerical linear algebra">Numerical linear algebra</a></li><li><a href="/wiki/Category:Numerical_programming_languages" title="Category:Numerical programming languages">Numerical programming languages</a></li><li><a href="/wiki/Category:Numerical_software" title="Category:Numerical software">Numerical software</a></li><li><a href="/wiki/Category:Science_software_for_Windows" title="Category:Science software for Windows">Science software for Windows</a></li><li><a href="/wiki/Category:Science_software_for_MacOS" title="Category:Science software for MacOS">Science software for MacOS</a></li><li><a href="/wiki/Category:Science_software_for_Linux" title="Category:Science software for Linux">Science software for Linux</a></li><li><a href="/wiki/Category:GPGPU" title="Category:GPGPU">GPGPU</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_containing_potentially_dated_statements_from_2015" title="Category:Articles containing potentially dated statements from 2015">Articles containing potentially dated statements from 2015</a></li><li><a href="/wiki/Category:All_articles_containing_potentially_dated_statements" title="Category:All articles containing potentially dated statements">All articles containing potentially dated statements</a></li><li><a href="/wiki/Category:Official_website_not_in_Wikidata" title="Category:Official website not in Wikidata">Official website not in Wikidata</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=SequenceL" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=SequenceL" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/SequenceL"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:SequenceL"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/SequenceL" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=SequenceL&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=SequenceL&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/SequenceL" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/SequenceL" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=SequenceL&amp;oldid=762196639" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=SequenceL&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q7452449" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=SequenceL&amp;id=762196639" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=SequenceL">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=SequenceL&amp;returnto=SequenceL&amp;oldid=762196639&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=SequenceL&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
											</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-add wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q7452449#sitelinks-wikipedia" title="Add interlanguage links" class="wbc-editpage">Add links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 27 January 2017, at 07:45.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=SequenceL&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.148","walltime":"0.214","ppvisitednodes":{"value":1298,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":34517,"limit":2097152},"templateargumentsize":{"value":1601,"limit":2097152},"expansiondepth":{"value":12,"limit":40},"expensivefunctioncount":{"value":3,"limit":500},"entityaccesscount":{"value":1,"limit":400},"timingprofile":["100.00%  150.238      1 -total"," 49.23%   73.958      1 Template:Reflist"," 29.60%   44.465      1 Template:Infobox_programming_language"," 27.37%   41.127      1 Template:Infobox"," 24.36%   36.593     10 Template:Citation"," 16.04%   24.091      1 Template:Cite_web","  9.74%   14.628      1 Template:Official_website","  6.71%   10.080      1 Template:As_of","  5.14%    7.721      1 Template:DMCA","  4.94%    7.417      1 Template:Start_date_and_age"]},"scribunto":{"limitreport-timeusage":{"value":"0.064","limit":"10.000"},"limitreport-memusage":{"value":3449319,"limit":52428800}},"cachereport":{"origin":"mw1234","timestamp":"20170127074559","ttl":86400,"transientcontent":true}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":66,"wgHostname":"mw1265"});});</script>
	</body>
</html>
