<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Text Executive Programming Language - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Text_Executive_Programming_Language","wgTitle":"Text Executive Programming Language","wgCurRevisionId":734564377,"wgRevisionId":734564377,"wgArticleId":13852549,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages using ISBN magic links","Procedural programming languages","Programming languages created in 1979"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Text_Executive_Programming_Language","wgRelevantArticleId":13852549,"wgRequestId":"WIpc2ApAAEQAAYXP--cAAABW","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q7475278","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.8"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Text_Executive_Programming_Language"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Text_Executive_Programming_Language"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Text_Executive_Programming_Language rootpage-Text_Executive_Programming_Language skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Text Executive Programming Language</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><p>In 1979, Honeywell Information Systems announced a new programming language for their <a href="/wiki/Time-sharing" title="Time-sharing">time-sharing</a> service named <b>TEX</b>, an <a href="/wiki/Acronym" title="Acronym">acronym</a> for the <b>Text Executive</b> text processing system. <b>TEX</b> was a first generation scripting language, developed around the time of <a href="/wiki/AWK" title="AWK">AWK</a> and used by Honeywell initially as an in-house system test automation tool.</p>
<p><b>TEX</b> extended the <b>Honeywell Time-Sharing service (TSS)</b> line editor with programmable capabilities which allowed the user greater latitude in developing ease-of-use editing extensions as well as write scripts to automate many other time-sharing tasks formerly done by more complex TSS FORTRAN programs.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Overview"><span class="tocnumber">1</span> <span class="toctext">Overview</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Variables"><span class="tocnumber">2</span> <span class="toctext">Variables</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Operators"><span class="tocnumber">3</span> <span class="toctext">Operators</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#Arithmetic"><span class="tocnumber">3.1</span> <span class="toctext">Arithmetic</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Boolean_operators"><span class="tocnumber">3.2</span> <span class="toctext">Boolean operators</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#String_operators"><span class="tocnumber">3.3</span> <span class="toctext">String operators</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-7"><a href="#Labels"><span class="tocnumber">4</span> <span class="toctext">Labels</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Substitutions"><span class="tocnumber">5</span> <span class="toctext">Substitutions</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Indirections"><span class="tocnumber">6</span> <span class="toctext">Indirections</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Input.2Foutput"><span class="tocnumber">7</span> <span class="toctext">Input/output</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#Star_variables_and_functions"><span class="tocnumber">8</span> <span class="toctext">Star variables and functions</span></a>
<ul>
<li class="toclevel-2 tocsection-12"><a href="#Terminal_codes"><span class="tocnumber">8.1</span> <span class="toctext">Terminal codes</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Commands"><span class="tocnumber">9</span> <span class="toctext">Commands</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#Edit_commands"><span class="tocnumber">9.1</span> <span class="toctext">Edit commands</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#TEX_commands"><span class="tocnumber">9.2</span> <span class="toctext">TEX commands</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#TEX_modes"><span class="tocnumber">9.3</span> <span class="toctext">TEX modes</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#TSS_commands"><span class="tocnumber">9.4</span> <span class="toctext">TSS commands</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-18"><a href="#Example_code"><span class="tocnumber">10</span> <span class="toctext">Example code</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="#Notable_features"><span class="tocnumber">11</span> <span class="toctext">Notable features</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="#References"><span class="tocnumber">12</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="#Notes"><span class="tocnumber">13</span> <span class="toctext">Notes</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Overview">Overview</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=1" title="Edit section: Overview">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><b>TEX</b> was a subsystem of <b>Honeywell TSS</b>. Users would enter the <b>TSS</b> command '<b>tex'</b> to change to a <b>TEX</b> session mode of operation. <b>TEX</b> expressions could be entered directly on the command line or run from script file via the <b>TEX</b> command <b>CALL &lt;filename&gt;</b>.</p>
<p><b>TEX</b> programs are a collection of <b>TSS</b> line editing commands, <b>TSS</b> session commands and <b>TEX</b> statements. <b>TEX</b> variables could be inserted into <b>TSS</b> commands and <b>TSS</b> line editor commands via the <b>TEX</b> variable substitution feature. <b>TEX</b> programs were primarily designed to extend the line editor system. Consequently, <b>TEX</b> had no concept of file input/output relying instead on applying line edit commands to the working file and saving as needed.</p>
<p>The key developers of <b>TEX</b> at Honeywell were Eric Clamons and Richard Keys with <a href="/wiki/Robert_Bemer" class="mw-redirect" title="Robert Bemer">Robert Bemer</a>, famous as the father of ASCII and grandfather of <b>COBOL</b>, acting in an advisory capacity.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup></p>
<p><b>TEX</b> should not be confused with <a href="/wiki/TeX" title="TeX">TeX</a> a typesetting markup language invented by <a href="/wiki/Donald_Knuth" title="Donald Knuth">Donald Knuth</a>.</p>
<p>The <a href="/wiki/American_Mathematical_Society" title="American Mathematical Society">American Mathematical Society</a> has also claimed a <a href="/wiki/Trademark" title="Trademark">trademark</a> for TeX, which was rejected, because at the time this was tried (early 1980s), “TEX” (all caps) was registered by <a href="/wiki/Honeywell" title="Honeywell">Honeywell</a> for the “Text EXecutive” text processing system.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup></p>
<h2><span class="mw-headline" id="Variables">Variables</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=2" title="Edit section: Variables">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>All variables were stored as strings and converted to integer numeric values when required. Floating point variables, arrays or other datatypes common in current scripting languages did not exist in a <b>TEX</b> environment.</p>
<p>All variables were stored in a single global variable pool which users had to manage in order to avoid variable naming conflicts. There were no variable scoping capabilities in <b>TEX</b>. Variable names were limited to 40 characters.</p>
<p><b>TEX</b> provided several internal read-only registers called <b>star functions</b> or <b>star variables</b> which changed state when certain <b>TEX</b> string parsing operations were executed. <b>Star functions</b> provided a means to get the current date and time, resultant strings from a <b>split</b> or <b>scan</b> string parsing operations, <b>TEX</b> internal call level and <b>TSS</b> session information.</p>
<p>The maximum length of a string value was 240 ASCII characters. This includes intermediate results when evaluating a <b>TEX</b> expression. Numeric string values are limited to 62 digits in the string including the (-) for negative numbers. Numeric values are also normalized where leading zeros are stripped from the string representation.</p>
<p>Some examples of variable usage:</p>
<pre>
<tt>   _ we can use quotes or other characters as delimiters as long as the string doesn't contain them
   a="hello"

   _ here we use the / character as a delimiter (a common practice especially if the string has a " char)
   b=/world/
</tt>
</pre>
<pre>
<tt>   _ here we are concatenating strings together via the comma concatenation operator
   c=a,/ /,b
</tt>
</pre>
<pre>
<tt>   _ the out statement will print  "hello world" to the terminal without the quotes
   out:c
</tt>
</pre>
<pre>
<tt>   _ here we use a TEX variable in a line editing command to find a line starting with "hello world"
   hello="hello world"
   f:hello
</tt>
</pre>
<pre>
<tt>   _ here we are replacing the "hello" string with the "hello world" string
   rs:a:c
</tt>
</pre>
<h2><span class="mw-headline" id="Operators">Operators</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=3" title="Edit section: Operators">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><b>TEX</b> has three types of operators:</p>
<ul>
<li>arithmetic</li>
<li>boolean</li>
<li>string</li>
</ul>
<p>When constructing a <b>TEX</b> expression, all spaces must be compressed out except for string literals. In general,spaces delimit <b>TEX</b> statements.</p>
<pre>
<tt>   _ in the "d=" statement there are no spaces between the commas or the variables

   a="hello"   b=" "   c="world"   d=a,b,c   out:d
</tt>
</pre>
<pre>
<tt>   _ the space separates the 'if' from the expression and the expression from the next TEX command to conditionally execute

   if a:eqs:"hello" out:a
</tt>
</pre>
<h3><span class="mw-headline" id="Arithmetic">Arithmetic</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=4" title="Edit section: Arithmetic">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>TEX supports only basic integer arithmetic operations:</p>
<ul>
<li>unary sign number prefix (+/-)</li>
<li>addition (+),</li>
<li>subtraction (-),</li>
<li>multiplication (*) and</li>
<li>division (/)</li>
</ul>
<p>with up to 16 levels of parentheses.</p>
<p>Some examples are:</p>
<pre>
<tt>   a=1

   b=-2

   c=3*(a-b)/(2*2+(4+1))
</tt>
</pre>
<h3><span class="mw-headline" id="Boolean_operators">Boolean operators</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=5" title="Edit section: Boolean operators">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><b>TEX</b> boolean operators come in two flavors for:</p>
<ul>
<li>numeric comparisons</li>
<li>string comparisons</li>
</ul>
<p>They were most often used within the context of an <b>IF</b> control statement.</p>
<p>A list of available numeric boolean operators in <b>TEX</b> are:</p>
<ul>
<li><b>:eq:</b> or <b>:eqn:</b> returns t for true if two values are numerically equal</li>
<li><b>:ge:</b> or <b>:gen:</b> returns t for true if first value is numerically equal to or greater than second value</li>
<li><b>:le:</b> or <b>:len:</b> returns t for true if first value is numerically equal to or lesser than second value</li>
<li><b>:gt:</b> or <b>:gtn:</b> returns t for true if first value is numerically greater than second value</li>
<li><b>:lt:</b> or <b>:ltn:</b> returns t for true if first value is numerically lesser than second value</li>
<li><b>:ne:</b> or <b>:nen:</b> returns t for true if first value is not numerically equal to the second value</li>
</ul>
<p>A list of available string boolean operators are:</p>
<ul>
<li><b>:eqs:</b> returns t for true if two strings values are identical in characters, case and length</li>
<li><b>:ges:</b> returns t for true if first string is greater than or equal to the second string in characters case and length</li>
<li><b>:les:</b> returns t for true if first string is less than or equal to the second string in characters case and length</li>
<li><b>:gts:</b> returns t for true if first string is greater than or equal to the second string in characters case and length</li>
<li><b>:lts:</b> returns t for true if first string is less than to the second string in characters case and length</li>
<li><b>:nes:</b> returns t for true if first string is NOT equal to the second string in characters case and length</li>
</ul>
<p>String boolean operators are affected by the <b>TEX</b> <b>CASE</b> mode. Under <b>CASE</b> mode, strings such as 'ABC' and 'abc' were considered equal (<b>TEX</b> converted 'ABC' to 'abc' prior to the comparison). Under <b>NOCASE</b> mode, the 'abc' string would be considered greater than the 'ABC' string based on the <a href="/wiki/ASCII" title="ASCII">ASCII</a> code point value for 'a' being a larger value than the 'A' ASCII code point value.</p>
<p>The boolean <b>NOT</b> operator was represented by the circumflex character (^).</p>
<p>Some examples of boolean operators in action:</p>
<pre>
<tt>   if name:eqs:"luke"   out:"May the force be with you!"

   if ^age:gtn:500  out:"Heh, you can't be Yoda!" 
</tt>
</pre>
<p><b>TEX</b> did not provide <b>and</b> or <b>or</b> connecters to make more complex boolean expressions. Instead, programmers had to use nested <b>if</b> statements for <b>and</b> connections and a block of <b>if...do something</b> statements to handle <b>or</b> connections:</p>
<pre>
<tt>   _ an example of an <b>and</b> construct
   if a:eqs:'a'   if b:eqs:'b'  goto !its_true
   goto !its_false
</tt>
</pre>
<pre>
<tt>   _ an example of an '<i>or</i> construct
   if a:eqs:'a'   goto !its_true
   if b:eqs:'b'   goto !its_true
   if c:eqs:'c'   goto !its_true
   goto !its_false
</tt>
</pre>
<pre>
<tt>   !its_true out:"Its true!" goto !next_block
   !its_false out:"Its false!" goto !next_block
</tt>
</pre>
<pre>
<tt>   !next_block
   ...do something...
</tt>
</pre>
<h3><span class="mw-headline" id="String_operators">String operators</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=6" title="Edit section: String operators">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>String concatenation in <b>TEX</b> was provided by the comma operator:</p>
<pre>
<tt>   a="hello"," "," world"
</tt>
</pre>
<p><b>TEX</b> provided several string splitting operators:</p>
<ul>
<li>splitting a string from the left and saving the left side ('])</li>
<li>splitting a string from the left and saving the right side (]')</li>
<li>splitting a string from the right and saving the left side ('[)</li>
<li>splitting a string from the right and saving the right side ([')</li>
</ul>
<p>Some string splitting examples:</p>
<pre>
<tt>   a="hello world"

   b=a']5

   c=a]'5

   out:"It's a strange new ",c," but ",b," anyways!"
</tt>
</pre>
<p><b>TEX</b> provided several string scanning/parsing operators:</p>
<ul>
<li>scanning a string from the left for a given substring and saving the left side ('&gt;)</li>
<li>scanning a string from the left for a given substring and saving the right side (&gt;')</li>
<li>scanning a string from the right for a given substring and saving the left side ('&lt;)</li>
<li>scanning a string from the right for a given substring and saving the right side (&lt;')</li>
</ul>
<p>Some string scanning/parsing examples:</p>
<pre>
<tt>   a="hello world"

   b=a'&gt;" "

   out:b
</tt>
</pre>
<h2><span class="mw-headline" id="Labels">Labels</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=7" title="Edit section: Labels">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>All <b>TEX</b> statement labels were prefixed with a (!). Statement labels were in general ignored unless referenced by a <b>goto</b> or <b>call</b> statement. One notable feature of <b>TEX</b> was the ability to <b>call</b> or <b>goto</b> labels in other files. Coupled with the <b>TEX</b> <b>SUBS</b> mode meant that <b>TEX</b> could create new scripts via line editing, save and then <b>call</b> or <b>goto</b> labels in these scripts dynamically.</p>
<p>The <b>mypgm</b> file:</p>
<pre>
<tt>   !hello
   out:"hello world"
   return

   !hello2
   out:"hello world again"
   exit

   (end-of-file marker)
</tt>
</pre>
<p><b>Calling</b> by label example:</p>
<pre>
<tt>   call /mycat/mypgm!hello
</tt>
</pre>
<p>In the above example, <b>TEX</b> would process the /mycat/mypgm file searching for the&#160;!hello label(*). <b>TEX</b> would continue processing the file until a <b>return</b> statement or <b>exit</b> statement was executed or end of file was reached.</p>
<p><b>Goto</b> by label example:</p>
<pre>
<tt>   goto /mycat/mypgm!hello2
</tt>
</pre>
<p>In the next example, <b>TEX</b> would process the /mycat/mypgm file searching for the&#160;!hello2 label(*). <b>TEX</b> would continue processing until an <b>exit</b> statement or end of file was reached. An error would be thrown if a <b>return</b> statement was executed and there were no CALLs active.</p>
<p><b>(*) TEX did not check for duplicate labels in the same file</b>, consequently execution was unpredictable if present.</p>
<h2><span class="mw-headline" id="Substitutions">Substitutions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=8" title="Edit section: Substitutions">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><b>TEX</b> provides the <b>SUBS</b> and <b>NOSUBS</b> commands to activate or deactivate variable substitution for subsequent <b>TEX</b> statements or <b>TSS</b> commands.</p>
<pre>
<tt>   xx=/out:"Hello World"/

   subs ?

   ?xx?
≤±−÷→→·
   nosubs

   ?xx?
</tt>
</pre>
<p>In the above example, the <b>xx</b> variable contains a <b>TEX</b> output statement as its value. The <b>subs</b> command specifies that (?) is the substitution character for all future statements of the program. Upon processing the first <b>?xx?</b> line, <b>TEX</b> will substitute in the <b>out:"Hello World"</b> command for <b>?xx?</b> and then execute the resultant statement. The <b>nosubs</b> command turns off substitutions for subsequent statements and so <b>TEX</b> issues an error when it tries to execute the second <b>?xx?</b> line.</p>
<h2><span class="mw-headline" id="Indirections">Indirections</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=9" title="Edit section: Indirections">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In addition to variable substitution, <b>TEX</b> supported variable indirection. Variables prefixed with the underscore character (_) were considered to contain a variable name as their contents and so <b>TEX</b> would use indirection to get the value. <b>TEX</b> limited indirection to 64 levels to avoid possible looping.</p>
<p>As an example:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
    <span class="nv">a</span><span class="o">=</span><span class="s2">"b"</span>
    <span class="nv">b</span><span class="o">=</span><span class="s2">"c"</span>
    <span class="nv">c</span><span class="o">=</span><span class="s2">"hello world"</span>
 
    _ here the out would print <span class="s2">"hello world"</span> to the terminal, 
    _   since <span class="s1">'''__a == _b == c'''</span> and so the <span class="nb">command</span> became <span class="s1">'''out:c'''</span>.
    out:__a
</pre></div>
<h2><span class="mw-headline" id="Input.2Foutput">Input/output</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=10" title="Edit section: Input/output">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Honeywell Timesharing sessions had a concept of the working file. To edit an existing file, you would first make it the working file via the <b>old</b> command. To create a new file, you would first create it via the <b>new</b> command. Once changes were complete, you would either <b>save</b> (for new files) or <b>resave</b> the working file. Basically only one file could be open for editing at a time.</p>
<p><b>TEX</b> programs were primarily designed to extend the line editor system. Consequently, <b>TEX</b> had no concept of file input/output relying instead on making changes to the working file via line edit commands and saving as needed.</p>
<p>However, <b>TEX</b> did provide terminal-oriented input/output commands:</p>
<ul>
<li><b>in</b> -- print a prompt and pause until text is entered, storing it in the <b>*in</b> star variable</li>
<li><b>out</b> -- print a message</li>
</ul>
<p>A simple example using <b>in</b> and <b>out</b>:</p>
<pre>
<tt>   in:"What is your name?"

   out:"Hi ",*in
</tt>
</pre>
<h2><span class="mw-headline" id="Star_variables_and_functions">Star variables and functions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=11" title="Edit section: Star variables and functions">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p><b>TEX</b> provided <b>star variables</b> as a means to access results or side-effects of <b>TEX</b> system functions or to represent ASCII terminal codes.</p>
<p>A list of <b>star variables</b> follows:</p>
<ul>
<li><b>*account</b> - user account number associated with the current userid</li>
<li><b>*cl</b> - the current line of the current file being edited</li>
<li><b>*lcl</b> - the length of the *cl value</li>
<li><b>*clvl</b> - current depth of calls</li>
<li><b>*date</b> - current date in the form of YY-MM-DD</li>
<li><b>*eof</b> - <b>T</b> if positioned after the last line of the current file or when there is no current file</li>
<li><b>*in</b> - contains the last response to an <b>in</b> or <b>int</b> <b>TEX</b> command execution</li>
<li><b>*lin</b> - length of <b>*in</b></li>
<li><b>*left</b> or <b>*l</b> - left string from <b>scan</b> or <b>split</b> command execution</li>
<li><b>*lleft</b> or <b>*ll</b> - length of <b>*left</b></li>
<li><b>*middle</b> or <b>*m</b> - middle string from <b>scan</b> or <b>split</b> command execution</li>
<li><b>*lmiddle</b> or <b>*lm</b> - length of <b>*middle'</b></li>
<li><b>*right</b> or <b>*r</b> - right string from <b>scan</b> or <b>split</b> command execution</li>
<li><b>*lright</b> or <b>*lr</b> - length of <b>*right</b></li>
<li><b>*null</b> - represents the null string</li>
<li><b>*random</b> - contains a randomly selected digit from 0 to 9</li>
<li><b>*rmdr</b> - remainder of the last division operation</li>
<li><b>*snumb</b> - system number of the last batch job run</li>
<li><b>*svmd' <i>-</i></b> <i>TEX <b>commands to restore the</b> TEX <b>modes at the time of the last interfile</b> call</i> or <b>goto</b></li>
<li><b>*sw00</b> to <b>*sw35</b> - examines the <b>TSS</b> 36-bit switch word with 1 bit returning a <b>T</b> value and a 0 bit returning a <b>F</b></li>
<li><b>*time</b> - current time in hh:mm:ss always to the nearest second</li>
<li><b>*userid</b> - current userid</li>
</ul>
<h3><span class="mw-headline" id="Terminal_codes">Terminal codes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=12" title="Edit section: Terminal codes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Terminal codes were mapped into star functions for easy reference in <b>TEX</b> programs.</p>
<ul>
<li><b>*nul</b> - null</li>
<li><b>*soh</b> - start of header</li>
<li><b>*stx</b> - start of text</li>
<li><b>*etx</b> - end of text</li>
<li><b>*eot</b> - end of transmission</li>
<li><b>*enq</b> - enquiry</li>
<li><b>*ack</b> - acknowledge</li>
<li><b>*bel</b> - bell</li>
<li><b>*bs</b> - backspace</li>
<li><b>*ht</b> - horizontal tab</li>
<li><b>*lf</b> - line feed</li>
<li><b>*vt</b> - vertical tab</li>
<li><b>*ff</b> - form feed</li>
<li><b>*cr</b> - carriage return</li>
<li><b>*so</b> - shift out</li>
<li><b>*si</b> - shift in</li>
<li><b>*dle</b> - data link escape</li>
<li><b>*dc1</b> - device control 1</li>
<li><b>*dc2</b> - device control 2</li>
<li><b>*dc3</b> - device control 3</li>
<li><b>*dc4</b> - device control 4 (stop)</li>
<li><b>*nak</b> - negative acknowledge</li>
<li><b>*syn</b> - synchronous idle</li>
<li><b>*etb</b> - end of transmission block</li>
<li><b>*can</b> - cancel</li>
<li><b>*em</b> - end of medium</li>
<li><b>*sub</b> - substitute</li>
<li><b>*esc</b> - escape</li>
<li><b>*fs</b> - field separator</li>
<li><b>*gs</b> - group separator</li>
<li><b>*rs</b> - record separator</li>
<li><b>*us</b> - unit separator</li>
<li><b>*del</b> - delete</li>
</ul>
<h2><span class="mw-headline" id="Commands">Commands</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=13" title="Edit section: Commands">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>TEX was built on top of the <b>TSS</b> line editor, as such line editor commands could be used within a TEX program. TEX programs may have:</p>
<ul>
<li><b>TSS</b> line editing commands</li>
<li><b>TEX</b> commands</li>
<li><b>TEX</b> mode commands</li>
<li><b>TSS</b> system commands</li>
</ul>
<h3><span class="mw-headline" id="Edit_commands">Edit commands</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=14" title="Edit section: Edit commands">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The general command format was:</p>
<pre>
<tt>   verb:&lt;search_expression&gt;;&lt;repeat_count&gt;;&lt;occurrence_count&gt;:&lt;replacement_string&gt;
</tt>
</pre>
<p>The &lt;search_expression&gt; could contain a range as in F:/hello/,/world/ to find all lines that start with the string "hello" and contain the string "world" too.</p>
<p>TEX provided standard line-based file editing commands:</p>
<ul>
<li><b>P</b>: print current line</li>
<li><b>F</b>: move forward through the current file line by line</li>
<li><b>B</b>: move backward through the current file line by line</li>
<li><b>A</b>: append after the current line</li>
<li><b>I</b>: insert before the current line</li>
<li><b>R</b>: replace the current with the expression provided</li>
<li><b>D</b>: delete the current line</li>
<li><b>copy</b>: copy the current line</li>
<li><b>cut</b>: copy and delete the current line</li>
<li><b>paste</b>: paste what was cut or copied before the current line</li>
</ul>
<p>Each command could be modified with a numeric repeat value or with an asterisk (*):</p>
<ul>
<li><b>P;999</b>: print next 999 lines from the current position</li>
<li><b>P;*</b>: print all lines from the current position to the end of file</li>
<li><b>F;999</b>: move forward 999 lines from the current position</li>
<li><b>F;*</b>: move to the end of file</li>
<li><b>B;999</b>: move backward 999 lines from the current position</li>
<li><b>B;*</b>: move to the first line of the file</li>
</ul>
<p>Commands can be further modified with a line matching string or expression:</p>
<ul>
<li><b>F:/xxx/;999</b> move forward to the line beginning with 999th occurrence of /xxx/</li>
<li><b>B:/xxx/;999</b> move backward to the line beginning with 999th occurrence of /xxx/</li>
<li><b>I:/xxx/;999:/yyy/</b> insert line yyy before the next 999 lines beginning with /xxx/</li>
<li><b>R:/xxx/;999;/yyy/</b> replace the next 999 lines beginning with /xxx/ with the line /yyy/</li>
<li><b>D:/xxx/;999</b> delete the next 999 lines beginning with /xxx/</li>
</ul>
<p>For string mode, an <b>S</b> was added. Whenever /xxx/ was found within the line then the edit was applied:</p>
<ul>
<li><b>FS:/xxx/;999</b> move forward to the 999th occurrence of the string /xxx/</li>
<li><b>IS:/xxx/;999:/yyy/</b> insert the string /yyy/ before the next 999 occurrences of /xxx/</li>
<li><b>RS:/xxx/;999:/yyy/</b> replace the next 999 occurrences of the string /xxx/ with /yyy/</li>
<li><b>DS:/xxx/;999</b> delete the next 999 occurrences of the string /xxx/</li>
</ul>
<p>Lastly, the commands can be further modified with <b>V</b> to turn on verify mode and with <b>O</b> to specify <b>nth</b> occurrence string mode:</p>
<ul>
<li><b>RVO:/xxx/;99;999:/yyy/</b> replace the 999th occurrence of string /xxx/ with /yyy/ and repeat it 99 times</li>
</ul>
<p>There are a few other lesser used editing commands:</p>
<ul>
<li>mark – to include files within files when the .mark &lt;filename&gt; statement is found in the current or subsequently included files (recursive operation)</li>
<li>befl – insert before the current line (normally the "A" command was used to insert after the current line)</li>
<li>trul &lt;col&gt; – truncate leftmost columns of the current file</li>
<li>trur &lt;col&gt; – truncate rightmost columns of the current file</li>
</ul>
<p>In all edit command formats, the /xxx/ or /yyy/ or 999 could be replaced with a TEX variable. In addition, the 999 value could be replaced with an asterisk (*) to denote all occurrences.</p>
<h3><span class="mw-headline" id="TEX_commands">TEX commands</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=15" title="Edit section: TEX commands">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>TEX did not provide commands for numeric or conditional looping or switch cases as is common in modern scripting languages. These had to be constructed using <b>if</b>, labels and <b>goto</b> commands. As an example, to eliminate duplicate lines from a file, one would use:</p>
<pre>
<tt>   !ELIM_DUPS a=*cl f;1
   _
   !NEXT_LINE if *eof out:"task complete" return

   b=*cl if a:eqs:b d goto !NEXT_LINE

   a=b f;1 goto !NEXT_LINE
</tt>
</pre>
<p>TEX commands:</p>
<ul>
<li><b>call &lt;filepath&gt;!&lt;label&gt;' <i>– call a subroutine in the current program or in another file. the</i></b> <i>call</i> ends when a <b>stop</b> or <b>return</b></li>
<li><b>clear &lt;variable_name&gt;</b> – remove a named variable from the pool or use <b>*</b> to remove all variables</li>
<li><b>goto &lt;filepath&gt;!&lt;label&gt;</b> – goto the named file and label</li>
<li><b>ercall &lt;filepath!&lt;label&gt;</b> – call subroutine on error in the preceding command</li>
<li><b>ergoto &lt;filepath&gt;!&lt;label&gt;</b> – goto procedure on error in the preceding command</li>
<li><b>if &lt;expression&gt;</b> – if conditional, the expression is of the form <b>&lt;variable|value&gt;:op:&lt;variable|value&gt;</b> where the <b>op</b> is one of the comparator ops mentioned earlier.</li>
<li><b>in:&lt;expression&gt;</b> – print the expression and wait for input. Store input in the <b>*in</b> variable</li>
<li><b>int:&lt;expression&gt;</b> – print the expression and wait for input specifically from the terminal. Store the input in the <b>*in</b> variable.</li>
<li><b>*null</b> – no-input carriage return from the terminal, used to terminate insert mode in a TEX program. No other commands may be on the same line.</li>
<li><b>stop</b> – stop the TEX program</li>
<li><b>_</b> – remarks line</li>
<li><b>return</b> – return from a subroutine call</li>
<li><b>out:&lt;expression&gt;</b> – print the expression to the terminal</li>
<li><b>outt:&lt;expression&gt;</b> – force print the expression (and all prior output not yet flushed) to the terminal</li>
<li><b>scan:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – scan <b>&lt;operand-a&gt;</b> from left to right searching for <b>&lt;operand-b&gt;</b> and parse <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables and if <b>*match</b> is <b>T</b> then a match was found.</li>
<li><b>scann:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – scan <b>&lt;operand-a&gt;</b> from left to right searching for <b>&lt;operand-b&gt;</b> and parse <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables and if <b>*match</b> is <b>T</b> then a match was found. <b>scann</b> &lt;operand-b&gt; was limited to a single character or character class (*lc=lowercase alphabetic, *uc=uppercase alphabetic, *n=numeric, *a=alphabetic(*lc+*uc), *an=alphanumeric(*a+*n))</li>
<li><b>scanr:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – scan <b>&lt;operand-a&gt;</b> from right to left searching for <b>&lt;operand-b&gt;</b> and parse <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables and if <b>*match</b> is <b>T</b> then a match was found.</li>
<li><b>scannr:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – scan <b>&lt;operand-a&gt;</b> from right to left searching for <b>&lt;operand-b&gt;</b> and parse <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables and if <b>*match</b> is <b>T</b> then a match was found. <b>scannr</b> &lt;operand-b&gt; was limited to a single character or character class (*lc=lowercase alphabetic, *uc=uppercase alphabetic, *n=numeric, *a=alphabetic(*lc+*uc), *an=alphanumeric(*a+*n))</li>
<li><b>split:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – split <b>&lt;operand-a&gt;</b> at position <b>&lt;operand-b&gt;</b> starting from the beginning of <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables</li>
<li><b>splitr:&lt;operand-a&gt;:&lt;operand-b&gt;</b> – split <b>&lt;operand-a&gt;</b> at position <b>&lt;operand-b&gt;</b> starting from the end of <b>&lt;operand-a&gt;</b> placing the results in <b>*left</b>, <b>*middle</b>, and <b>*right</b> star variables</li>
<li><b>subs &lt;subs_character&gt;</b> – activate subs mode where TEX will scan for pairs of &lt;subs_characters&gt;, evaluating the expression and placing it in the line prior to executing the line. <b>SUBS</b> mode is turned off by <b>NOSUBS</b></li>
<li><b>trace</b> - activate trace mode where lines are displayed prior to being executed. Trace mode is turned off by <b>NOTRACE</b></li>
<li><b>vari</b> - display all variables and their values including the <b>star variables</b></li>
</ul>
<h3><span class="mw-headline" id="TEX_modes">TEX modes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=16" title="Edit section: TEX modes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>TEX modes defined how other TEX commands would operate. The <b>*svmd</b> variable contained the current state of all TEX modes in the form of TEX commands to restore the modes. Each mode had an inverse command to turn the mode off which could be done at any time.</p>
<ul>
<li><b>subs &lt;char&gt; / nosubs</b> - activate subs mode where TEX will scan for pairs of &lt;char&gt;, evaluating the expression and placing it in the line prior to executing the line.</li>
<li><b>trace / notrace</b> – activate trace mode where lines are displayed prior to being executed.</li>
<li><b>case / nocase</b> - convert all strings to lowercase prior to comparison operations</li>
<li><b>octl &lt;char&gt; / nooctl</b> - define the octal prefixing character (e.g. <b>octl&#160;%</b> and then <b>rs:/BELL/:/%007/</b>)</li>
<li><b>mask &lt;char&gt; / nomask</b> - define the mask character for matching against any character within a search string</li>
<li><b>cols &lt;col&gt; / nocols</b> - define the columns window that string searching are limited to searching</li>
</ul>
<h3><span class="mw-headline" id="TSS_commands">TSS commands</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=17" title="Edit section: TSS commands">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>While beyond the scope of this article, the most commonly used <b>TSS</b> commands were:</p>
<ul>
<li><b>NEW</b> – new file (i.e. empty file; clears editor workspace)</li>
<li><b>OLD</b> – old file brought into editor workspace</li>
<li><b>SAVE</b> – save a new file (filename can't exist)</li>
<li><b>RESAVE</b> – resave editor workspace into an existing file</li>
</ul>
<h2><span class="mw-headline" id="Example_code">Example code</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=18" title="Edit section: Example code">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This code was excerpted from a <b>TEX</b> based Adventure game written by a team of Explorer Scouts from GE Post 635, Schenectady New York circa 1980. The <a href="/wiki/Adventure_game" title="Adventure game">Adventure game</a> was the first of several popular online text-based adventure games available on the GE Timesharing service. The scouts decided to create their own adventure game using <b>TEX</b>. The original Adventure game used two word commands to navigate <a href="/wiki/Colossal_Cave_Adventure" title="Colossal Cave Adventure">Colossal Cave</a>. The parser shown below handled simple two word commands like <b>go west</b> or <b>move right</b> and converted them into x,y deltas for positioning and directional orientation in the game.</p>
<p>Parsing the Adventure two word commands:</p>
<pre>
<tt>   _ ...main body of program skipped here for brevity
   _    where a call !init and repeated calls to !parser are done...
   
   !init 
   _ force a clear screen on the televideo terminal
   out:*esc,":"
   
   _ clear program variables
   rmdr=*null
   del=0
   dir="n"
   xlocn=1    ylocn=1
   return
</tt>
</pre>
<pre>
<tt>   _ _______________________________________________________________
   _
   _
   _ The PARSER subroutine interprets your input commands and tries to 
   _ pre-process them prior to returning to your program.
   _
   _
   !parser
   qry=*cr,*lf,"--&gt;" sntc=*null call !ask1
   ergo !unkn_cmd verb=ans vdel=0 goto !$ans$_cmd
   _
   !walk_cmd   del=2     call !move_to  return
   !run_cmd    del=4     call !move_to  return
   !fly_cmd    del=6     call !move_to  return
   !swim_cmd   del=2     call !move_to  return
   !look_cmd   msg="mlk" call !sense_to return
   !listen_cmd msg="mli" call !sense_to return
   !smell_cmd  msg="msm" call !sense_it return
   !touch_cmd  msg="mto" call !sense_it return
   !taste_cmd  msg="mta" call !sense_it return
   !cast_cmd             call !cast_it  return
   !unkn_cmd   return
</tt>
</pre>
<pre>
<tt>   !move_to call !ask3 if ans:eqs:*null goto !to_$dir$
   ercall !to_same call !to_$ans$
   _
   !to_locn xlocn=xlocn+xdel ylocn=ylocn+ydel return
   _
   !to_f
   !to_forward
   !to_ahead
   !to_same goto !to_$dir$
   _
   !to_b
   !to_backward goto !inv_$dir$
   _
   !to_r
   !to_right goto !rt_$dir$
   _
   !to_l
   !to_left goto !lt_$dir$
   _
   !inv_south
   !rt_northwest
   !lt_northeast
   !to_n
   !to_north dir="n" xdel=0 ydel=del return
   _
   !inv_west
   !rt_northeast
   !lt_southeast
   !to_e
   !to_east dir="e" xdel=del ydel=0 return
   _
   !inv_north
   !rt_southeast
   !lt_southwest
   !to_s
   !to_south dir="s" xdel=0 ydel=-del return
   _
   !inv_east
   !rt_southwest
   !lt_northwest
   !to_w
   !to_west dir="w" xdel=-del ydel=0 return
   _
   !to_very vdel=vdel+1 goto !to_same
   !to_fast del=del+vdel vdel=0 goto !to_same
   !to_slow del=del-vdel vdel=0 goto !to_same
</tt>
</pre>
<pre>
<tt>   !sense_to call !ask3
   ercall !to_same call !to_$ans$ msg=msg,dir call !msg return
   _
   _
   _ _______________________________________________________________
   _
   !sense_it call !ask3
   !sense_it_1 if ans:eqs:*null in:verb," what ???" ans=*in goto !sense_it_1
   msg=msg,ans call !msg return
   _
   _
   _ _______________________________________________________________
   _
   !msg i=1
   !msg_1 ergo !msg_end out:$(msg,i)$ i=i+1 clear $(msg,i)$ goto !msg_1
   !msg_end return
</tt>
</pre>
<pre>
<tt>   _
   _ The ASK subroutines get yout terminal input and break it up depending
   _ on the spaces.
   _
   !ask1 if rmdr:eqs:*null in:qry rmdr=*in sntc=*null
   !ask2 if sntc:eqs:*null scan:rmdr:"." sntc=*l rmdr=*r]'1
   !ask3 scan:sntc:" " ans=*l sntc=*r return
</tt>
</pre>
<p>Rolling dice:</p>
<pre>
<tt>   _
   _
   _ _______________________________________________________________
   _
   _ The DICE subroutine rolls the dice for you and returns the answer
   _ in the variable called DICE.
   _
   _ Input to the DICE subroutine is via the DICE variable as shown below :
   _
   _     1d6 - roll the 6-sided die once
   _     3d8 - roll the 8-sided die 3 times
   _     d%  - roll the 100-sided die once (percentage roll)
   _
   !dice if dice:eqs:"d%" dice="1d100"
   scan:dice:"d" i=*l j=*r dice=0
   
   !dice_1 
   k=*random if j:gt:9 k=k,*random
   k=k/j dice=dice+*rmdr+1
   i=i-1 if i:gt:0 goto !dice_1
   
   clear i clear j clear k 
   return
</tt>
</pre>
<p>Televideo screen codes:</p>
<pre>
<tt>   _ 
   _
   _ The following routines allow you to easily draw pictures on the
   _ the Televideo 950 terminal.
   _
   _      xyplot—positions the cursor
   _ 
   _      gr—turns graphics mode on
   _
   _      nogr—turns graphics mode off
   _
   _      clear—clears the screen
   _
   _      load—used by xyplot to load the xytbl
   _
   !xyplot
   ercall !load xytbl=xytbl
   cx=(xytbl]'(x-1))']1
   cy=(xytbl]'(y-1))']1
   out:*ESC,"=",cy,cx,z
   return
   _
   _
   !load
   xytbl=" !",/"/,"#$%&amp;'()*+,-./"
   xytbl=xytbl,"0123456789:;&lt;=&gt;?",*AT,"ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_"
   xytbl=xytbl,"`abcdefghijklmnopqrstuvwxyz{|}~",*DEL
   return
   _
   _
   !gr nosubs
   out:*ESC,"$" subs $
   $*SVMD$ return
   !nogr out:*ESC,"%" return
   !clear out:*ESC,":" return
</tt>
</pre>
<h2><span class="mw-headline" id="Notable_features">Notable features</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=19" title="Edit section: Notable features">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The most notable feature in <b>TEX</b> was its <b>SUBS</b> mode allowing variable values to crossover and become executable code. It allowed a programmer to create new variables on the fly to be used in later <b>TEX</b> expressions in a <a href="/wiki/LISP" class="mw-redirect" title="LISP">LISP</a>-like fashion. <b>TEX</b> also allowed programmers to create scripts on the fly via line editing, saving the content to file later to be executed as part of the current program using interfile <b>call</b> and <b>goto</b> statements. However, in most cases, these features were used to provide simple dynamic <b>goto</b> statements in code as seen in the Adventure game parser example. What other kinds of <a href="/wiki/Artificial_Intelligence" class="mw-redirect" title="Artificial Intelligence">Artificial Intelligence</a> constructs could be developed were never fully explored.</p>
<p>An example of creating variables on the fly and then using them to do an interfile <b>goto</b>.</p>
<pre>
<tt>   _ incorporate x,y,z into the global variable pool
   cmd="x=1 y=2 z=3"
   subs ?
   ?cmd?
</tt>
</pre>
<pre>
<tt>   _ next we modify mycat/mypgm_1_2 to say "hello world" we are writing some code to execute later in our script
   old mycat/mypgm_1_2
   r:*cl:/!label_3 out:'Hello World'/
   resave mycat/mypgm_1_2
</tt>
</pre>
<pre>
<tt>   _ lastly we subs in x,y,z and then evaluate the goto mypgm_1_2!label_3 which does an interfile goto
   goto mycat/mypgm_?x?_?y?!label_?z?
</tt>
</pre>
<p>The <b>TEX</b> program above illustrates dynamic script creation and then execution via substitution, file editing and interfile <b>gotos</b>. In effect, programs writing programs were possible although seldom done. In the above example, the <b>mycat/mypgm_1_2</b> file would be executed at <b>label_3</b> printing out <b>"hello world"</b>.</p>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=20" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="refbegin" style="">
<ul>
<li>TEX User Guide (DF72) - Honeywell Information Systems, Copyright 1979</li>
<li>TEX Quick Reference - Honeywell Information Systems, Copyright 1979</li>
<li>Software Catalog (AW15 Rev05), Honeywell Information Systems, Copyright 1979, Section 4 - Series 600/6000, Series 60/Level 66, pg 4-42 TEX Executive Processor</li>
<li>R.W.Bemer, "Introduction to the TEX language - Part I", Interface Age Magazine, volume 3, No. 8, 144-147, 1978 August</li>
<li>R.W.Bemer, "Introduction to the TEX language - Part II", Interface Age Magazine, volume3, No. 9, 124-127, 1978 September</li>
<li>R.W.Bemer, "Introduction to the TEX language - Part III", Interface Age Magazine, volume 3, No. 10, 126-131, 1978 October</li>
<li>R.W.Bemer, "TEX-based screen editor", Proc. HLSUA Forum XXXI, 158-160, 1980 Oct 12-15 World's first half-duplex full screen editor.</li>
</ul>
<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit&amp;section=21" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><i>Introduction to TEX</i>, p.144 Interface Age - Aug 1978</span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text">* Donald E. Knuth. <i>The TeXbook</i> (<a href="/wiki/Computers_and_Typesetting" title="Computers and Typesetting">Computers and Typesetting</a>, Volume A). Reading, Massachusetts: Addison-Wesley, 1984. <a href="/wiki/Special:BookSources/0201134489" class="internal mw-magiclink-isbn">ISBN 0-201-13448-9</a>.</span></li>
</ol>
</div>
</div>


<!-- 
NewPP limit report
Parsed by mw1188
Cached time: 20170114212213
Cache expiry: 2592000
Dynamic content: false
CPU time usage: 0.060 seconds
Real time usage: 0.224 seconds
Preprocessor visited node count: 171/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 597/2097152 bytes
Template argument size: 9/2097152 bytes
Highest expansion depth: 7/40
Expensive parser function count: 0/500
-->

<!-- 
Transclusion expansion time report (%,ms,calls,template)
100.00%   14.926      1 - -total
 72.04%   10.753      1 - Template:Reflist
 26.76%    3.994      1 - Template:Refbegin
 13.02%    1.943      1 - Template:Column-count
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:13852549-0!*!0!!en!*!* and timestamp 20170114212213 and revision id 734564377
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Text_Executive_Programming_Language&amp;oldid=734564377">https://en.wikipedia.org/w/index.php?title=Text_Executive_Programming_Language&amp;oldid=734564377</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Procedural_programming_languages" title="Category:Procedural programming languages">Procedural programming languages</a></li><li><a href="/wiki/Category:Programming_languages_created_in_1979" title="Category:Programming languages created in 1979">Programming languages created in 1979</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Pages_using_ISBN_magic_links" title="Category:Pages using ISBN magic links">Pages using ISBN magic links</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Text+Executive+Programming+Language" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Text+Executive+Programming+Language" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Text_Executive_Programming_Language"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:Text_Executive_Programming_Language"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/Text_Executive_Programming_Language" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Text_Executive_Programming_Language" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Text_Executive_Programming_Language" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;oldid=734564377" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q7475278" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Text_Executive_Programming_Language&amp;id=734564377" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Text+Executive+Programming+Language">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Text+Executive+Programming+Language&amp;returnto=Text+Executive+Programming+Language&amp;oldid=734564377&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Text_Executive_Programming_Language&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
											</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-add wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q7475278#sitelinks-wikipedia" title="Add interlanguage links" class="wbc-editpage">Add links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 15 August 2016, at 05:27.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Text_Executive_Programming_Language&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":64,"wgHostname":"mw1273"});});</script>
	</body>
</html>
