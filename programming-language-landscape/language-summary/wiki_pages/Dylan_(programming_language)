<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>Dylan (programming language) - Wikipedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Dylan_(programming_language)","wgTitle":"Dylan (programming language)","wgCurRevisionId":748229815,"wgRevisionId":748229815,"wgArticleId":8741,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles lacking sources from June 2013","All articles lacking sources","Pages using deprecated image syntax","All articles with specifically marked weasel-worded phrases","Articles with specifically marked weasel-worded phrases from June 2013","Articles with DMOZ links","Dylan (programming language)","Cross-platform software","Programming languages created in the 1990s","Lisp programming language family","Extensible syntax programming languages"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Dylan_(programming_language)","wgRelevantArticleId":8741,"wgRequestId":"WJEsnApAADkAAdXu85UAAAAF","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":true},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q1268744","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options@0j3lz3q",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.legacy.wikibits","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.quicksurveys.init","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>
<meta name="generator" content="MediaWiki 1.29.0-wmf.9"/>
<meta name="referrer" content="origin-when-cross-origin"/>
<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Dylan_(programming_language)"/>
<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit"/>
<link rel="edit" title="Edit this page" href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit"/>
<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>
<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/"/>
<link rel="canonical" href="https://en.wikipedia.org/wiki/Dylan_(programming_language)"/>
<link rel="dns-prefetch" href="//login.wikimedia.org"/>
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Dylan_programming_language rootpage-Dylan_programming_language skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Dylan (programming language)</h1>
									<div id="bodyContent" class="mw-body-content">
									<div id="siteSub">From Wikipedia, the free encyclopedia</div>
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><script>function mfTempOpenSection(id){var block=document.getElementById("mf-section-"+id);block.className+=" open-block";block.previousSibling.className+=" open-block";}</script><table class="plainlinks metadata ambox ambox-content ambox-Unreferenced" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><a href="/wiki/File:Question_book-new.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" data-file-width="512" data-file-height="399" /></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">sources</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=Dylan_(programming_language)&amp;action=edit">improve this article</a> by <a href="/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1" title="Help:Introduction to referencing with Wiki Markup/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="/wiki/Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(June 2013)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<table class="infobox vevent" style="width:22em">
<caption class="summary">Dylan</caption>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/File:Dylan_logo.png" class="image"><img alt="Dylan logo.png" src="//upload.wikimedia.org/wikipedia/en/2/25/Dylan_logo.png" width="145" height="58" data-file-width="145" data-file-height="58" /></a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Paradigm</a></th>
<td><a href="/wiki/Multi-paradigm_programming_language" class="mw-redirect" title="Multi-paradigm programming language">multi-paradigm</a>: <a href="/wiki/Functional_programming" title="Functional programming">functional</a>, <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented</a></td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Software_developer" title="Software developer">Developer</a></th>
<td class="organiser"><a href="/wiki/Apple_Computer" class="mw-redirect" title="Apple Computer">Apple Computer</a>, <a href="/wiki/Harlequin_(software_company)" title="Harlequin (software company)">Harlequin</a>, <a href="/wiki/Carnegie_Mellon_University" title="Carnegie Mellon University">Carnegie Mellon University</a></td>
</tr>
<tr>
<th scope="row">First&#160;appeared</th>
<td>1992<span class="noprint">; 25&#160;years ago</span><span style="display:none">&#160;(<span class="bday dtstart published updated">1992</span>)</span></td>
</tr>
<tr>
<td colspan="2" style="text-align:center"></td>
</tr>
<tr>
<th scope="row" style="white-space: nowrap;"><a href="/wiki/Software_release_life_cycle" title="Software release life cycle">Stable release</a></th>
<td>
<div style="margin:0px;">2014.1</div>
</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Type_system" title="Type system">Typing discipline</a></th>
<td>Strong, dynamic</td>
</tr>
<tr>
<th scope="row"><a href="/wiki/Operating_system" title="Operating system">OS</a></th>
<td><a href="/wiki/Cross-platform" title="Cross-platform">Cross-platform</a></td>
</tr>
<tr>
<th scope="row">Website</th>
<td><span class="url"><a rel="nofollow" class="external text" href="http://opendylan.org">opendylan<wbr />.org</a></span></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Major <a href="/wiki/Programming_language_implementation" title="Programming language implementation">implementations</a></th>
</tr>
<tr>
<td colspan="2" style="text-align:center">Open Dylan, Gwydion Dylan</td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced by</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/Common_Lisp_Object_System" title="Common Lisp Object System">CLOS</a>, <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>, <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a>, <a href="/wiki/EuLisp" title="EuLisp">EuLisp</a></td>
</tr>
<tr>
<th colspan="2" style="text-align:center;background-color: #eee;">Influenced</th>
</tr>
<tr>
<td colspan="2" style="text-align:center"><a href="/wiki/Lasso_(programming_language)" title="Lasso (programming language)">Lasso</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a></td>
</tr>
</table>
<p><b>Dylan</b> <span class="nowrap"><span class="IPA nopopups"><a href="/wiki/Help:IPA_for_English" title="Help:IPA for English">/<span style="border-bottom:1px dotted"><span title="/ˈ/ primary stress follows">ˈ</span><span title="'d' in 'dye'">d</span><span title="/ɪ/ short 'i' in 'bid'">ɪ</span><span title="'l' in 'lie'">l</span><span title="/ən/ 'on' in 'button'">ən</span></span>/</a></span></span> is a multi-paradigm <a href="/wiki/Programming_language" title="Programming language">programming language</a> that includes support for <a href="/wiki/Functional_programming" title="Functional programming">functional</a> and <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>, and is <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic</a> and <a href="/wiki/Reflection_(computer_science)" class="mw-redirect" title="Reflection (computer science)">reflective</a> while providing a programming model designed to support efficient machine code generation, including fine-grained control over dynamic and static behaviors. It was created in the early 1990s by a group led by <a href="/wiki/Apple_Computer" class="mw-redirect" title="Apple Computer">Apple Computer</a>.</p>
<p>A concise and thorough overview of the language may be found in the Dylan Reference Manual.</p>
<p>Dylan derives from <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a> and <a href="/wiki/Common_Lisp" title="Common Lisp">Common Lisp</a> and adds an integrated object system derived from the <a href="/wiki/Common_Lisp_Object_System" title="Common Lisp Object System">Common Lisp Object System</a> (CLOS). In Dylan, all values (including numbers, characters, functions, and classes) are <a href="/wiki/First-class_object" class="mw-redirect" title="First-class object">first-class objects</a>. Dylan supports multiple inheritance, polymorphism, multiple dispatch, keyword arguments, object introspection, pattern-based syntax extension macros, and many other advanced features. Programs can express fine-grained control over dynamism, admitting programs that occupy a continuum between dynamic and static programming and supporting evolutionary development (allowing for rapid prototyping followed by incremental refinement and optimization).</p>
<p>Dylan's main design goal is to be a dynamic language well-suited for developing commercial software. Dylan attempts to address potential performance issues by introducing "natural" limits to the full flexibility of Lisp systems, allowing the compiler to clearly understand compilable units (i.e., libraries).</p>
<p>Although deriving much of its semantics from Scheme and other Lisps—some implementations were in fact initially built within existing Lisp systems—Dylan has an <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a>-like syntax rather than a Lisp-like prefix syntax.</p>
<p></p>
<div id="toc" class="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Syntax"><span class="tocnumber">2</span> <span class="toctext">Syntax</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Modules_vs._namespace"><span class="tocnumber">3</span> <span class="toctext">Modules vs. namespace</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Classes"><span class="tocnumber">4</span> <span class="toctext">Classes</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="#Methods_and_generic_functions"><span class="tocnumber">5</span> <span class="toctext">Methods and generic functions</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="#Extensibility"><span class="tocnumber">6</span> <span class="toctext">Extensibility</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Apple_Dylan"><span class="tocnumber">7</span> <span class="toctext">Apple Dylan</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#See_also"><span class="tocnumber">8</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#External_links"><span class="tocnumber">9</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div role="note" class="hatnote">Main article: <a href="/wiki/History_of_the_Dylan_programming_language" title="History of the Dylan programming language">History of the Dylan programming language</a></div>
<p>Dylan was created in the early 1990s by a group led by <a href="/wiki/Apple_Computer" class="mw-redirect" title="Apple Computer">Apple Computer</a>. At one point in its development it was intended for use with Apple's <a href="/wiki/Apple_Newton" title="Apple Newton">Newton</a> computer, but the Dylan implementation did not reach sufficient maturity in time, and Newton instead used a combination of C and the <a href="/wiki/NewtonScript_programming_language" class="mw-redirect" title="NewtonScript programming language">NewtonScript</a> developed by Walter Smith. Apple ended their Dylan development effort in 1995, though they made a "technology release" version available (Apple Dylan TR1) that included an advanced <a href="/wiki/Integrated_development_environment" title="Integrated development environment">IDE</a>.</p>
<p>Two other groups contributed to the design of the language and developed implementations: <a href="/wiki/Harlequin_(software_company)" title="Harlequin (software company)">Harlequin</a> released a commercial IDE for <a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a> and <a href="/wiki/Carnegie_Mellon_University" title="Carnegie Mellon University">Carnegie Mellon University</a> released an <a href="/wiki/Open_source" class="mw-redirect" title="Open source">open source</a> compiler for <a href="/wiki/Unix" title="Unix">Unix</a> systems called Gwydion Dylan. Both of these implementations are now open source. The Harlequin implementation is now known as Open Dylan and is maintained by a group of volunteers, the Dylan Hackers.</p>
<p>The Dylan language was code-named Ralph. James Joaquin chose the name Dylan for "DYnamic LANguage."</p>
<h2><span class="mw-headline" id="Syntax">Syntax</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=2" title="Edit section: Syntax">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Dylan uses an Algol-like syntax designed by <a href="/w/index.php?title=Michael_Kahl&amp;action=edit&amp;redlink=1" class="new" title="Michael Kahl (page does not exist)">Michael Kahl</a>. It is described in great detail in the Dylan Reference Manual. This page shows examples of some syntax features that are more unusual. Many of them come from Dylan's Lisp heritage.</p>
<p>A simple class with several slots:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">class</span> <span class="nc">&lt;point&gt;</span> <span class="p">(</span><span class="nc">&lt;object&gt;</span><span class="p">)</span>
  <span class="nb">slot</span> <span class="n">point-x</span> <span class="p">::</span> <span class="nc">&lt;integer&gt;</span><span class="p">,</span>
    <span class="k">required-init-keyword:</span> <span class="k">x:</span><span class="p">;</span>
  <span class="nb">slot</span> <span class="n">point-y</span> <span class="p">::</span> <span class="nc">&lt;integer&gt;</span><span class="p">,</span>
    <span class="k">required-init-keyword:</span> <span class="k">y:</span><span class="p">;</span>
<span class="k">end</span> <span class="nb">class</span> <span class="nc">&lt;point&gt;</span><span class="p">;</span>
</pre></div>
<ul>
<li>By convention all classes are named with angle brackets. This is just a convention. The class could be named "Point", but that is never done. (Note that Dylan is not case sensitive.)</li>
<li>In "end class &lt;point&gt;" both "class" and "&lt;point&gt;" are optional. This is true for all "end clauses". For example, you may write "end if" or just "end" to terminate an "if" statement.</li>
</ul>
<p>The same class, rewritten in the most minimal way possible:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">class</span> <span class="nc">&lt;point&gt;</span> <span class="p">(</span><span class="nc">&lt;object&gt;</span><span class="p">)</span>
  <span class="nb">slot</span> <span class="n">point-x</span><span class="p">;</span>
  <span class="nb">slot</span> <span class="n">point-y</span><span class="p">;</span>
<span class="k">end</span><span class="p">;</span>
</pre></div>
<ul>
<li>The slots are now both typed as &lt;object&gt;.</li>
<li>The slots must be initialized manually.</li>
</ul>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">constant</span> <span class="no">$pi</span> <span class="p">::</span> <span class="nc">&lt;double-float&gt;</span> <span class="o">=</span> <span class="mf">3.1415927</span><span class="n">d0</span><span class="p">;</span>
</pre></div>
<ul>
<li>By convention constant names begin with "$".</li>
</ul>
<p>A factorial function:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">function</span> <span class="n">factorial</span> <span class="p">(</span><span class="n">n</span> <span class="p">::</span> <span class="nc">&lt;integer&gt;</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="n">n!</span> <span class="p">::</span> <span class="nc">&lt;integer&gt;</span><span class="p">)</span>
  <span class="k">case</span>
    <span class="n">n</span> <span class="o">&lt;</span> <span class="mi">0</span>     <span class="p">=&gt;</span> <span class="nb">error</span><span class="p">(</span><span class="s">"Can't take factorial of negative integer: %d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">n</span><span class="p">);</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>     <span class="p">=&gt;</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">otherwise</span> <span class="p">=&gt;</span> <span class="n">n</span> <span class="o">*</span> <span class="n">factorial</span><span class="p">(</span><span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
  <span class="k">end</span>
<span class="k">end</span><span class="p">;</span>
</pre></div>
<ul>
<li>There is no explicit "return" statement. The result of a method or function is the last expression evaluated. It is a common style to leave off the semicolon after an expression in return position.</li>
<li>Identifiers in Dylan may contain more "special" characters than most language. "n!" and "&lt;integer&gt;" are just normal identifiers. If there is any ambiguity, whitespace is used.</li>
<li>Statements such as "if" and "for" end with the keyword "end" but may optionally be written as "end if" or "end for".</li>
</ul>
<p>Originally, Dylan used a Lisp-like prefix syntax, which is based on <a href="/wiki/S-expressions" class="mw-redirect" title="S-expressions">s-expressions</a>:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
 <span class="p">(</span><span class="nv">bind</span> <span class="p">((</span><span class="nv">radius</span> <span class="mi">5</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">circumference</span> <span class="p">(</span><span class="nb">*</span> <span class="mi">2</span> <span class="nv">$pi</span> <span class="nv">radius</span><span class="p">)))</span>
   <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="nv">circumference</span> <span class="mi">42</span><span class="p">)</span>
       <span class="p">(</span><span class="nv">format-out</span> <span class="s">"Hello big circle! c is %="</span> <span class="nv">circumference</span><span class="p">)</span>
       <span class="p">(</span><span class="nv">format-out</span> <span class="s">"Hello circle! c is %="</span> <span class="nv">circumference</span><span class="p">)))</span>
</pre></div>
<p>By the time the language design was completed, it was changed to an Algol-like syntax, with the expectation that it would be more familiar to a wider audience of programmers.</p>
<h2><span class="mw-headline" id="Modules_vs._namespace">Modules vs. namespace</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=3" title="Edit section: Modules vs. namespace">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In many object-oriented languages, classes are the primary means of encapsulation and modularity; each class defines a namespace and controls which definitions are externally visible. In addition, classes in many languages define an indivisible unit that must be used as a whole—if you want to use a String concatenation function, you must import and compile against all of String.</p>
<p>Some languages also include a separate, explicit namespace or module system that performs encapsulation in a more general way. Dylan is such a language.</p>
<p>In Dylan, the concepts of compile-unit and import-unit are separated, and classes have nothing specifically to do with either. A <i>library</i> defines items that should be compiled and handled together, while a <i>module</i> defines the namespace. Classes can be placed together in modules, or cut across them, as the programmer wishes. Often the complete definition for a class does not exist in a single module, but is spread across several that are optionally collected together. Different programs can have different definitions of the same class, including only what they need.</p>
<p>For example, consider an add-on library for <a href="/wiki/Regex" class="mw-redirect" title="Regex">regex</a> support on String. In some languages, in order for the functionality to be included in strings, the functionality has to be added to the String namespace itself. As soon as you do this, the String class becomes larger, and people who don't need to use regex still have to "pay" for it in increased library size. For this reason these sorts of add-ons are typically placed in their own namespaces and objects. The downside to this approach is that the new functionality is no longer a <i>part of</i> string; instead, it is isolated in its own set of functions that have to be called separately. Instead of <code>myString.parseWith(myPattern)</code>, which would be the natural organization from an OO point of view, you use something like <code>myPattern.parseString(myString)</code>, which effectively reverses the ordering.</p>
<p>In addition, under Dylan many interfaces can be defined for the same code, for instance the String concatenation method could be placed in both the String interface, and the "concat" interface which collects together all of the different concatenation functions from various classes. This is more commonly used in math libraries, where functions tend to be applicable to widely differing object types.</p>
<p>A more practical use of the interface construct is to build public and private versions of a module, something that other languages include as a "bolt on" feature that invariably causes problems and adds syntax. Under Dylan the programmer can simply place every function call in the "Private" or "Development" interface, and collect up publicly accessible functions in "Public". Under <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> or <a href="/wiki/C%2B%2B" title="C++">C++</a> the visibility of an object is defined in the code itself, meaning that to support a similar change the programmer would be forced to re-write the definitions completely, and could not have two versions at the same time.</p>
<h2><span class="mw-headline" id="Classes">Classes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=4" title="Edit section: Classes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Classes in Dylan describe "slots" (data members, fields, ivars, etc.) of objects in a fashion similar to most OO languages. All access to slots are via methods, as in <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>. Default getter and setter methods are automatically generated based on the slot names. In contrast with most other OO languages, other methods applicable to the class are often defined outside of the class, and thus class definitions in Dylan typically include the definition of the storage only. For instance:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">class</span> <span class="nc">&lt;window&gt;</span> <span class="p">(</span><span class="nc">&lt;view&gt;</span><span class="p">)</span>
  <span class="nb">slot</span> <span class="n">title</span> <span class="p">::</span> <span class="nc">&lt;string&gt;</span> <span class="o">=</span> <span class="s">"untitled"</span><span class="p">,</span> <span class="k">init-keyword:</span> <span class="k">title:</span><span class="p">;</span>
  <span class="nb">slot</span> <span class="n">position</span> <span class="p">::</span> <span class="nc">&lt;point&gt;</span><span class="p">,</span> <span class="k">required-init-keyword:</span> <span class="k">position:</span><span class="p">;</span>
<span class="k">end</span> <span class="nb">class</span><span class="p">;</span>
</pre></div>
<p>In this example the class "<code>&lt;window&gt;</code>" is defined. The &lt;class name&gt; syntax is convention only, to make the class names stand out—the angle brackets are merely part of the class name. In comparison, in some languages the convention is to capitalize the first letter of the class name or to prefix the name with a "C" or "T" (for example). <code>&lt;window&gt;</code> inherits from a single class, <code>&lt;view&gt;</code>, and contains two slots, <code>title</code> holding a string for the window title, and <code>position</code> holding an X-Y point for a corner of the window. In this particular example the title has been given a default value, while the position has not. The optional "init-keyword" syntax allows the programmer to specify the initial value of the slot when instantiating an object of the class.</p>
<p>In languages such as C++ or Java, the class would also define its interface. In this case the definition above has no explicit instructions, so in both languages access to the slots and methods is considered <code>protected</code>, meaning they can be used only by subclasses. In order to allow unrelated code to use the window instances, they would have to be declared <code>public</code>.</p>
<p>In Dylan these sorts of visibility rules are not considered part of the code itself, but of the module/interface system. This adds considerable flexibility. For instance, one interface used during early development could declare everything public, whereas one used in testing and deployment could limit this. With C++ or Java these changes would require changes to the source code itself, so people won't do it, whereas in Dylan this is a completely unrelated concept.</p>
<p>Although this example does not use it, Dylan also supports <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a>.</p>
<h2><span class="mw-headline" id="Methods_and_generic_functions">Methods and generic functions</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=5" title="Edit section: Methods and generic functions">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>In Dylan, methods are not intrinsically associated with any particular class; methods can be thought of as existing outside of classes. Like CLOS, Dylan is based on <a href="/wiki/Multimethods" class="mw-redirect" title="Multimethods">multimethods</a>, where the specific method to be called is chosen based upon the types of all its arguments. The method does not have to be known at compile time, the understanding being that the required functionality may be available or may not, based on the user's preferences.</p>
<p>Under Java the same methods would be isolated in a particular class. In order to use that functionality the programmer is forced to <i>import</i> that class and refer to it explicitly in order to call the method. If that class is not available, or unknown at compile time, the application simply won't compile.</p>
<p>In Dylan, code is isolated from storage in <i>functions</i>. Many classes have methods that call their own functions, thereby looking and feeling like most other OO languages. However code may also be located in <i>generic functions</i>, meaning they are not attached to a particular class, and can be called natively by anyone. Linking a particular generic function to a method in a class is accomplished this way:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">define</span> <span class="nb">method</span> <span class="n">turn-blue</span> <span class="p">(</span><span class="n">w</span> <span class="p">::</span> <span class="nc">&lt;window&gt;</span><span class="p">)</span>
  <span class="n">w</span><span class="p">.</span><span class="n">color</span> <span class="o">:=</span> <span class="no">$blue</span><span class="p">;</span>
<span class="k">end</span> <span class="nb">method</span><span class="p">;</span>
</pre></div>
<p>This definition is similar to those in other languages, and would likely be encapsulated within the <code>&lt;window&gt;</code> class. Note the&#160;:= setter call, which is <a href="/wiki/Syntactic_sugar" title="Syntactic sugar">syntactic sugar</a> for <code>color-setter($blue, w)</code>.</p>
<p>The utility of generic methods comes into its own when you consider more "generic" examples. For instance, one common function in most languages is the <code>to-string</code>, which returns some <a href="/wiki/Human-readable" class="mw-redirect" title="Human-readable">human-readable</a> form for the object. For instance, a window might return its title and its position in parens, while a string would return itself. In Dylan these methods could all be collected into a single module called "<code>to-string</code>", thereby removing this code from the definition of the class itself. If a particular object did not support a <code>to-string</code>, it could be easily added in the <code>to-string</code> module.</p>
<h2><span class="mw-headline" id="Extensibility">Extensibility</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=6" title="Edit section: Extensibility">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>This whole concept might strike some readers as very odd. The code to handle <code>to-string</code> for a window isn't defined in <code>&lt;window&gt;</code>? This might not make any sense until you consider how Dylan handles the call of the <code>to-string</code>. In most languages<sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Avoid_weasel_words" class="mw-redirect" title="Wikipedia:Avoid weasel words"><span title="The material near this tag possibly uses too vague attribution or weasel words. (June 2013)">which?</span></a></i>]</sup> when the program is compiled the <code>to-string</code> for <code>&lt;window&gt;</code> is looked up and replaced with a pointer (more or less) to the method. In Dylan this occurs when the program is first run; the <a href="/wiki/Run_time_system" class="mw-redirect" title="Run time system">runtime</a> builds a table of method-name/parameters details and looks up methods dynamically via this table. That means that a function for a particular method can be located anywhere, not just in the compile-time unit. In the end the programmer is given considerable flexibility in terms of where to place their code, collecting it along class lines where appropriate, and functional lines where it's not.</p>
<p>The implication here is that a programmer can add functionality to existing classes by defining functions in a separate file. For instance, you might wish to add spell checking to all <code>&lt;string&gt;</code>s, which in most languages would require access to the source code of the string class—and such basic classes are rarely given out in source form. In Dylan (and other "extensible languages") the spell checking method could be added in the <code>spell-check</code> module, defining all of the classes on which it can be applied via the <code>define method</code> construct. In this case the actual functionality might be defined in a single generic function, which takes a string and returns the errors. When the <code>spell-check</code> module is compiled into your program, all strings (and other objects) will get the added functionality.</p>
<h2><span class="mw-headline" id="Apple_Dylan">Apple Dylan</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=7" title="Edit section: Apple Dylan">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div role="note" class="hatnote">Main article: <a href="/wiki/Apple_Dylan" title="Apple Dylan">Apple Dylan</a></div>
<p>Apple Dylan is the implementation of Dylan produced by <a href="/wiki/Apple_Computer" class="mw-redirect" title="Apple Computer">Apple Computer</a>. It was originally developed for the <a href="/wiki/Apple_Newton" title="Apple Newton">Apple Newton</a> product.</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=8" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/w/index.php?title=Dylan_Server_Pages&amp;action=edit&amp;redlink=1" class="new" title="Dylan Server Pages (page does not exist)">Dylan Server Pages</a></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit&amp;section=9" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a rel="nofollow" class="external text" href="http://opendylan.org/">Open Dylan</a> – Host of open source, optimizing Dylan compiler targeting Unix/Linux, Mac OS X, and Microsoft Windows</li>
<li><a rel="nofollow" class="external text" href="http://opendylan.org/books/drm/Language_Overview">Overview of the language</a></li>
<li><a rel="nofollow" class="external text" href="http://opendylan.org/documentation/intro-dylan/">An Introduction to Dylan</a></li>
<li><a rel="nofollow" class="external text" href="http://opendylan.org/books/drm/">The Dylan Reference Manual</a> – The core language and library definition</li>
<li><a rel="nofollow" class="external text" href="http://opendylan.org/about/apple-dylan/">Apple Dylan TR1</a></li>
<li><a rel="nofollow" class="external text" href="http://www.cise.ufl.edu/~jnw/Marlais/">The Marlais Dylan Interpreter</a> – An implementation of a subset of Dylan, suitable for bootstrapping a compiler</li>
<li><a rel="nofollow" class="external text" href="https://www.dmoz.org/Computers/Programming/Languages/Dylan/">Dylan</a> at <a href="/wiki/DMOZ" title="DMOZ">DMOZ</a></li>
</ul>


<!-- 
NewPP limit report
Parsed by mw1262
Cached time: 20170201003228
Cache expiry: 86400
Dynamic content: true
CPU time usage: 0.108 seconds
Real time usage: 0.154 seconds
Preprocessor visited node count: 815/1000000
Preprocessor generated node count: 0/1500000
Post‐expand include size: 15734/2097152 bytes
Template argument size: 2014/2097152 bytes
Highest expansion depth: 17/40
Expensive parser function count: 4/500
Lua time usage: 0.047/10.000 seconds
Lua memory usage: 1.64 MB/50 MB
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%  128.520      1 -total
 37.92%   48.734      2 Template:Infobox
 35.60%   45.748      1 Template:Infobox_programming_language
 31.67%   40.699      1 Template:Unreferenced
 19.47%   25.022      1 Template:Ambox
 14.73%   18.936      1 Template:Which
 13.29%   17.083      1 Template:Fix
  9.30%   11.950      1 Template:Infobox_software/simple
  7.65%    9.832      1 Template:Delink
  7.57%    9.723      1 Template:IPAc-en
-->

<!-- Saved in parser cache with key enwiki:pcache:idhash:8741-0!*!0!!en!4!* and timestamp 20170201003228 and revision id 748229815
 -->
<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Dylan_(programming_language)&amp;oldid=748229815">https://en.wikipedia.org/w/index.php?title=Dylan_(programming_language)&amp;oldid=748229815</a>"					</div>
				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Dylan_(programming_language)" title="Category:Dylan (programming language)">Dylan (programming language)</a></li><li><a href="/wiki/Category:Cross-platform_software" title="Category:Cross-platform software">Cross-platform software</a></li><li><a href="/wiki/Category:Programming_languages_created_in_the_1990s" title="Category:Programming languages created in the 1990s">Programming languages created in the 1990s</a></li><li><a href="/wiki/Category:Lisp_programming_language_family" title="Category:Lisp programming language family">Lisp programming language family</a></li><li><a href="/wiki/Category:Extensible_syntax_programming_languages" title="Category:Extensible syntax programming languages">Extensible syntax programming languages</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Articles_lacking_sources_from_June_2013" title="Category:Articles lacking sources from June 2013">Articles lacking sources from June 2013</a></li><li><a href="/wiki/Category:All_articles_lacking_sources" title="Category:All articles lacking sources">All articles lacking sources</a></li><li><a href="/wiki/Category:Pages_using_deprecated_image_syntax" title="Category:Pages using deprecated image syntax">Pages using deprecated image syntax</a></li><li><a href="/wiki/Category:All_articles_with_specifically_marked_weasel-worded_phrases" title="Category:All articles with specifically marked weasel-worded phrases">All articles with specifically marked weasel-worded phrases</a></li><li><a href="/wiki/Category:Articles_with_specifically_marked_weasel-worded_phrases_from_June_2013" title="Category:Articles with specifically marked weasel-worded phrases from June 2013">Articles with specifically marked weasel-worded phrases from June 2013</a></li><li><a href="/wiki/Category:Articles_with_DMOZ_links" title="Category:Articles with DMOZ links">Articles with DMOZ links</a></li></ul></div></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Dylan+%28programming+language%29" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Dylan+%28programming+language%29" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-main" class="selected"><span><a href="/wiki/Dylan_(programming_language)"  title="View the content page [c]" accesskey="c">Article</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Talk:Dylan_(programming_language)"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Talk</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view" class="selected"><span><a href="/wiki/Dylan_(programming_language)" >Read</a></span></li>
															<li id="ca-edit"><span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=edit"  title="Edit this page [e]" accesskey="e">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>
			<h3 id='p-interaction-label'>Interaction</h3>

			<div class="body">
									<ul>
						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Dylan_(programming_language)" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Dylan_(programming_language)" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Dylan_(programming_language)&amp;oldid=748229815" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Dylan_(programming_language)&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Q1268744" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Dylan_%28programming_language%29&amp;id=748229815" title="Information on how to cite this page">Cite this page</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>
			<h3 id='p-coll-print_export-label'>Print/export</h3>

			<div class="body">
									<ul>
						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Dylan+%28programming+language%29">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Dylan+%28programming+language%29&amp;returnto=Dylan+%28programming+language%29&amp;oldid=748229815&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Dylan_(programming_language)&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>Languages</h3>

			<div class="body">
									<ul>
						<li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D8%AF%D9%8A%D9%84%D8%A7%D9%86" title="ديلان – Arabic" lang="ar" hreflang="ar" class="interlanguage-link-target">العربية</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Dylan_(Programmiersprache)" title="Dylan (Programmiersprache) – German" lang="de" hreflang="de" class="interlanguage-link-target">Deutsch</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Dylan_(lenguaje_de_programaci%C3%B3n)" title="Dylan (lenguaje de programación) – Spanish" lang="es" hreflang="es" class="interlanguage-link-target">Español</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Dylan_(langage)" title="Dylan (langage) – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Dylan" title="Dylan – Galician" lang="gl" hreflang="gl" class="interlanguage-link-target">Galego</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Dylan_(linguaggio)" title="Dylan (linguaggio) – Italian" lang="it" hreflang="it" class="interlanguage-link-target">Italiano</a></li><li class="interlanguage-link interwiki-ms"><a href="https://ms.wikipedia.org/wiki/Dylan_(bahasa_pengaturcaraan)" title="Dylan (bahasa pengaturcaraan) – Malay" lang="ms" hreflang="ms" class="interlanguage-link-target">Bahasa Melayu</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Dylan" title="Dylan – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-no"><a href="https://no.wikipedia.org/wiki/Dylan_(programmeringsspr%C3%A5k)" title="Dylan (programmeringsspråk) – Norwegian" lang="no" hreflang="no" class="interlanguage-link-target">Norsk bokmål</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Dylan_(linguagem_de_programa%C3%A7%C3%A3o)" title="Dylan (linguagem de programação) – Portuguese" lang="pt" hreflang="pt" class="interlanguage-link-target">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/Dylan_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" title="Dylan (язык программирования) – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/Dylan_(%D0%BC%D0%BE%D0%B2%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)" title="Dylan (мова програмування) – Ukrainian" lang="uk" hreflang="uk" class="interlanguage-link-target">Українська</a></li>					</ul>
				<div class='after-portlet after-portlet-lang'><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Q1268744#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-info">
											<li id="footer-info-lastmod"> This page was last modified on 7 November 2016, at 03:13.</li>
											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
									</ul>
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Dylan_(programming_language)&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.108","walltime":"0.154","ppvisitednodes":{"value":815,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":15734,"limit":2097152},"templateargumentsize":{"value":2014,"limit":2097152},"expansiondepth":{"value":17,"limit":40},"expensivefunctioncount":{"value":4,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  128.520      1 -total"," 37.92%   48.734      2 Template:Infobox"," 35.60%   45.748      1 Template:Infobox_programming_language"," 31.67%   40.699      1 Template:Unreferenced"," 19.47%   25.022      1 Template:Ambox"," 14.73%   18.936      1 Template:Which"," 13.29%   17.083      1 Template:Fix","  9.30%   11.950      1 Template:Infobox_software/simple","  7.65%    9.832      1 Template:Delink","  7.57%    9.723      1 Template:IPAc-en"]},"scribunto":{"limitreport-timeusage":{"value":"0.047","limit":"10.000"},"limitreport-memusage":{"value":1723836,"limit":52428800}},"cachereport":{"origin":"mw1262","timestamp":"20170201003228","ttl":86400,"transientcontent":true}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":234,"wgHostname":"mw1262"});});</script>
	</body>
</html>
